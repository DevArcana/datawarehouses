<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/30/2021 7:07:34 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-6OSGPE0"
  DTS:CreatorName="DESKTOP-6OSGPE0\Scytlee"
  DTS:DTSID="{02777A17-E13B-40BF-B231-D786AC92A651}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.152"
  DTS:LocaleID="2057"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="231"
  DTS:VersionGUID="{A80E898F-2A57-4584-9AD4-D1ACD3226AA3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Fees]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{69311B76-C2FA-4978-A060-F45869002636}"
      DTS:ObjectName="Fees">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::DatasetsPath] + "Fees.csv"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\Repos\datawarehouses\datasets\Fees.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="RECORD ID"
              DTS:DTSID="{3095D2BF-BB7D-4E90-A222-BDB71753603B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="RECORD TYPE"
              DTS:DTSID="{62F812AE-DC53-4852-A769-0A77BAC9B7CE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="300"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="BUSINESS NAME"
              DTS:DTSID="{ABD5C252-3A3F-4AF6-A55A-49F6F30D3858}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="BUSINESS NAME2"
              DTS:DTSID="{70FB1610-6789-42B0-BEEB-633E62FB078F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="INDUSTRY"
              DTS:DTSID="{EBD88E15-48BD-4880-8CAD-44BF7742179A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE SEQUENCE ID"
              DTS:DTSID="{A1A46A4D-2E6F-4928-B144-2486F453D851}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE TYPE"
              DTS:DTSID="{A784E359-0157-468C-B65B-7CF0EAD58D26}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE DESCRIPTION"
              DTS:DTSID="{A498340F-D79A-48B7-9E17-6B6B9E0D4BA2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE AMOUNT"
              DTS:DTSID="{144E9F8D-2A22-48A1-89C6-116AF606C441}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE DATE"
              DTS:DTSID="{E359E96B-530A-42F8-8BF8-4C274D8E086E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE STATUS"
              DTS:DTSID="{B1E8DB33-4D91-4699-9B6A-9E5F79D5BA11}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Licenses]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{EF9162DA-BED7-4C94-9A7C-1293CD2DEADB}"
      DTS:ObjectName="Licenses">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::DatasetsPath] + "Licenses.csv"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\Repos\datawarehouses\datasets\Licenses.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DCA License Number"
              DTS:DTSID="{09A95D4B-17E4-4ABE-B896-C22EE4AB68AD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="License Type"
              DTS:DTSID="{3AC55C18-3094-460C-B7DB-500CF26F2920}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="License Expiration Date"
              DTS:DTSID="{3ACDD606-766C-4C0D-BC98-3B7EE00B2AB7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="License Status"
              DTS:DTSID="{03633C8F-87BB-4459-B8B2-496685B8C2BC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="License Creation Date"
              DTS:DTSID="{6347771E-670A-4836-85E2-DBB97F71CE82}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Industry"
              DTS:DTSID="{A8CEC2FA-6447-4072-B9B5-4C5F74BA05A4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="300"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Business Name"
              DTS:DTSID="{6D7A9F6B-325A-4B70-8193-A3AB4DE818D0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Business Name 2"
              DTS:DTSID="{51DC313C-AAE9-460C-817E-74C6DEAE8745}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address Building"
              DTS:DTSID="{74B77BED-AFC5-40E2-8850-0D1319F56363}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="75"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address Street Name"
              DTS:DTSID="{043AE3C3-48E0-414F-AEDE-6CDAE9CAED86}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="75"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Secondary Address Street Name"
              DTS:DTSID="{2804A0A3-767C-4223-999D-11A802ED73EF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address City"
              DTS:DTSID="{0548B51A-FA7B-4179-8A02-AE47C1027093}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address State"
              DTS:DTSID="{9EB35E58-E322-4EDF-B25D-8A2B83293BD5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address ZIP"
              DTS:DTSID="{7B31D2B4-1261-4DA0-B3F0-CDEF5DB5471D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Contact Phone Number"
              DTS:DTSID="{2C916290-93D5-4A63-854E-2397B03753B5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address Borough"
              DTS:DTSID="{57BD4BEF-9BB9-4282-8135-EFF09A5636E8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Borough Code"
              DTS:DTSID="{4D174C16-689C-446A-ABEE-7C430F9C41AF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Community Board"
              DTS:DTSID="{8FD6B99D-F784-400C-BE75-4600E444B676}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Council District"
              DTS:DTSID="{A5D31D70-640D-46B4-8497-75D8CF5E4A9C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="BIN"
              DTS:DTSID="{5F524C3A-B3D5-4E87-B0C1-8DAFD6484089}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="BBL"
              DTS:DTSID="{73BB4223-A938-4C1E-9BB1-B528606C1B65}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="NTA"
              DTS:DTSID="{FC55B4F8-F2C2-47A3-B57A-5C9A10345E7D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Census Tract"
              DTS:DTSID="{6969833B-3754-4C63-B647-2671473224D0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="300"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Detail"
              DTS:DTSID="{5441AD61-C466-45E8-9E01-641C38F3AAD5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Longitude"
              DTS:DTSID="{342FA2AB-481A-480A-971C-1AB294508307}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Latitude"
              DTS:DTSID="{5F0AEC43-CF9E-4798-8532-E2D25CF2A939}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Location"
              DTS:DTSID="{D7FED7E0-83CB-4B5E-B7A3-11DF0EB50867}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.Miniproject]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2AE594AF-1E0E-4046-88A5-B26D8D809332}"
      DTS:ObjectName="LocalHost.Miniproject">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=Miniproject;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Payments]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{0760D50B-BAB1-4D0E-8062-50A85CD0002F}"
      DTS:ObjectName="Payments">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::DatasetsPath] + "Payments.csv"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\Repos\datawarehouses\datasets\Payments.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="RECORD ID"
              DTS:DTSID="{738102C0-30FF-492D-9DE9-F2044BEF0427}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="RECORD DYPE"
              DTS:DTSID="{80ED8177-7D0A-4096-9053-3EBA46C0296F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="300"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="BUSINESS NAME"
              DTS:DTSID="{AAF5A4D5-10D8-41DD-A6D7-FE5C3290B06E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="BUSINESS NAME2"
              DTS:DTSID="{8D5CF154-312E-4E82-B0C4-05F10572EAE8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="INDUSTRY"
              DTS:DTSID="{1DDCF97A-DB9C-49CA-9896-92EFCD48444C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE SEQUENCE ID"
              DTS:DTSID="{316C71BA-0E76-469D-9F99-76EE65E6E07C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE TYPE"
              DTS:DTSID="{F9C31C92-29C2-4984-9BBF-669F235E870D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE DESCRIPTION"
              DTS:DTSID="{617A7243-9197-4643-8864-00705BD86815}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="PAYMENT AMOUNT"
              DTS:DTSID="{89D92C6F-EE18-4A6E-82DC-730C26B10D42}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="PAYMENT DATE"
              DTS:DTSID="{55EF9635-A9C7-4F92-B513-96B0D8DD4E3C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="TRANSACTION TYPE"
              DTS:DTSID="{4A815789-CE6D-46F1-98F3-A656597DFE42}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Filepath for dataset files"
      DTS:DTSID="{D1B61058-B1AF-4C83-884A-4F2CA7CF4755}"
      DTS:ObjectName="DatasetsPath"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Repos\datawarehouses\datasets\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B56DE875-84C7-4BBE-AB58-C61F03E84544}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SessionId">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create business dimension"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{F5922472-E4A6-4B66-A339-505AB064E797}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create business dimension"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create business dimension\(starting point for dummy business)"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="(starting point for dummy business)"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT 1 AS [X];</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create business dimension\(starting point for dummy business).Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create business dimension\(starting point for dummy business).Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create business dimension\(starting point for dummy business).Outputs[OLE DB Source Output].Columns[X]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\(starting point for dummy business).Outputs[OLE DB Source Output].ExternalColumns[X]"
                      lineageId="Package\Create business dimension\(starting point for dummy business).Outputs[OLE DB Source Output].Columns[X]"
                      name="X"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create business dimension\(starting point for dummy business).Outputs[OLE DB Source Output].ExternalColumns[X]"
                      dataType="i4"
                      name="X" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create business dimension\(starting point for dummy business).Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create business dimension\(starting point for dummy business).Outputs[OLE DB Source Error Output].Columns[X]"
                      dataType="i4"
                      lineageId="Package\Create business dimension\(starting point for dummy business).Outputs[OLE DB Source Error Output].Columns[X]"
                      name="X" />
                    <outputColumn
                      refId="Package\Create business dimension\(starting point for dummy business).Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create business dimension\(starting point for dummy business).Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create business dimension\(starting point for dummy business).Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create business dimension\(starting point for dummy business).Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create business dimension\Generate dummy business"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Generate dummy business"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Create business dimension\Generate dummy business.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Create business dimension\Generate dummy business.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[BusinessType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[BusinessType]"
                      name="BusinessType"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressBuilding]"
                      name="AddressBuilding"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressStreetName]"
                      name="AddressStreetName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressCity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressCity]"
                      name="AddressCity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressState]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressState]"
                      name="AddressState"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressZIP]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressZIP]"
                      name="AddressZIP"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressBorough]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressBorough]"
                      name="AddressBorough"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[BoroughCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[BoroughCode]"
                      name="BoroughCode"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[CommunityBoard]"
                      name="CommunityBoard"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[CensusTract]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[CensusTract]"
                      name="CensusTract"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[Longitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[Longitude]"
                      name="Longitude"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[Latitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[Latitude]"
                      name="Latitude"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">""</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Create business dimension\Generate dummy business.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create business dimension\Generate missing address columns"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Generate missing address columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Create business dimension\Generate missing address columns.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Create business dimension\Generate missing address columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[BusinessType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[BusinessType]"
                      name="BusinessType"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressBuilding]"
                      name="AddressBuilding"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressStreetName]"
                      name="AddressStreetName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressCity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressCity]"
                      name="AddressCity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressState]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressState]"
                      name="AddressState"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressZIP]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressZIP]"
                      name="AddressZIP"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressBorough]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressBorough]"
                      name="AddressBorough"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[BoroughCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[BoroughCode]"
                      name="BoroughCode"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[CommunityBoard]"
                      name="CommunityBoard"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[CensusTract]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[CensusTract]"
                      name="CensusTract"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[Longitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[Longitude]"
                      name="Longitude"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[Latitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[Latitude]"
                      name="Latitude"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"(no data)"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"(no data)"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Create business dimension\Generate missing address columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get distinct businesses with most recent addresses from staged license data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT *
FROM (
    SELECT [BusinessType], 
           [BusinessName], 
           [BusinessName2], 
           [AddressBuilding], 
           [AddressStreetName], 
           [SecondaryAddressStreetName], 
           [AddressCity], 
           [AddressState], 
           [AddressZIP], 
           [AddressBorough], 
           [BoroughCode], 
           [CommunityBoard], 
           [CouncilDistrict], 
           [CensusTract], 
           [Longitude], 
           [Latitude], 
           ROW_NUMBER() OVER (PARTITION BY [BusinessName], [BusinessName2] ORDER BY [LicenseCreationDate] DESC) AS [RowNumber]
    FROM [DWSTAGE].[LicenseStage]
    WHERE [BusinessName] != '(no data)'
) [T]
WHERE [RowNumber] = 1;</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]"
                      name="AddressBuilding"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      length="75"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]"
                      name="AddressStreetName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      length="75"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressCity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressCity]"
                      name="AddressCity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressState]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressState]"
                      name="AddressState"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressBorough]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressBorough]"
                      name="AddressBorough"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[BoroughCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[BoroughCode]"
                      name="BoroughCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]"
                      name="CommunityBoard"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[CensusTract]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[CensusTract]"
                      name="CensusTract"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[Longitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[Longitude]"
                      name="Longitude"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[Latitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[Latitude]"
                      name="Latitude"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[BusinessType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessType]"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[BusinessType]"
                      name="BusinessType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressZIP]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressZIP]"
                      name="AddressZIP"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      name="BusinessType" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[RowNumber]"
                      dataType="i8"
                      name="RowNumber" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[AddressBuilding]"
                      name="AddressBuilding" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[AddressStreetName]"
                      name="AddressStreetName" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[AddressCity]"
                      name="AddressCity" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[AddressState]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[AddressState]"
                      name="AddressState" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[AddressBorough]"
                      name="AddressBorough" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[AddressZIP]"
                      name="AddressZIP" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[BoroughCode]"
                      name="BoroughCode" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[CommunityBoard]"
                      name="CommunityBoard" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[CensusTract]"
                      name="CensusTract" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[Longitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[Latitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessType]"
                      name="BusinessType" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get distinct businesses without addresses from staged fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT [BusinessName], [BusinessName2]
FROM [DWSTAGE].[FeeStage]
WHERE [BusinessName] != '(no data)'
EXCEPT
SELECT [BusinessName], [BusinessName2]
FROM (
    SELECT [BusinessName], 
           [BusinessName2],
           ROW_NUMBER() OVER (PARTITION BY [BusinessName], [BusinessName2] ORDER BY [LicenseCreationDate] DESC) AS [RowNumber]
    FROM [DWSTAGE].[LicenseStage]
	WHERE [BusinessName] != '(no data)'
) [T]
WHERE [RowNumber] = 1;</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create business dimension\Insert data to BusinessDim table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data to BusinessDim table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[BusinessDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create business dimension\Insert data to BusinessDim table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[AddressBuilding]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressBuilding]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[AddressStreetName]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressStreetName]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[SecondaryAddressStreetName]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[SecondaryAddressStreetName]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[AddressCity]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressCity]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[AddressState]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressState]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[AddressZIP]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressZIP]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[AddressBorough]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressBorough]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[BoroughCode]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[BoroughCode]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[CommunityBoard]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[CommunityBoard]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[CouncilDistrict]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[CouncilDistrict]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[CensusTract]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[CensusTract]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[Longitude]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[Latitude]" />
                    <inputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      externalMetadataColumnId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessType]"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[BusinessType]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessId]"
                      dataType="i4"
                      name="BusinessId" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      name="BusinessType" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create business dimension\Insert data to BusinessDim table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create business dimension\Insert data to BusinessDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create business dimension\Insert data to BusinessDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create business dimension\Insert data to BusinessDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create business dimension\Sort by BusinessName and BusinessName2"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by BusinessName and BusinessName2"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBuilding]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressStreetName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressCity]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressState]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBorough]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BoroughCode]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CommunityBoard]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CensusTract]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Longitude]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Latitude]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressZIP]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[BusinessName]"
                      name="BusinessName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressBuilding]"
                      name="AddressBuilding">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressStreetName]"
                      name="AddressStreetName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressCity]"
                      name="AddressCity">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressState]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressState]"
                      name="AddressState">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressBorough]"
                      name="AddressBorough">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[BoroughCode]"
                      name="BoroughCode">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[CommunityBoard]"
                      name="CommunityBoard">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[CensusTract]"
                      name="CensusTract">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[Longitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[Longitude]"
                      name="Longitude">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[Latitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[Latitude]"
                      name="Latitude">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[BusinessType]"
                      name="BusinessType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output].Columns[AddressZIP]"
                      name="AddressZIP">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create business dimension\Unify business data"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Unify business data"
              version="1">
              <inputs>
                <input
                  refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="BusinessType"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="AddressBuilding"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="AddressStreetName"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="AddressCity"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="AddressState"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="AddressZIP"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="AddressBorough"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="BoroughCode"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="CommunityBoard"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="CensusTract"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="Longitude"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="Latitude"
                      lineageId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4]"
                  hasSideEffects="true"
                  name="Union All Input 4">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="BusinessType"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="AddressBuilding"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="AddressStreetName"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="AddressCity"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="AddressState"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="AddressZIP"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="AddressBorough"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="BoroughCode"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="CommunityBoard"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="CensusTract"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="Longitude"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="Latitude"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="BusinessName"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedName="BusinessName2"
                      lineageId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create business dimension\Unify business data.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBuilding]"
                      name="AddressBuilding" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressStreetName]"
                      name="AddressStreetName" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressCity]"
                      name="AddressCity" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressState]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressState]"
                      name="AddressState" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressBorough]"
                      name="AddressBorough" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BoroughCode]"
                      name="BoroughCode" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CommunityBoard]"
                      name="CommunityBoard" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CouncilDistrict]"
                      name="CouncilDistrict" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[CensusTract]"
                      name="CensusTract" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Longitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Latitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[BusinessType]"
                      name="BusinessType" />
                    <outputColumn
                      refId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1].Columns[AddressZIP]"
                      name="AddressZIP" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create business dimension.Paths[Derived Column Output]"
              endId="Package\Create business dimension\Unify business data.Inputs[Union All Input 2]"
              name="Derived Column Output"
              startId="Package\Create business dimension\Generate missing address columns.Outputs[Derived Column Output]" />
            <path
              refId="Package\Create business dimension.Paths[Derived Column Output1]"
              endId="Package\Create business dimension\Unify business data.Inputs[Union All Input 4]"
              name="Derived Column Output"
              startId="Package\Create business dimension\Generate dummy business.Outputs[Derived Column Output]" />
            <path
              refId="Package\Create business dimension.Paths[OLE DB Source Output]"
              endId="Package\Create business dimension\Generate missing address columns.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Create business dimension\Get distinct businesses without addresses from staged fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create business dimension.Paths[OLE DB Source Output1]"
              endId="Package\Create business dimension\Unify business data.Inputs[Union All Input 1]"
              name="OLE DB Source Output"
              startId="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create business dimension.Paths[OLE DB Source Output2]"
              endId="Package\Create business dimension\Generate dummy business.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Create business dimension\(starting point for dummy business).Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create business dimension.Paths[Sort Output]"
              endId="Package\Create business dimension\Insert data to BusinessDim table.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Outputs[Sort Output]" />
            <path
              refId="Package\Create business dimension.Paths[Union All Output 1]"
              endId="Package\Create business dimension\Sort by BusinessName and BusinessName2.Inputs[Sort Input]"
              name="Union All Output 1"
              startId="Package\Create business dimension\Unify business data.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create fee dimension"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{6BC5D9B0-53D2-4951-BD27-F6EF3264E57C}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create fee dimension"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT [Industry], [RecordType], [FeeType], [FeeDescription]
FROM [DWSTAGE].[FeeStage] [F];</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      length="50"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      name="RecordType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      length="50"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      name="FeeType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      length="100"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      name="RecordType" />
                    <outputColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      name="FeeType" />
                    <outputColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      name="FeeDescription" />
                    <outputColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create fee dimension\Insert data to FeeDim table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data to FeeDim table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[FeeDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create fee dimension\Insert data to FeeDim table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input].ExternalColumns[IndustryId]"
                      lineageId="Package\Create fee dimension\Sort.Outputs[Sort Output].Columns[IndustryId]" />
                    <inputColumn
                      refId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      lineageId="Package\Create fee dimension\Sort.Outputs[Sort Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      cachedSortKeyPosition="3"
                      externalMetadataColumnId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      lineageId="Package\Create fee dimension\Sort.Outputs[Sort Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      cachedSortKeyPosition="4"
                      externalMetadataColumnId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      lineageId="Package\Create fee dimension\Sort.Outputs[Sort Output].Columns[FeeDescription]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input].ExternalColumns[FeeId]"
                      dataType="i4"
                      name="FeeId" />
                    <externalMetadataColumn
                      refId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                    <externalMetadataColumn
                      refId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create fee dimension\Insert data to FeeDim table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create fee dimension\Insert data to FeeDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create fee dimension\Insert data to FeeDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create fee dimension\Insert data to FeeDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create fee dimension\Insert data to FeeDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create fee dimension\Join on Industry"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join on Industry"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create fee dimension\Join on Industry.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create fee dimension\Join on Industry.Inputs[Merge Join Left Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Create fee dimension\Join on Industry.Inputs[Merge Join Left Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Create fee dimension\Join on Industry.Inputs[Merge Join Left Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Create fee dimension\Join on Industry.Inputs[Merge Join Left Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output].Columns[FeeDescription]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create fee dimension\Join on Industry.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create fee dimension\Join on Industry.Inputs[Merge Join Right Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create fee dimension\Sort alphabetically.Outputs[Sort Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Create fee dimension\Join on Industry.Inputs[Merge Join Right Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Create fee dimension\Sort alphabetically.Outputs[Sort Output].Columns[IndustryId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[IndustryId]"
                      name="IndustryId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create fee dimension\Join on Industry.Inputs[Merge Join Right Input].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create fee dimension\Join on Industry.Inputs[Merge Join Left Input].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create fee dimension\Join on Industry.Inputs[Merge Join Left Input].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create fee dimension\Join on Industry.Inputs[Merge Join Left Input].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create fee dimension\Load industry dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load industry dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[IndustryDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create fee dimension\Load industry dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      lineageId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      name="IndustryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                    <externalMetadataColumn
                      refId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      name="IndustryId" />
                    <outputColumn
                      refId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create fee dimension\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create fee dimension\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create fee dimension\Sort.Inputs[Sort Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[IndustryId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create fee dimension\Sort.Inputs[Sort Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[RecordType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create fee dimension\Sort.Inputs[Sort Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[FeeType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create fee dimension\Sort.Inputs[Sort Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create fee dimension\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create fee dimension\Sort.Outputs[Sort Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Create fee dimension\Sort.Outputs[Sort Output].Columns[IndustryId]"
                      name="IndustryId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create fee dimension\Sort.Outputs[Sort Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create fee dimension\Sort.Outputs[Sort Output].Columns[RecordType]"
                      name="RecordType"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create fee dimension\Sort.Outputs[Sort Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create fee dimension\Sort.Outputs[Sort Output].Columns[FeeType]"
                      name="FeeType"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create fee dimension\Sort.Outputs[Sort Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create fee dimension\Sort.Outputs[Sort Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create fee dimension\Sort alphabetically"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort alphabetically"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create fee dimension\Sort alphabetically.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create fee dimension\Sort alphabetically.Inputs[Sort Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create fee dimension\Sort alphabetically.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create fee dimension\Sort alphabetically.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create fee dimension\Sort alphabetically.Outputs[Sort Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Create fee dimension\Sort alphabetically.Outputs[Sort Output].Columns[IndustryId]"
                      name="IndustryId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create fee dimension\Sort alphabetically.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create fee dimension\Sort alphabetically.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create fee dimension\Sort fee data by Industry"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort fee data by Industry"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create fee dimension\Sort fee data by Industry.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create fee dimension\Sort fee data by Industry.Inputs[Sort Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create fee dimension\Sort fee data by Industry.Inputs[Sort Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create fee dimension\Sort fee data by Industry.Inputs[Sort Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create fee dimension\Sort fee data by Industry.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create fee dimension.Paths[Merge Join Output]"
              endId="Package\Create fee dimension\Sort.Inputs[Sort Input]"
              name="Merge Join Output"
              startId="Package\Create fee dimension\Join on Industry.Outputs[Merge Join Output]" />
            <path
              refId="Package\Create fee dimension.Paths[OLE DB Source Output]"
              endId="Package\Create fee dimension\Sort fee data by Industry.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create fee dimension.Paths[OLE DB Source Output1]"
              endId="Package\Create fee dimension\Sort alphabetically.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Create fee dimension\Load industry dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create fee dimension.Paths[Sort Output]"
              endId="Package\Create fee dimension\Join on Industry.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Create fee dimension\Sort fee data by Industry.Outputs[Sort Output]" />
            <path
              refId="Package\Create fee dimension.Paths[Sort Output1]"
              endId="Package\Create fee dimension\Join on Industry.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Create fee dimension\Sort alphabetically.Outputs[Sort Output]" />
            <path
              refId="Package\Create fee dimension.Paths[Sort Output2]"
              endId="Package\Create fee dimension\Insert data to FeeDim table.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\Create fee dimension\Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create industry dimension"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{4078723A-E824-4EB4-AFA1-27E545F5AE34}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create industry dimension"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create industry dimension\Get distinct industries from staged fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get distinct industries from staged fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT [Industry]
FROM [DWSTAGE].[FeeStage];</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create industry dimension\Get distinct industries from staged fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create industry dimension\Get distinct industries from staged license data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get distinct industries from staged license data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT [Industry]
FROM [DWSTAGE].[LicenseStage];</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create industry dimension\Get distinct industries from staged license data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create industry dimension\Insert data to IndustryDim table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data to IndustryDim table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[IndustryDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create industry dimension\Insert data to IndustryDim table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create industry dimension\Insert data to IndustryDim table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create industry dimension\Insert data to IndustryDim table.Inputs[OLE DB Destination Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Create industry dimension\Insert data to IndustryDim table.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      lineageId="Package\Create industry dimension\Sort by Industry and remove duplicates.Outputs[Sort Output].Columns[Industry]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create industry dimension\Insert data to IndustryDim table.Inputs[OLE DB Destination Input].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                    <externalMetadataColumn
                      refId="Package\Create industry dimension\Insert data to IndustryDim table.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create industry dimension\Insert data to IndustryDim table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Create industry dimension\Insert data to IndustryDim table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create industry dimension\Insert data to IndustryDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create industry dimension\Insert data to IndustryDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create industry dimension\Insert data to IndustryDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create industry dimension\Insert data to IndustryDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create industry dimension\Sort by Industry and remove duplicates"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by Industry and remove duplicates"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create industry dimension\Sort by Industry and remove duplicates.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create industry dimension\Sort by Industry and remove duplicates.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Create industry dimension\Unify industry data.Outputs[Union All Output 1].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create industry dimension\Sort by Industry and remove duplicates.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create industry dimension\Sort by Industry and remove duplicates.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create industry dimension\Sort by Industry and remove duplicates.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create industry dimension\Unify industry data.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create industry dimension\Unify industry data"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Unify industry data"
              version="1">
              <inputs>
                <input
                  refId="Package\Create industry dimension\Unify industry data.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create industry dimension\Unify industry data.Inputs[Union All Input 1].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create industry dimension\Unify industry data.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create industry dimension\Unify industry data.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create industry dimension\Unify industry data.Inputs[Union All Input 2].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create industry dimension\Unify industry data.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create industry dimension\Unify industry data.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create industry dimension\Unify industry data.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create industry dimension\Unify industry data.Outputs[Union All Output 1].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create industry dimension\Unify industry data.Outputs[Union All Output 1].Columns[Industry]"
                      name="Industry" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create industry dimension.Paths[OLE DB Source Output]"
              endId="Package\Create industry dimension\Unify industry data.Inputs[Union All Input 1]"
              name="OLE DB Source Output"
              startId="Package\Create industry dimension\Get distinct industries from staged license data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create industry dimension.Paths[OLE DB Source Output1]"
              endId="Package\Create industry dimension\Unify industry data.Inputs[Union All Input 2]"
              name="OLE DB Source Output"
              startId="Package\Create industry dimension\Get distinct industries from staged fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create industry dimension.Paths[Sort Output]"
              endId="Package\Create industry dimension\Insert data to IndustryDim table.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\Create industry dimension\Sort by Industry and remove duplicates.Outputs[Sort Output]" />
            <path
              refId="Package\Create industry dimension.Paths[Union All Output 1]"
              endId="Package\Create industry dimension\Sort by Industry and remove duplicates.Inputs[Sort Input]"
              name="Union All Output 1"
              startId="Package\Create industry dimension\Unify industry data.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create license fact table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{37457312-B41D-4C90-B3DD-5D28173D0F96}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create license fact table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create license fact table\Calculate license duration"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Calculate license duration"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Create license fact table\Calculate license duration.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create license fact table\Calculate license duration.Inputs[Derived Column Input].Columns[CreationDate]"
                      cachedDataType="dbDate"
                      cachedName="CreationDate"
                      lineageId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[CreationDate]" />
                    <inputColumn
                      refId="Package\Create license fact table\Calculate license duration.Inputs[Derived Column Input].Columns[ExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="ExpirationDate"
                      lineageId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[ExpirationDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create license fact table\Calculate license duration.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Create license fact table\Calculate license duration.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Calculate license duration.Outputs[Derived Column Output].Columns[DurationInDays]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Create license fact table\Calculate license duration.Outputs[Derived Column Output].Columns[DurationInDays]"
                      name="DurationInDays"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[ISNULL](#{Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[CreationDate]}) || [ISNULL](#{Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[ExpirationDate]}) ? NULL(DT_I4) : [DATEDIFF]("DAY",#{Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[CreationDate]},#{Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[ExpirationDate]}) + 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(CreationDate) || ISNULL(ExpirationDate) ? NULL(DT_I4) : DATEDIFF("DAY",CreationDate,ExpirationDate) + 1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create license fact table\Calculate license duration.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Create license fact table\Calculate license duration.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Calculate license duration.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Calculate license duration.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create license fact table\Calculate license duration.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Calculate license duration.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create license fact table\Get industry dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get industry dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[IndustryDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create license fact table\Get industry dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      lineageId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      name="IndustryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      name="IndustryId" />
                    <outputColumn
                      refId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create license fact table\Get selected columns from staged license data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get selected columns from staged license data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create license fact table\Get selected columns from staged license data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[CreationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[CreationDate]"
                      name="CreationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[ExpirationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[ExpirationDate]"
                      name="ExpirationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseNumber]"
                      length="50"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]"
                      name="LicenseNumber"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      dataType="dbDate"
                      name="LicenseCreationDate" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      dataType="dbDate"
                      name="LicenseExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="LicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      name="BusinessType" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseNumber]"
                      name="LicenseNumber" />
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseCreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate" />
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate" />
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create license fact table\Insert data to LicenseFact table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data to LicenseFact table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[LicenseFact]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create license fact table\Insert data to LicenseFact table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      externalMetadataColumnId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseNumber]"
                      lineageId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[LicenseNumber]" />
                    <inputColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      externalMetadataColumnId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessId]"
                      lineageId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[BusinessId]" />
                    <inputColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].Columns[DurationInDays]"
                      cachedDataType="i4"
                      cachedName="DurationInDays"
                      externalMetadataColumnId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].ExternalColumns[DurationInDays]"
                      lineageId="Package\Create license fact table\Calculate license duration.Outputs[Derived Column Output].Columns[DurationInDays]" />
                    <inputColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].Columns[CreationDate]"
                      cachedDataType="dbDate"
                      cachedName="CreationDate"
                      externalMetadataColumnId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].ExternalColumns[CreationDate]"
                      lineageId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[CreationDate]" />
                    <inputColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].Columns[ExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="ExpirationDate"
                      externalMetadataColumnId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].ExternalColumns[ExpirationDate]"
                      lineageId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[ExpirationDate]" />
                    <inputColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      externalMetadataColumnId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].ExternalColumns[IndustryId]"
                      lineageId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[IndustryId]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="LicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessId]"
                      dataType="i4"
                      name="BusinessId" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].ExternalColumns[DurationInDays]"
                      dataType="i4"
                      name="DurationInDays" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].ExternalColumns[CreationDate]"
                      dataType="dbDate"
                      name="CreationDate" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].ExternalColumns[ExpirationDate]"
                      dataType="dbDate"
                      name="ExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create license fact table\Insert data to LicenseFact table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Insert data to LicenseFact table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create license fact table\Insert data to LicenseFact table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Insert data to LicenseFact table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create license fact table\Join on business names"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join on business names"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">2</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create license fact table\Join on business names.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create license fact table\Join on business names.Inputs[Merge Join Left Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Create license fact table\Join on business names.Inputs[Merge Join Left Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Create license fact table\Join on business names.Inputs[Merge Join Left Input].Columns[CreationDate]"
                      cachedDataType="dbDate"
                      cachedName="CreationDate"
                      lineageId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[CreationDate]" />
                    <inputColumn
                      refId="Package\Create license fact table\Join on business names.Inputs[Merge Join Left Input].Columns[ExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="ExpirationDate"
                      lineageId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[ExpirationDate]" />
                    <inputColumn
                      refId="Package\Create license fact table\Join on business names.Inputs[Merge Join Left Input].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[LicenseNumber]" />
                    <inputColumn
                      refId="Package\Create license fact table\Join on business names.Inputs[Merge Join Left Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[Industry]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create license fact table\Join on business names.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create license fact table\Join on business names.Inputs[Merge Join Right Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create license fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Create license fact table\Join on business names.Inputs[Merge Join Right Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Create license fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Create license fact table\Join on business names.Inputs[Merge Join Right Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create license fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[CreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[CreationDate]"
                      name="CreationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create license fact table\Join on business names.Inputs[Merge Join Left Input].Columns[CreationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[ExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[ExpirationDate]"
                      name="ExpirationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create license fact table\Join on business names.Inputs[Merge Join Left Input].Columns[ExpirationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[LicenseNumber]"
                      name="LicenseNumber">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create license fact table\Join on business names.Inputs[Merge Join Left Input].Columns[LicenseNumber]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[Industry]"
                      name="Industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create license fact table\Join on business names.Inputs[Merge Join Left Input].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create license fact table\Join on business names.Inputs[Merge Join Right Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create license fact table\Join on Industry"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join on Industry"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create license fact table\Join on Industry.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create license fact table\Join on Industry.Inputs[Merge Join Left Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Create license fact table\Join on Industry.Inputs[Merge Join Left Input].Columns[CreationDate]"
                      cachedDataType="dbDate"
                      cachedName="CreationDate"
                      lineageId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[CreationDate]" />
                    <inputColumn
                      refId="Package\Create license fact table\Join on Industry.Inputs[Merge Join Left Input].Columns[ExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="ExpirationDate"
                      lineageId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[ExpirationDate]" />
                    <inputColumn
                      refId="Package\Create license fact table\Join on Industry.Inputs[Merge Join Left Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[BusinessId]" />
                    <inputColumn
                      refId="Package\Create license fact table\Join on Industry.Inputs[Merge Join Left Input].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[LicenseNumber]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create license fact table\Join on Industry.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create license fact table\Join on Industry.Inputs[Merge Join Right Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create license fact table\Sort alphabetically.Outputs[Sort Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Create license fact table\Join on Industry.Inputs[Merge Join Right Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Create license fact table\Sort alphabetically.Outputs[Sort Output].Columns[IndustryId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[CreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[CreationDate]"
                      name="CreationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create license fact table\Join on Industry.Inputs[Merge Join Left Input].Columns[CreationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[ExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[ExpirationDate]"
                      name="ExpirationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create license fact table\Join on Industry.Inputs[Merge Join Left Input].Columns[ExpirationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create license fact table\Join on Industry.Inputs[Merge Join Left Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[IndustryId]"
                      name="IndustryId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create license fact table\Join on Industry.Inputs[Merge Join Right Input].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output].Columns[LicenseNumber]"
                      name="LicenseNumber">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create license fact table\Join on Industry.Inputs[Merge Join Left Input].Columns[LicenseNumber]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create license fact table\Load business dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load business dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[BusinessDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create license fact table\Load business dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessId]"
                      lineageId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]"
                      name="BusinessId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessId]"
                      dataType="i4"
                      name="BusinessId" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      name="BusinessType" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessId]"
                      name="BusinessId" />
                    <outputColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create license fact table\Sort alphabetically"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort alphabetically"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create license fact table\Sort alphabetically.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create license fact table\Sort alphabetically.Inputs[Sort Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create license fact table\Sort alphabetically.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create license fact table\Sort alphabetically.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Sort alphabetically.Outputs[Sort Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Sort alphabetically.Outputs[Sort Output].Columns[IndustryId]"
                      name="IndustryId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Sort alphabetically.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create license fact table\Sort alphabetically.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create license fact table\Sort business data by business names"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort business data by business names"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create license fact table\Sort business data by business names.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create license fact table\Sort business data by business names.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create license fact table\Sort business data by business names.Inputs[Sort Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create license fact table\Sort business data by business names.Inputs[Sort Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create license fact table\Sort business data by business names.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Create license fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessName]"
                      name="BusinessName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create license fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create license fact table\Sort by Industry"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by Industry"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create license fact table\Sort by Industry.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create license fact table\Sort by Industry.Inputs[Sort Input].Columns[CreationDate]"
                      cachedDataType="dbDate"
                      cachedName="CreationDate"
                      lineageId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[CreationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create license fact table\Sort by Industry.Inputs[Sort Input].Columns[ExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="ExpirationDate"
                      lineageId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[ExpirationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create license fact table\Sort by Industry.Inputs[Sort Input].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[LicenseNumber]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create license fact table\Sort by Industry.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create license fact table\Sort by Industry.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[CreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[CreationDate]"
                      name="CreationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[CreationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[ExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[ExpirationDate]"
                      name="ExpirationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[ExpirationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[LicenseNumber]"
                      name="LicenseNumber">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[LicenseNumber]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Join on business names.Outputs[Merge Join Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create license fact table\Sort license data by business names"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort license data by business names"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create license fact table\Sort license data by business names.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create license fact table\Sort license data by business names.Inputs[Sort Input].Columns[CreationDate]"
                      cachedDataType="dbDate"
                      cachedName="CreationDate"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[CreationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create license fact table\Sort license data by business names.Inputs[Sort Input].Columns[ExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="ExpirationDate"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[ExpirationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create license fact table\Sort license data by business names.Inputs[Sort Input].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create license fact table\Sort license data by business names.Inputs[Sort Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create license fact table\Sort license data by business names.Inputs[Sort Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create license fact table\Sort license data by business names.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[CreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[CreationDate]"
                      name="CreationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[CreationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[ExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[ExpirationDate]"
                      name="ExpirationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[ExpirationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[LicenseNumber]"
                      name="LicenseNumber">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[BusinessName]"
                      name="BusinessName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[BusinessName2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output].Columns[Industry]"
                      name="Industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create license fact table.Paths[Derived Column Output]"
              endId="Package\Create license fact table\Insert data to LicenseFact table.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Create license fact table\Calculate license duration.Outputs[Derived Column Output]" />
            <path
              refId="Package\Create license fact table.Paths[Merge Join Output]"
              endId="Package\Create license fact table\Sort by Industry.Inputs[Sort Input]"
              name="Merge Join Output"
              startId="Package\Create license fact table\Join on business names.Outputs[Merge Join Output]" />
            <path
              refId="Package\Create license fact table.Paths[Merge Join Output1]"
              endId="Package\Create license fact table\Calculate license duration.Inputs[Derived Column Input]"
              name="Merge Join Output"
              startId="Package\Create license fact table\Join on Industry.Outputs[Merge Join Output]" />
            <path
              refId="Package\Create license fact table.Paths[OLE DB Source Output]"
              endId="Package\Create license fact table\Sort alphabetically.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Create license fact table\Get industry dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create license fact table.Paths[OLE DB Source Output1]"
              endId="Package\Create license fact table\Sort license data by business names.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Create license fact table\Get selected columns from staged license data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create license fact table.Paths[OLE DB Source Output2]"
              endId="Package\Create license fact table\Sort business data by business names.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Create license fact table\Load business dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create license fact table.Paths[Sort Output]"
              endId="Package\Create license fact table\Join on business names.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Create license fact table\Sort business data by business names.Outputs[Sort Output]" />
            <path
              refId="Package\Create license fact table.Paths[Sort Output1]"
              endId="Package\Create license fact table\Join on business names.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Create license fact table\Sort license data by business names.Outputs[Sort Output]" />
            <path
              refId="Package\Create license fact table.Paths[Sort Output2]"
              endId="Package\Create license fact table\Join on Industry.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Create license fact table\Sort alphabetically.Outputs[Sort Output]" />
            <path
              refId="Package\Create license fact table.Paths[Sort Output3]"
              endId="Package\Create license fact table\Join on Industry.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Create license fact table\Sort by Industry.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create payment fact table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{760EA0B1-7C1A-4701-9B2C-4CD3FA6CFD6F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create payment fact table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create payment fact table\Get selected columns from staged fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get selected columns from staged fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create payment fact table\Get selected columns from staged fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDate]"
                      name="FeeDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      length="50"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      length="100"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      length="50"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      name="RecordType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      length="50"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      name="FeeType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      dataType="cy"
                      name="FeeAmount" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      dataType="dbDate"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeAmount]"
                      name="FeeAmount" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDate]"
                      name="FeeDate" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      name="FeeDescription" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      name="RecordType" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      name="FeeType" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Get selected columns from staged payment data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get selected columns from staged payment data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[PaymentStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create payment fact table\Get selected columns from staged payment data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentAmount]"
                      lineageId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      length="50"
                      lineageId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      name="TransactionType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      length="50"
                      lineageId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentAmount]"
                      dataType="cy"
                      name="PaymentAmount" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      name="FeeSequenceId" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Error Output].Columns[PaymentAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Error Output].Columns[PaymentAmount]"
                      name="PaymentAmount" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      name="TransactionType" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Insert data to PaymentFact table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data to PaymentFact table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[PaymentFact]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">true</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create payment fact table\Insert data to PaymentFact table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      externalMetadataColumnId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessId]"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[BusinessId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].Columns[PaymentDate]"
                      cachedDataType="dbDate"
                      cachedName="PaymentDate"
                      externalMetadataColumnId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[PaymentDate]"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[PaymentDate]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      externalMetadataColumnId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[FeeId]"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[FeeId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].Columns[TransactionTypeId]"
                      cachedDataType="i4"
                      cachedName="TransactionTypeId"
                      externalMetadataColumnId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[TransactionTypeId]"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[TransactionTypeId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      externalMetadataColumnId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].Columns[FeeAmount]"
                      cachedDataType="cy"
                      cachedName="FeeAmount"
                      externalMetadataColumnId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[FeeAmount]"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].Columns[PaymentAmount]"
                      cachedDataType="cy"
                      cachedName="PaymentAmount"
                      externalMetadataColumnId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[PaymentAmount]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessId]"
                      dataType="i4"
                      name="BusinessId" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[PaymentDate]"
                      dataType="dbDate"
                      name="PaymentDate" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[FeeId]"
                      dataType="i4"
                      name="FeeId" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[TransactionTypeId]"
                      dataType="i4"
                      name="TransactionTypeId" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[FeeAmount]"
                      dataType="cy"
                      name="FeeAmount" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                      dataType="cy"
                      name="PaymentAmount" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Insert data to PaymentFact table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Insert data to PaymentFact table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create payment fact table\Insert data to PaymentFact table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Insert data to PaymentFact table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Join data on business names"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join data on business names"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">2</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Left Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create payment fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Left Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Create payment fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Left Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create payment fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[FeeAmount]"
                      cachedDataType="cy"
                      cachedName="FeeAmount"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[Industry]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on business names.Inputs[Merge Join Left Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeAmount]"
                      name="FeeAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[Industry]"
                      name="Industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Join data on fee details"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join data on fee details"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">4</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      cachedSortKeyPosition="4"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      cachedSortKeyPosition="3"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[IndustryId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[BusinessId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input].Columns[FeeAmount]"
                      cachedDataType="cy"
                      cachedName="FeeAmount"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeSequenceId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Right Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[IndustryId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Right Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Right Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      cachedSortKeyPosition="3"
                      lineageId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Right Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      cachedSortKeyPosition="4"
                      lineageId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Right Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      lineageId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[FeeId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeAmount]"
                      name="FeeAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeId]"
                      name="FeeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Right Input].Columns[FeeId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Join data on FeeSequenceId"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join data on FeeSequenceId"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Left Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Left Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      lineageId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[FeeId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Left Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Left Input].Columns[FeeAmount]"
                      cachedDataType="cy"
                      cachedName="FeeAmount"
                      lineageId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Left Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[BusinessId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Right Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Right Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[TransactionType]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Right Input].Columns[PaymentAmount]"
                      cachedDataType="cy"
                      cachedName="PaymentAmount"
                      lineageId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[PaymentAmount]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[TransactionType]"
                      name="TransactionType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Right Input].Columns[TransactionType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[PaymentAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[PaymentAmount]"
                      name="PaymentAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Right Input].Columns[PaymentAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeId]"
                      name="FeeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Left Input].Columns[FeeId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Left Input].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeAmount]"
                      name="FeeAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Left Input].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Left Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Left Input].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Join data on industry"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join data on industry"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[BusinessId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[FeeAmount]"
                      cachedDataType="cy"
                      cachedName="FeeAmount"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeType]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Right Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create payment fact table\Sort industry data by Industry.Outputs[Sort Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Right Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Create payment fact table\Sort industry data by Industry.Outputs[Sort Output].Columns[IndustryId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeAmount]"
                      name="FeeAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[IndustryId]"
                      name="IndustryId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on industry.Inputs[Merge Join Right Input].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Join data on TransactionType"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join data on TransactionType"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[TransactionType]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[FeeId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[BusinessId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input].Columns[FeeAmount]"
                      cachedDataType="cy"
                      cachedName="FeeAmount"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input].Columns[PaymentAmount]"
                      cachedDataType="cy"
                      cachedName="PaymentAmount"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[PaymentAmount]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Right Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create payment fact table\Sort transaction type data by TransactionType.Outputs[Sort Output].Columns[TransactionType]" />
                    <inputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Right Input].Columns[TransactionTypeId]"
                      cachedDataType="i4"
                      cachedName="TransactionTypeId"
                      lineageId="Package\Create payment fact table\Sort transaction type data by TransactionType.Outputs[Sort Output].Columns[TransactionTypeId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[PaymentDate]"
                      dataType="dbDate"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[PaymentDate]"
                      name="PaymentDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[FeeId]"
                      name="FeeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input].Columns[FeeId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[TransactionTypeId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[TransactionTypeId]"
                      name="TransactionTypeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Right Input].Columns[TransactionTypeId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[FeeAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[FeeAmount]"
                      name="FeeAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[PaymentAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output].Columns[PaymentAmount]"
                      name="PaymentAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input].Columns[PaymentAmount]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Load business dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load business dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[BusinessDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create payment fact table\Load business dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessId]"
                      lineageId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]"
                      name="BusinessId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessId]"
                      dataType="i4"
                      name="BusinessId" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      name="BusinessType" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessId]"
                      name="BusinessId" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Load fee dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load fee dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[FeeDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create payment fact table\Load fee dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[FeeId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].ExternalColumns[FeeId]"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[FeeId]"
                      name="FeeId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      name="IndustryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[RecordType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      length="50"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[RecordType]"
                      name="RecordType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[FeeType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      length="50"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[FeeType]"
                      name="FeeType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      length="100"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].ExternalColumns[FeeId]"
                      dataType="i4"
                      name="FeeId" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[FeeId]"
                      name="FeeId" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      name="IndustryId" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      name="RecordType" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      name="FeeType" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      name="FeeDescription" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Load industry dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load industry dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[IndustryDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create payment fact table\Load industry dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      lineageId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      name="IndustryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      name="IndustryId" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Load transaction type dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load transaction type dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[TransactionTypeDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create payment fact table\Load transaction type dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionTypeId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output].ExternalColumns[TransactionTypeId]"
                      lineageId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionTypeId]"
                      name="TransactionTypeId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      length="50"
                      lineageId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      name="TransactionType"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output].ExternalColumns[TransactionTypeId]"
                      dataType="i4"
                      name="TransactionTypeId" />
                    <externalMetadataColumn
                      refId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Error Output].Columns[TransactionTypeId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Error Output].Columns[TransactionTypeId]"
                      name="TransactionTypeId" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      name="TransactionType" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Sort business data by business names"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort business data by business names"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Sort business data by business names.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort business data by business names.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort business data by business names.Inputs[Sort Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort business data by business names.Inputs[Sort Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Sort business data by business names.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Create payment fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessName]"
                      name="BusinessName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create payment fact table\Sort business data by business names.Outputs[Sort Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Sort data by fee details"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort data by fee details"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Sort data by fee details.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Inputs[Sort Input].Columns[FeeAmount]"
                      cachedDataType="cy"
                      cachedName="FeeAmount"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Inputs[Sort Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Inputs[Sort Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Inputs[Sort Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[RecordType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Inputs[Sort Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Inputs[Sort Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[IndustryId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeAmount]"
                      name="FeeAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[RecordType]"
                      name="RecordType"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[FeeType]"
                      name="FeeType"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output].Columns[IndustryId]"
                      name="IndustryId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Sort data by FeeSequenceId"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort data by FeeSequenceId"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Sort data by FeeSequenceId.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by FeeSequenceId.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by FeeSequenceId.Inputs[Sort Input].Columns[FeeAmount]"
                      cachedDataType="cy"
                      cachedName="FeeAmount"
                      lineageId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by FeeSequenceId.Inputs[Sort Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by FeeSequenceId.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by FeeSequenceId.Inputs[Sort Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      lineageId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[FeeAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[FeeAmount]"
                      name="FeeAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output].Columns[FeeId]"
                      name="FeeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output].Columns[FeeId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Sort data by Industry"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort data by Industry"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Sort data by Industry.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Inputs[Sort Input].Columns[FeeAmount]"
                      cachedDataType="cy"
                      cachedName="FeeAmount"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Inputs[Sort Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Inputs[Sort Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Inputs[Sort Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[RecordType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Inputs[Sort Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeAmount]"
                      name="FeeAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Sort data by TransactionType"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort data by TransactionType"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Sort data by TransactionType.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Inputs[Sort Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[TransactionType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Inputs[Sort Input].Columns[PaymentAmount]"
                      cachedDataType="cy"
                      cachedName="PaymentAmount"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[PaymentAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Inputs[Sort Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Inputs[Sort Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Inputs[Sort Input].Columns[FeeAmount]"
                      cachedDataType="cy"
                      cachedName="FeeAmount"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[TransactionType]"
                      name="TransactionType"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[TransactionType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[PaymentAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[PaymentAmount]"
                      name="PaymentAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[PaymentAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[FeeId]"
                      name="FeeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[FeeAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[FeeAmount]"
                      name="FeeAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Sort fee data by business names"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort fee data by business names"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Sort fee data by business names.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Inputs[Sort Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Inputs[Sort Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Inputs[Sort Input].Columns[FeeAmount]"
                      cachedDataType="cy"
                      cachedName="FeeAmount"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Inputs[Sort Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Inputs[Sort Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Inputs[Sort Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Inputs[Sort Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[BusinessName]"
                      name="BusinessName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeAmount]"
                      name="FeeAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output].Columns[Industry]"
                      name="Industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Sort fee data by fee details"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort fee data by fee details"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Sort fee data by fee details.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by fee details.Inputs[Sort Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[FeeId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by fee details.Inputs[Sort Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[IndustryId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by fee details.Inputs[Sort Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[RecordType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by fee details.Inputs[Sort Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[FeeType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort fee data by fee details.Inputs[Sort Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[FeeId]"
                      name="FeeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[FeeId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[IndustryId]"
                      name="IndustryId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[RecordType]"
                      name="RecordType"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[FeeType]"
                      name="FeeType"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Sort industry data by Industry"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort industry data by Industry"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Sort industry data by Industry.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort industry data by Industry.Inputs[Sort Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort industry data by Industry.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Sort industry data by Industry.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort industry data by Industry.Outputs[Sort Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Sort industry data by Industry.Outputs[Sort Output].Columns[IndustryId]"
                      name="IndustryId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort industry data by Industry.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort industry data by Industry.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Sort payment data by FeeSequenceId"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort payment data by FeeSequenceId"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Inputs[Sort Input].Columns[PaymentAmount]"
                      cachedDataType="cy"
                      cachedName="PaymentAmount"
                      lineageId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Inputs[Sort Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].Columns[TransactionType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[PaymentAmount]"
                      dataType="cy"
                      lineageId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[PaymentAmount]"
                      name="PaymentAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[TransactionType]"
                      name="TransactionType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].Columns[TransactionType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create payment fact table\Sort transaction type data by TransactionType"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort transaction type data by TransactionType"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create payment fact table\Sort transaction type data by TransactionType.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort transaction type data by TransactionType.Inputs[Sort Input].Columns[TransactionTypeId]"
                      cachedDataType="i4"
                      cachedName="TransactionTypeId"
                      lineageId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionTypeId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create payment fact table\Sort transaction type data by TransactionType.Inputs[Sort Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create payment fact table\Sort transaction type data by TransactionType.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort transaction type data by TransactionType.Outputs[Sort Output].Columns[TransactionTypeId]"
                      dataType="i4"
                      lineageId="Package\Create payment fact table\Sort transaction type data by TransactionType.Outputs[Sort Output].Columns[TransactionTypeId]"
                      name="TransactionTypeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionTypeId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create payment fact table\Sort transaction type data by TransactionType.Outputs[Sort Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create payment fact table\Sort transaction type data by TransactionType.Outputs[Sort Output].Columns[TransactionType]"
                      name="TransactionType"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionType]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create payment fact table.Paths[Merge Join Output]"
              endId="Package\Create payment fact table\Insert data to PaymentFact table.Inputs[OLE DB Destination Input]"
              name="Merge Join Output"
              startId="Package\Create payment fact table\Join data on TransactionType.Outputs[Merge Join Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Merge Join Output3]"
              endId="Package\Create payment fact table\Sort data by fee details.Inputs[Sort Input]"
              name="Merge Join Output"
              startId="Package\Create payment fact table\Join data on industry.Outputs[Merge Join Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Merge Join Output4]"
              endId="Package\Create payment fact table\Sort data by FeeSequenceId.Inputs[Sort Input]"
              name="Merge Join Output"
              startId="Package\Create payment fact table\Join data on fee details.Outputs[Merge Join Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Merge Join Output1]"
              endId="Package\Create payment fact table\Sort data by Industry.Inputs[Sort Input]"
              name="Merge Join Output"
              startId="Package\Create payment fact table\Join data on business names.Outputs[Merge Join Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Merge Join Output2]"
              endId="Package\Create payment fact table\Sort data by TransactionType.Inputs[Sort Input]"
              name="Merge Join Output"
              startId="Package\Create payment fact table\Join data on FeeSequenceId.Outputs[Merge Join Output]" />
            <path
              refId="Package\Create payment fact table.Paths[OLE DB Source Output]"
              endId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Create payment fact table\Get selected columns from staged payment data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create payment fact table.Paths[OLE DB Source Output1]"
              endId="Package\Create payment fact table\Sort fee data by fee details.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Create payment fact table\Load fee dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create payment fact table.Paths[OLE DB Source Output2]"
              endId="Package\Create payment fact table\Sort transaction type data by TransactionType.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Create payment fact table\Load transaction type dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create payment fact table.Paths[OLE DB Source Output3]"
              endId="Package\Create payment fact table\Sort business data by business names.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Create payment fact table\Load business dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create payment fact table.Paths[OLE DB Source Output4]"
              endId="Package\Create payment fact table\Sort industry data by Industry.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Create payment fact table\Load industry dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create payment fact table.Paths[OLE DB Source Output5]"
              endId="Package\Create payment fact table\Sort fee data by business names.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Create payment fact table\Get selected columns from staged fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Sort Output8]"
              endId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Create payment fact table\Sort data by fee details.Outputs[Sort Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Sort Output7]"
              endId="Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Create payment fact table\Sort transaction type data by TransactionType.Outputs[Sort Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Sort Output6]"
              endId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Create payment fact table\Sort industry data by Industry.Outputs[Sort Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Sort Output5]"
              endId="Package\Create payment fact table\Join data on industry.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Create payment fact table\Sort data by Industry.Outputs[Sort Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Sort Output1]"
              endId="Package\Create payment fact table\Join data on fee details.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Create payment fact table\Sort fee data by fee details.Outputs[Sort Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Sort Output3]"
              endId="Package\Create payment fact table\Join data on TransactionType.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Create payment fact table\Sort data by TransactionType.Outputs[Sort Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Sort Output2]"
              endId="Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Create payment fact table\Sort data by FeeSequenceId.Outputs[Sort Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Sort Output9]"
              endId="Package\Create payment fact table\Join data on FeeSequenceId.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Create payment fact table\Sort payment data by FeeSequenceId.Outputs[Sort Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Sort Output4]"
              endId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Create payment fact table\Sort fee data by business names.Outputs[Sort Output]" />
            <path
              refId="Package\Create payment fact table.Paths[Sort Output]"
              endId="Package\Create payment fact table\Join data on business names.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Create payment fact table\Sort business data by business names.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create time dimension"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{081E25EA-3F5E-46C6-9CFB-8EE4ED8C52D1}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create time dimension"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create time dimension\Derive date parts"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derive date parts"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Create time dimension\Derive date parts.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create time dimension\Derive date parts.Inputs[Derived Column Input].Columns[Date]"
                      cachedDataType="dbDate"
                      cachedName="Date"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Create time dimension\Derive date parts.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Day]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Day]"
                      name="Day"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DAY](#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DAY(Date)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[DayName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[DayName]"
                      name="DayName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("WEEKDAY",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 1 ? "Monday" : [DATEPART]("WEEKDAY",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 2 ? "Tuesday" : [DATEPART]("WEEKDAY",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 3 ? "Wednesday" : [DATEPART]("WEEKDAY",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 4 ? "Thursday" : [DATEPART]("WEEKDAY",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 5 ? "Friday" : [DATEPART]("WEEKDAY",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 6 ? "Saturday" : [DATEPART]("WEEKDAY",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 7 ? "Sunday" : ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("WEEKDAY",Date) == 1 ? "Monday" : DATEPART("WEEKDAY",Date) == 2 ? "Tuesday" : DATEPART("WEEKDAY",Date) == 3 ? "Wednesday" : DATEPART("WEEKDAY",Date) == 4 ? "Thursday" : DATEPART("WEEKDAY",Date) == 5 ? "Friday" : DATEPART("WEEKDAY",Date) == 6 ? "Saturday" : DATEPART("WEEKDAY",Date) == 7 ? "Sunday" : ""</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Weekday]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Weekday]"
                      name="Weekday"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("WEEKDAY",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("WEEKDAY",Date)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Month]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Month]"
                      name="Month"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[MONTH](#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">MONTH(Date)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[MonthName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[MonthName]"
                      name="MonthName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("MONTH",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 1 ? "January" : [DATEPART]("MONTH",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 2 ? "February" : [DATEPART]("MONTH",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 3 ? "March" : [DATEPART]("MONTH",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 4 ? "April" : [DATEPART]("MONTH",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 5 ? "May" : [DATEPART]("MONTH",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 6 ? "June" : [DATEPART]("MONTH",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 7 ? "July" : [DATEPART]("MONTH",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 8 ? "August" : [DATEPART]("MONTH",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 9 ? "September" : [DATEPART]("MONTH",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 10 ? "October" : [DATEPART]("MONTH",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 11 ? "November" : [DATEPART]("MONTH",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 12 ? "December" : ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("MONTH",Date) == 1 ? "January" : DATEPART("MONTH",Date) == 2 ? "February" : DATEPART("MONTH",Date) == 3 ? "March" : DATEPART("MONTH",Date) == 4 ? "April" : DATEPART("MONTH",Date) == 5 ? "May" : DATEPART("MONTH",Date) == 6 ? "June" : DATEPART("MONTH",Date) == 7 ? "July" : DATEPART("MONTH",Date) == 8 ? "August" : DATEPART("MONTH",Date) == 9 ? "September" : DATEPART("MONTH",Date) == 10 ? "October" : DATEPART("MONTH",Date) == 11 ? "November" : DATEPART("MONTH",Date) == 12 ? "December" : ""</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Quarter]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Quarter]"
                      name="Quarter"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("QUARTER",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("QUARTER",Date)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Year]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Year]"
                      name="Year"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[YEAR](#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">YEAR(Date)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Week]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Week]"
                      name="Week"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("WEEK",#{Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("WEEK",Date)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Create time dimension\Derive date parts.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create time dimension\Get dates from staged fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get dates from staged fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT [FeeDate] AS [Date]
FROM [DWSTAGE].[FeeStage]
WHERE [FeeDate] IS NOT NULL;</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create time dimension\Get dates from staged fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Output].Columns[Date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Date]"
                      lineageId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Output].Columns[Date]"
                      name="Date"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Date]"
                      dataType="dbDate"
                      name="Date" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Error Output].Columns[Date]"
                      dataType="dbDate"
                      lineageId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Error Output].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create time dimension\Get dates from staged license data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get dates from staged license data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT [LicenseCreationDate] AS [Date]
FROM [DWSTAGE].[LicenseStage]
WHERE [LicenseCreationDate] IS NOT NULL
UNION
SELECT DISTINCT [LicenseExpirationDate] AS [Date]
FROM [DWSTAGE].[LicenseStage]
WHERE [LicenseExpirationDate] IS NOT NULL;</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create time dimension\Get dates from staged license data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Output].Columns[Date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Date]"
                      lineageId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Output].Columns[Date]"
                      name="Date"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Date]"
                      dataType="dbDate"
                      name="Date" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Error Output].Columns[Date]"
                      dataType="dbDate"
                      lineageId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Error Output].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create time dimension\Insert data to TimeDim table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data to TimeDim table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[TimeDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create time dimension\Insert data to TimeDim table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].Columns[Date]"
                      cachedDataType="dbDate"
                      cachedName="Date"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                      lineageId="Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]" />
                    <inputColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].Columns[Day]"
                      cachedDataType="i4"
                      cachedName="Day"
                      externalMetadataColumnId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Day]"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Day]" />
                    <inputColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].Columns[DayName]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="DayName"
                      externalMetadataColumnId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[DayName]"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[DayName]" />
                    <inputColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].Columns[Weekday]"
                      cachedDataType="i4"
                      cachedName="Weekday"
                      externalMetadataColumnId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Weekday]"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Weekday]" />
                    <inputColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].Columns[Month]"
                      cachedDataType="i4"
                      cachedName="Month"
                      externalMetadataColumnId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Month]" />
                    <inputColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].Columns[MonthName]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="MonthName"
                      externalMetadataColumnId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[MonthName]"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[MonthName]" />
                    <inputColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].Columns[Quarter]"
                      cachedDataType="i4"
                      cachedName="Quarter"
                      externalMetadataColumnId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Quarter]"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Quarter]" />
                    <inputColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].Columns[Year]"
                      cachedDataType="i4"
                      cachedName="Year"
                      externalMetadataColumnId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Year]"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Year]" />
                    <inputColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].Columns[Week]"
                      cachedDataType="i4"
                      cachedName="Week"
                      externalMetadataColumnId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Week]"
                      lineageId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output].Columns[Week]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                      dataType="dbDate"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Day]"
                      dataType="i4"
                      name="Day" />
                    <externalMetadataColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[DayName]"
                      dataType="wstr"
                      length="30"
                      name="DayName" />
                    <externalMetadataColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Weekday]"
                      dataType="i4"
                      name="Weekday" />
                    <externalMetadataColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Week]"
                      dataType="i4"
                      name="Week" />
                    <externalMetadataColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                      dataType="i4"
                      name="Month" />
                    <externalMetadataColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[MonthName]"
                      dataType="wstr"
                      length="30"
                      name="MonthName" />
                    <externalMetadataColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Quarter]"
                      dataType="i4"
                      name="Quarter" />
                    <externalMetadataColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input].ExternalColumns[Year]"
                      dataType="i4"
                      name="Year" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create time dimension\Insert data to TimeDim table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create time dimension\Insert data to TimeDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create time dimension\Insert data to TimeDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create time dimension\Insert data to TimeDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create time dimension\Sort dates and remove duplicates"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort dates and remove duplicates"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create time dimension\Sort dates and remove duplicates.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create time dimension\Sort dates and remove duplicates.Inputs[Sort Input].Columns[Date]"
                      cachedDataType="dbDate"
                      cachedName="Date"
                      lineageId="Package\Create time dimension\Unify dates.Outputs[Union All Output 1].Columns[Date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]"
                      dataType="dbDate"
                      lineageId="Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]"
                      name="Date"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Create time dimension\Unify dates.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create time dimension\Unify dates"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Unify dates"
              version="1">
              <inputs>
                <input
                  refId="Package\Create time dimension\Unify dates.Inputs[Union All Input 4]"
                  hasSideEffects="true"
                  name="Union All Input 4">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create time dimension\Unify dates.Inputs[Union All Input 4].Columns[Date]"
                      cachedDataType="dbDate"
                      cachedName="Date"
                      lineageId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Output].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create time dimension\Unify dates.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create time dimension\Unify dates.Inputs[Union All Input 1]"
                  hasSideEffects="true"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create time dimension\Unify dates.Inputs[Union All Input 1].Columns[Date]"
                      cachedDataType="dbDate"
                      cachedName="Date"
                      lineageId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Output].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Create time dimension\Unify dates.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Create time dimension\Unify dates.Inputs[Union All Input 2]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create time dimension\Unify dates.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create time dimension\Unify dates.Outputs[Union All Output 1].Columns[Date]"
                      dataType="dbDate"
                      lineageId="Package\Create time dimension\Unify dates.Outputs[Union All Output 1].Columns[Date]"
                      name="Date" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create time dimension.Paths[Derived Column Output]"
              endId="Package\Create time dimension\Insert data to TimeDim table.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Create time dimension\Derive date parts.Outputs[Derived Column Output]" />
            <path
              refId="Package\Create time dimension.Paths[OLE DB Source Output]"
              endId="Package\Create time dimension\Unify dates.Inputs[Union All Input 4]"
              name="OLE DB Source Output"
              startId="Package\Create time dimension\Get dates from staged license data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create time dimension.Paths[OLE DB Source Output1]"
              endId="Package\Create time dimension\Unify dates.Inputs[Union All Input 1]"
              name="OLE DB Source Output"
              startId="Package\Create time dimension\Get dates from staged fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create time dimension.Paths[Sort Output]"
              endId="Package\Create time dimension\Derive date parts.Inputs[Derived Column Input]"
              name="Sort Output"
              startId="Package\Create time dimension\Sort dates and remove duplicates.Outputs[Sort Output]" />
            <path
              refId="Package\Create time dimension.Paths[Union All Output 1]"
              endId="Package\Create time dimension\Sort dates and remove duplicates.Inputs[Sort Input]"
              name="Union All Output 1"
              startId="Package\Create time dimension\Unify dates.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create transaction type dimension"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{E334FABA-E4FD-401E-98EA-BDF8AF939BE8}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create transaction type dimension"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get distinct and sorted TransactionTypes from payment data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT [TransactionType]
FROM [DWSTAGE].[PaymentStage]
ORDER BY [TransactionType];</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      length="50"
                      lineageId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      name="TransactionType"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      name="TransactionType" />
                    <outputColumn
                      refId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data to TransactionTypeDim table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[TransactionTypeDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table.Inputs[OLE DB Destination Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      externalMetadataColumnId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table.Inputs[OLE DB Destination Input].ExternalColumns[TransactionType]"
                      lineageId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Output].Columns[TransactionType]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table.Inputs[OLE DB Destination Input].ExternalColumns[TransactionTypeId]"
                      dataType="i4"
                      name="TransactionTypeId" />
                    <externalMetadataColumn
                      refId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table.Inputs[OLE DB Destination Input].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create transaction type dimension.Paths[OLE DB Source Output]"
              endId="Package\Create transaction type dimension\Insert data to TransactionTypeDim table.Inputs[OLE DB Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure correctness of fee data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{b6f01e9f-6944-43af-b9ce-bbb3e3a46ab0}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure correctness of fee data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Ensure correctness of fee data\Check for missing values"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Check for missing values"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Check for missing values.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Check for missing values.Inputs[Conditional Split Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Check for missing values.Inputs[Conditional Split Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Check for missing values.Inputs[Conditional Split Input].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Check for missing values.Inputs[Conditional Split Input].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Check for missing values.Outputs[BusinessName is missing]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="BusinessName is missing"
                  synchronousInputId="Package\Ensure correctness of fee data\Check for missing values.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[TRIM](#{Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]}) == ""</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">TRIM(BusinessName) == ""</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Check for missing values.Outputs[FeeSequenceId is missing]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="FeeSequenceId is missing"
                  synchronousInputId="Package\Ensure correctness of fee data\Check for missing values.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[TRIM](#{Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}) == ""</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">TRIM(FeeSequenceId) == ""</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Check for missing values.Outputs[FeeAmount is missing]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="FeeAmount is missing"
                  synchronousInputId="Package\Ensure correctness of fee data\Check for missing values.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[TRIM](#{Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]}) == ""</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">TRIM(FeeAmount) == ""</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Check for missing values.Outputs[FeeDate is missing]"
                  description="Output 4 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="FeeDate is missing"
                  synchronousInputId="Package\Ensure correctness of fee data\Check for missing values.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[TRIM](#{Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]}) == ""</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">TRIM(FeeDate) == ""</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">3</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Check for missing values.Outputs[Default]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Default"
                  synchronousInputId="Package\Ensure correctness of fee data\Check for missing values.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Check for missing values.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Check for missing values.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Check for missing values.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Check for missing values.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Check for missing values.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Check for missing values.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Delete rows from FeeExtract table"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">DELETE FROM [DWSTAGE].[FeeExtract]
WHERE [SourceRowNumber] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Inputs[OLE DB Command Input].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[SourceRowNumber]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Get logs with High severity"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Get logs with High severity"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Get logs with High severity.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Get logs with High severity.Inputs[Conditional Split Input].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Severity]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Get logs with High severity.Outputs[High severity]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="High severity"
                  synchronousInputId="Package\Ensure correctness of fee data\Get logs with High severity.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Severity]} == "High"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">Severity == "High"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Get logs with High severity.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Get logs with High severity.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Get logs with High severity.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Get logs with High severity.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get logs with High severity.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Get logs with High severity.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get logs with High severity.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Get logs with High severity.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get selected columns from extracted fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[SourceRowNumber]"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]"
                      name="SourceRowNumber"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      name="RecordType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      name="FeeType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      length="100"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]"
                      name="FeeDate"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[SourceRowNumber]"
                      dataType="i4"
                      name="SourceRowNumber" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordId]"
                      dataType="wstr"
                      length="50"
                      name="RecordId" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      dataType="wstr"
                      length="50"
                      name="FeeAmount" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      dataType="wstr"
                      length="50"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeStatus]"
                      dataType="wstr"
                      length="50"
                      name="FeeStatus" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      name="RecordType" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      name="FeeType" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      name="FeeDescription" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeAmount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeAmount]"
                      name="FeeAmount" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeDate]"
                      name="FeeDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Include SessionId"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Include SessionId"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Include SessionId.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Include SessionId.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Include SessionId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Include SessionId.Outputs[Derived Column Output].Columns[SessionId]"
                      dataType="guid"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of fee data\Include SessionId.Outputs[Derived Column Output].Columns[SessionId]"
                      name="SessionId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_GUID)("{" + (DT_WSTR,36)@[User::SessionId] + "}")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_GUID)("{" + (DT_WSTR,36)@[User::SessionId] + "}")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Include SessionId.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Include SessionId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Include SessionId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Include SessionId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Include SessionId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Include SessionId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert logs to DataCorrectnessInfo table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWLOG].[DataCorrectnessInfo]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[SourceRowNumber]"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[SourceRowNumber]" />
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="4"
                      cachedName="Dataset"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Dataset]"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Dataset]" />
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="13"
                      cachedName="ColumnName"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnName]"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[ColumnName]" />
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="ColumnValue"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnValue]"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[ColumnValue]" />
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Timestamp]" />
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[SessionId]"
                      cachedDataType="guid"
                      cachedName="SessionId"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                      lineageId="Package\Ensure correctness of fee data\Include SessionId.Outputs[Derived Column Output].Columns[SessionId]" />
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="24"
                      cachedName="Description"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Description]" />
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      externalMetadataColumnId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Severity]"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Severity]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Dataset]"
                      dataType="wstr"
                      length="20"
                      name="Dataset" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[SourceRowNumber]"
                      dataType="i4"
                      name="SourceRowNumber" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnName]"
                      dataType="wstr"
                      length="50"
                      name="ColumnName" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnValue]"
                      dataType="wstr"
                      length="300"
                      name="ColumnValue" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      dataType="dbTimeStamp2"
                      name="Timestamp"
                      scale="7" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                      dataType="guid"
                      name="SessionId" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                      dataType="wstr"
                      length="500"
                      name="Description" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Severity]"
                      dataType="wstr"
                      length="20"
                      name="Severity" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Log invalid FeeAmount"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log invalid FeeAmount"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Inputs[Derived Column Input].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeAmount]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="4"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Fees"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Fees"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"FeeAmount"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"FeeAmount"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeAmount]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">FeeAmount</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"FeeAmount is invalid"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"FeeAmount is invalid"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Log invalid FeeDate"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log invalid FeeDate"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Log invalid FeeDate.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeDate.Inputs[Derived Column Input].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      lineageId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Log invalid FeeDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="4"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Fees"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Fees"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"FeeDate"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"FeeDate"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">FeeDate</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="18"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"FeeDate is invalid"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"FeeDate is invalid"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Log invalid FeeDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Log missing BusinessName"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log missing BusinessName"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Log missing BusinessName.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Log missing BusinessName.Inputs[Derived Column Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Log missing BusinessName.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="4"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Fees"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Fees"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="12"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"BusinessName"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"BusinessName"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="300"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">BusinessName</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="23"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"BusinessName is missing"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"BusinessName is missing"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Log missing BusinessName.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Log missing FeeAmount"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log missing FeeAmount"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Log missing FeeAmount.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeAmount.Inputs[Derived Column Input].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Log missing FeeAmount.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="4"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Fees"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Fees"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"FeeAmount"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"FeeAmount"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">FeeAmount</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"FeeAmount is missing"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"FeeAmount is missing"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Log missing FeeAmount.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Log missing FeeDate"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log missing FeeDate"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Log missing FeeDate.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeDate.Inputs[Derived Column Input].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Log missing FeeDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="4"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Fees"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Fees"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"FeeDate"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"FeeDate"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">FeeDate</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="18"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"FeeDate is missing"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"FeeDate is missing"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Log missing FeeDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Log missing FeeSequenceId"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log missing FeeSequenceId"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Inputs[Derived Column Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="4"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Fees"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Fees"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="13"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"FeeSequenceId"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"FeeSequenceId"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">FeeSequenceId</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="24"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"FeeSequenceId is missing"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"FeeSequenceId is missing"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Ensure correctness of fee data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Multicast.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Ensure correctness of fee data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Multicast.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Ensure correctness of fee data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Multicast 1"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast 1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Multicast 1.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Multicast 1.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Ensure correctness of fee data\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Multicast 1.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Ensure correctness of fee data\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Multicast 1.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Ensure correctness of fee data\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Multicast 2"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast 2">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Multicast 2.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Multicast 2.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Ensure correctness of fee data\Multicast 2.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Multicast 2.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Ensure correctness of fee data\Multicast 2.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Multicast 2.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Ensure correctness of fee data\Multicast 2.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Parse FeeAmount"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Parse FeeAmount"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Parse FeeAmount.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Parse FeeAmount.Inputs[Derived Column Input].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeAmount]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Parse FeeAmount.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Parse FeeAmount.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Parse FeeAmount.Outputs[Derived Column Output].Columns[FeeAmountParsed]"
                      dataType="cy"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Ensure correctness of fee data\Parse FeeAmount.Outputs[Derived Column Output].Columns[FeeAmountParsed]"
                      name="FeeAmountParsed"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeAmount]}) != "" ? (DT_CY)#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeAmount]} : NULL(DT_CY)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(FeeAmount) != "" ? (DT_CY)FeeAmount : NULL(DT_CY)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Parse FeeAmount.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Parse FeeAmount.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Parse FeeAmount.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Parse FeeAmount.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Parse FeeAmount.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Parse FeeAmount.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Parse FeeDate"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Parse FeeDate"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Parse FeeDate.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Parse FeeDate.Inputs[Derived Column Input].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      lineageId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Parse FeeDate.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Parse FeeDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Parse FeeDate.Outputs[Derived Column Output].Columns[FeeDateParsed]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Ensure correctness of fee data\Parse FeeDate.Outputs[Derived Column Output].Columns[FeeDateParsed]"
                      name="FeeDateParsed"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeDate]}) != "" ? (DT_DBDATE)#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeDate]} : NULL(DT_DBDATE)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(FeeDate) != "" ? (DT_DBDATE)FeeDate : NULL(DT_DBDATE)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of fee data\Parse FeeDate.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of fee data\Parse FeeDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Parse FeeDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Parse FeeDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Parse FeeDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Parse FeeDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Unify logs"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Unify logs"
              version="1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 1].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 1].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="4"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 1].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="13"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 1].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 1].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="24"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 1].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 1].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 2].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 2].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="4"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 2].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 2].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 2].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 2].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 2].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 3]"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 3].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 3].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="4"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 3].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 3].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 3].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="18"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 3].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 3].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 4]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 4">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Dataset]"
                      dataType="wstr"
                      length="4"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Dataset]"
                      name="Dataset" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[ColumnName]"
                      dataType="wstr"
                      length="13"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[ColumnName]"
                      name="ColumnName" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[ColumnValue]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[ColumnValue]"
                      name="ColumnValue" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Description]"
                      dataType="wstr"
                      length="24"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Description]"
                      name="Description" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Timestamp]"
                      name="Timestamp" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Severity]"
                      dataType="wstr"
                      length="6"
                      lineageId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1].Columns[Severity]"
                      name="Severity" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Union 1"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union 1"
              version="1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[RecordType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDescription]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="4"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="23"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[RecordType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDescription]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="4"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="13"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="24"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3]"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[RecordType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDescription]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="4"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4]"
                  hasSideEffects="true"
                  name="Union All Input 4">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[RecordType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDescription]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="4"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="18"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 5]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 5">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[RecordType]"
                      name="RecordType" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeType]"
                      name="FeeType" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDescription]"
                      name="FeeDescription" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeAmount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeAmount]"
                      name="FeeAmount" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDate]"
                      name="FeeDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Dataset]"
                      dataType="wstr"
                      length="4"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Dataset]"
                      name="Dataset" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]"
                      dataType="wstr"
                      length="13"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]"
                      name="ColumnName" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]"
                      name="ColumnValue" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Description]"
                      dataType="wstr"
                      length="24"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Description]"
                      name="Description" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]"
                      name="Timestamp" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Severity]"
                      dataType="wstr"
                      length="6"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Severity]"
                      name="Severity" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Union 2"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union 2"
              version="1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 1].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 1].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 1].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 1].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 1].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[RecordType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 1].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 1].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 1].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeDescription]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 1].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 1].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      lineageId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeDate]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 2].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 2].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 2].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 2].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 2].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[RecordType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[RecordType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 2].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 2].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 2].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDescription]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeDescription]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 2].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 2].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      lineageId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1].Columns[FeeDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeDate]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[RecordType]"
                      name="RecordType" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeType]"
                      name="FeeType" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeDescription]"
                      name="FeeDescription" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeAmount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeAmount]"
                      name="FeeAmount" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeDate]"
                      name="FeeDate" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of fee data\Union 3"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union 3"
              version="1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 1].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 1].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 1].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 1].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 1].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[RecordType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[RecordType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 1].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 1].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 1].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeDescription]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeDescription]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 1].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 1].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeDate]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 2].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 2].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 2].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 2].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 2].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[RecordType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[RecordType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 2].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 2].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 2].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeDescription]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeDescription]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 2].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 2].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      lineageId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1].Columns[FeeDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeDate]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[RecordType]"
                      name="RecordType" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeType]"
                      name="FeeType" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeDescription]"
                      name="FeeDescription" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeAmount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeAmount]"
                      name="FeeAmount" />
                    <outputColumn
                      refId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1].Columns[FeeDate]"
                      name="FeeDate" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Ensure correctness of fee data.Paths[BusinessName is empty]"
              endId="Package\Ensure correctness of fee data\Log missing BusinessName.Inputs[Derived Column Input]"
              name="BusinessName is empty"
              startId="Package\Ensure correctness of fee data\Check for missing values.Outputs[BusinessName is missing]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Default]"
              endId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 1]"
              name="Default"
              startId="Package\Ensure correctness of fee data\Check for missing values.Outputs[Default]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Derived Column Error Output]"
              endId="Package\Ensure correctness of fee data\Log invalid FeeDate.Inputs[Derived Column Input]"
              name="Derived Column Error Output"
              startId="Package\Ensure correctness of fee data\Parse FeeDate.Outputs[Derived Column Error Output]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Derived Column Error Output1]"
              endId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Inputs[Derived Column Input]"
              name="Derived Column Error Output"
              startId="Package\Ensure correctness of fee data\Parse FeeAmount.Outputs[Derived Column Error Output]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Derived Column Output]"
              endId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 1]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of fee data\Log missing BusinessName.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Derived Column Output1]"
              endId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 2]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Derived Column Output2]"
              endId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 3]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of fee data\Log missing FeeAmount.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Derived Column Output3]"
              endId="Package\Ensure correctness of fee data\Union 1.Inputs[Union All Input 4]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of fee data\Log missing FeeDate.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Derived Column Output4]"
              endId="Package\Ensure correctness of fee data\Multicast.Inputs[Multicast Input 1]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of fee data\Include SessionId.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Derived Column Output5]"
              endId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 3]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of fee data\Log invalid FeeDate.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Derived Column Output6]"
              endId="Package\Ensure correctness of fee data\Multicast 2.Inputs[Multicast Input 1]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of fee data\Log invalid FeeAmount.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Derived Column Output7]"
              endId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 2]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of fee data\Parse FeeAmount.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[FeeAmount is empty]"
              endId="Package\Ensure correctness of fee data\Log missing FeeAmount.Inputs[Derived Column Input]"
              name="FeeAmount is empty"
              startId="Package\Ensure correctness of fee data\Check for missing values.Outputs[FeeAmount is missing]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[FeeDate is empty]"
              endId="Package\Ensure correctness of fee data\Log missing FeeDate.Inputs[Derived Column Input]"
              name="FeeDate is empty"
              startId="Package\Ensure correctness of fee data\Check for missing values.Outputs[FeeDate is missing]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[FeeSequenceId is empty]"
              endId="Package\Ensure correctness of fee data\Log missing FeeSequenceId.Inputs[Derived Column Input]"
              name="FeeSequenceId is empty"
              startId="Package\Ensure correctness of fee data\Check for missing values.Outputs[FeeSequenceId is missing]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[High severity]"
              endId="Package\Ensure correctness of fee data\Delete rows from FeeExtract table.Inputs[OLE DB Command Input]"
              name="High severity"
              startId="Package\Ensure correctness of fee data\Get logs with High severity.Outputs[High severity]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Multicast Output 1]"
              endId="Package\Ensure correctness of fee data\Union 3.Inputs[Union All Input 1]"
              name="Multicast Output 1"
              startId="Package\Ensure correctness of fee data\Multicast 2.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Multicast Output 11]"
              endId="Package\Ensure correctness of fee data\Get logs with High severity.Inputs[Conditional Split Input]"
              name="Multicast Output 1"
              startId="Package\Ensure correctness of fee data\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Multicast Output 12]"
              endId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 1]"
              name="Multicast Output 1"
              startId="Package\Ensure correctness of fee data\Multicast 1.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Multicast Output 2]"
              endId="Package\Ensure correctness of fee data\Unify logs.Inputs[Union All Input 2]"
              name="Multicast Output 2"
              startId="Package\Ensure correctness of fee data\Multicast 2.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Multicast Output 21]"
              endId="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input]"
              name="Multicast Output 2"
              startId="Package\Ensure correctness of fee data\Multicast.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Multicast Output 22]"
              endId="Package\Ensure correctness of fee data\Union 2.Inputs[Union All Input 2]"
              name="Multicast Output 2"
              startId="Package\Ensure correctness of fee data\Multicast 1.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[OLE DB Source Output]"
              endId="Package\Ensure correctness of fee data\Check for missing values.Inputs[Conditional Split Input]"
              name="OLE DB Source Output"
              startId="Package\Ensure correctness of fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Union All Output 1]"
              endId="Package\Ensure correctness of fee data\Parse FeeAmount.Inputs[Derived Column Input]"
              name="Union All Output 1"
              startId="Package\Ensure correctness of fee data\Union 2.Outputs[Union All Output 1]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Union All Output 11]"
              endId="Package\Ensure correctness of fee data\Include SessionId.Inputs[Derived Column Input]"
              name="Union All Output 1"
              startId="Package\Ensure correctness of fee data\Unify logs.Outputs[Union All Output 1]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Union All Output 12]"
              endId="Package\Ensure correctness of fee data\Multicast 1.Inputs[Multicast Input 1]"
              name="Union All Output 1"
              startId="Package\Ensure correctness of fee data\Union 1.Outputs[Union All Output 1]" />
            <path
              refId="Package\Ensure correctness of fee data.Paths[Union All Output 13]"
              endId="Package\Ensure correctness of fee data\Parse FeeDate.Inputs[Derived Column Input]"
              name="Union All Output 1"
              startId="Package\Ensure correctness of fee data\Union 3.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure correctness of license data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{0D5E95B3-7CD7-418C-B0D3-97F380B06F6C}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure correctness of license data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Ensure correctness of license data\Check for missing values"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Check for missing values"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Check for missing values.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Check for missing values.Inputs[Conditional Split Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Check for missing values.Inputs[Conditional Split Input].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]" />
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Check for missing values.Inputs[Conditional Split Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]" />
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Check for missing values.Inputs[Conditional Split Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Check for missing values.Outputs[BusinessName is missing]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="BusinessName is missing"
                  synchronousInputId="Package\Ensure correctness of license data\Check for missing values.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[TRIM](#{Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]}) == ""</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">TRIM(BusinessName) == ""</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Check for missing values.Outputs[LicenseCreationDate is missing]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="LicenseCreationDate is missing"
                  synchronousInputId="Package\Ensure correctness of license data\Check for missing values.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[TRIM](#{Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]}) == ""</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">TRIM(LicenseCreationDate) == ""</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Check for missing values.Outputs[Longitude is missing, but Latitude exists]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Longitude is missing, but Latitude exists"
                  synchronousInputId="Package\Ensure correctness of license data\Check for missing values.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[TRIM](#{Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]}) == "" &amp;&amp; [TRIM](#{Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]}) != ""</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">TRIM(Longitude) == "" &amp;&amp; TRIM(Latitude) != ""</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Check for missing values.Outputs[Latitude is missing, but Longitude exists]"
                  description="Output 4 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Latitude is missing, but Longitude exists"
                  synchronousInputId="Package\Ensure correctness of license data\Check for missing values.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[TRIM](#{Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]}) == "" &amp;&amp; [TRIM](#{Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]}) != ""</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">TRIM(Latitude) == "" &amp;&amp; TRIM(Longitude) != ""</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">3</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Check for missing values.Outputs[Default]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Default"
                  synchronousInputId="Package\Ensure correctness of license data\Check for missing values.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Check for missing values.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Check for missing values.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Check for missing values.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Check for missing values.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Check for missing values.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Check for missing values.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Delete rows from LicenseExtract table"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">DELETE FROM [DWSTAGE].[LicenseExtract]
WHERE [SourceRowNumber] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Inputs[OLE DB Command Input].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Get logs with High severity"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Get logs with High severity"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Get logs with High severity.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Get logs with High severity.Inputs[Conditional Split Input].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Severity]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Get logs with High severity.Outputs[High severity]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="High severity"
                  synchronousInputId="Package\Ensure correctness of license data\Get logs with High severity.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Severity]} == "High"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">Severity == "High"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Get logs with High severity.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Ensure correctness of license data\Get logs with High severity.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Get logs with High severity.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Get logs with High severity.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get logs with High severity.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Get logs with High severity.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get logs with High severity.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Get logs with High severity.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Get selected columns from extracted license data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get selected columns from extracted license data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[DCALicenseNumber]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]"
                      name="LicenseNumber"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseType]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessType]"
                      name="BusinessType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]"
                      name="AddressBuilding"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]"
                      name="AddressStreetName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]"
                      name="AddressCity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]"
                      name="AddressState"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]"
                      name="AddressZIP"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]"
                      name="AddressBorough"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]"
                      name="BoroughCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]"
                      name="CommunityBoard"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]"
                      name="CensusTract"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]"
                      name="Longitude"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]"
                      name="Latitude"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[SourceRowNumber]"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]"
                      name="SourceRowNumber"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="DCALicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      name="LicenseType" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      dataType="wstr"
                      length="50"
                      name="LicenseExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseStatus]"
                      dataType="wstr"
                      length="50"
                      name="LicenseStatus" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      dataType="wstr"
                      length="50"
                      name="LicenseCreationDate" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[ContactPhoneNumber]"
                      dataType="wstr"
                      length="50"
                      name="ContactPhoneNumber" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BIN]"
                      dataType="wstr"
                      length="50"
                      name="BIN" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BBL]"
                      dataType="wstr"
                      length="50"
                      name="BBL" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[NTA]"
                      dataType="wstr"
                      length="50"
                      name="NTA" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Detail]"
                      dataType="wstr"
                      length="300"
                      name="Detail" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Location]"
                      dataType="wstr"
                      length="50"
                      name="Location" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[SourceRowNumber]"
                      dataType="i4"
                      name="SourceRowNumber" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[DCALicenseNumber]"
                      name="DCALicenseNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseType]"
                      name="LicenseType" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseExpirationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseCreationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressBuilding]"
                      name="AddressBuilding" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressStreetName]"
                      name="AddressStreetName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressCity]"
                      name="AddressCity" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressState]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressState]"
                      name="AddressState" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressZIP]"
                      name="AddressZIP" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressBorough]"
                      name="AddressBorough" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[BoroughCode]"
                      name="BoroughCode" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[CommunityBoard]"
                      name="CommunityBoard" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[CensusTract]"
                      name="CensusTract" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[Longitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[Latitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Include SessionId"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Include SessionId"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Include SessionId.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Include SessionId.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of license data\Include SessionId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Include SessionId.Outputs[Derived Column Output].Columns[SessionId]"
                      dataType="guid"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of license data\Include SessionId.Outputs[Derived Column Output].Columns[SessionId]"
                      name="SessionId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_GUID)("{" + (DT_WSTR,36)@[User::SessionId] + "}")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_GUID)("{" + (DT_WSTR,36)@[User::SessionId] + "}")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Include SessionId.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Include SessionId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Include SessionId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Include SessionId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Include SessionId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Include SessionId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert logs to DataCorrectnessInfo table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWLOG].[DataCorrectnessInfo]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[SourceRowNumber]"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]" />
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Dataset]"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Dataset]" />
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="21"
                      cachedName="ColumnName"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnName]"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnName]" />
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="ColumnValue"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnValue]"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnValue]" />
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Timestamp]" />
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[SessionId]"
                      cachedDataType="guid"
                      cachedName="SessionId"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                      lineageId="Package\Ensure correctness of license data\Include SessionId.Outputs[Derived Column Output].Columns[SessionId]" />
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="41"
                      cachedName="Description"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Description]" />
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      externalMetadataColumnId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Severity]"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Severity]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Dataset]"
                      dataType="wstr"
                      length="20"
                      name="Dataset" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[SourceRowNumber]"
                      dataType="i4"
                      name="SourceRowNumber" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnName]"
                      dataType="wstr"
                      length="50"
                      name="ColumnName" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnValue]"
                      dataType="wstr"
                      length="300"
                      name="ColumnValue" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      dataType="dbTimeStamp2"
                      name="Timestamp"
                      scale="7" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                      dataType="guid"
                      name="SessionId" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                      dataType="wstr"
                      length="500"
                      name="Description" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Severity]"
                      dataType="wstr"
                      length="20"
                      name="Severity" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Log invalid Latitude"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log invalid Latitude"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Log invalid Latitude.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Latitude.Inputs[Derived Column Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Latitude]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log invalid Latitude.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Licenses"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Licenses"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Latitude"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Latitude"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Latitude]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">Latitude</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="19"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Latitude is invalid"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Latitude is invalid"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[SessionId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="36"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[SessionId]"
                      name="SessionId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,36)@[User::SessionId]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,36)@[User::SessionId]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log invalid Latitude.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log invalid LicenseCreationDate"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Inputs[Derived Column Input].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseCreationDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Licenses"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Licenses"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="19"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"LicenseCreationDate"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"LicenseCreationDate"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseCreationDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LicenseCreationDate</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="30"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"LicenseCreationDate is invalid"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"LicenseCreationDate is invalid"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[SessionId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="36"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[SessionId]"
                      name="SessionId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,36)@[User::SessionId]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,36)@[User::SessionId]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log invalid LicenseExpirationDate"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Inputs[Derived Column Input].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseExpirationDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Licenses"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Licenses"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="21"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"LicenseExpirationDate"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"LicenseExpirationDate"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LicenseExpirationDate</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="32"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"LicenseExpirationDate is invalid"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"LicenseExpirationDate is invalid"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[SessionId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="36"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[SessionId]"
                      name="SessionId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,36)@[User::SessionId]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,36)@[User::SessionId]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Log invalid Longitude"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log invalid Longitude"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Log invalid Longitude.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Longitude.Inputs[Derived Column Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Longitude]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log invalid Longitude.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Licenses"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Licenses"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Longitude"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Longitude"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Longitude]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">Longitude</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Longitude is invalid"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Longitude is invalid"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[SessionId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="36"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[SessionId]"
                      name="SessionId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,36)@[User::SessionId]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,36)@[User::SessionId]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log invalid Longitude.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Log missing BusinessName"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log missing BusinessName"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Log missing BusinessName.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Log missing BusinessName.Inputs[Derived Column Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log missing BusinessName.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Licenses"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Licenses"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="12"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"BusinessName"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"BusinessName"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="300"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">BusinessName</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="23"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"BusinessName is missing"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"BusinessName is missing"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log missing BusinessName.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Log missing Latitude"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log missing Latitude"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Log missing Latitude.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Log missing Latitude.Inputs[Derived Column Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log missing Latitude.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Licenses"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Licenses"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Latitude"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Latitude"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">Latitude</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="41"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Latitude is missing, but Longitude exists"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Latitude is missing, but Longitude exists"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log missing Latitude.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Log missing LicenseCreationDate"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log missing LicenseCreationDate"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Inputs[Derived Column Input].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Licenses"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Licenses"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="19"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"LicenseCreationDate"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"LicenseCreationDate"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LicenseCreationDate</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="30"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"LicenseCreationDate is missing"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"LicenseCreationDate is missing"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Log missing Longitude"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log missing Longitude"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Log missing Longitude.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Log missing Longitude.Inputs[Derived Column Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log missing Longitude.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Licenses"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Licenses"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Longitude"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Longitude"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">Longitude</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="41"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Longitude is missing, but Latitude exists"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Longitude is missing, but Latitude exists"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Log missing Longitude.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Multicast.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Multicast.Outputs[Multicast Output 3]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Multicast.Outputs[Multicast Output 1]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Multicast 1"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast 1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Multicast 1.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Multicast 1.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Multicast 1.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Multicast 1.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Multicast 2"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast 2">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Multicast 2.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Multicast 2.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast 2.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Multicast 2.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast 2.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Multicast 2.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast 2.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Multicast 3"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast 3">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Multicast 3.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Multicast 3.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast 3.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Multicast 3.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast 3.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Multicast 3.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast 3.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Multicast 4"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast 4">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Multicast 4.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Multicast 4.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast 4.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Multicast 4.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast 4.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Multicast 4.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Ensure correctness of license data\Multicast 4.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Parse Latitude"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Parse Latitude"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Parse Latitude.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Parse Latitude.Inputs[Derived Column Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Latitude]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Parse Latitude.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of license data\Parse Latitude.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Parse Latitude.Outputs[Derived Column Output].Columns[LatitudeParsed]"
                      dataType="numeric"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Ensure correctness of license data\Parse Latitude.Outputs[Derived Column Output].Columns[LatitudeParsed]"
                      name="LatitudeParsed"
                      precision="8"
                      scale="6"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Latitude]}) == "" ? NULL(DT_NUMERIC,8,6) : (DT_NUMERIC,8,6)#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Latitude]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(Latitude) == "" ? NULL(DT_NUMERIC,8,6) : (DT_NUMERIC,8,6)Latitude</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Parse Latitude.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Parse Latitude.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Parse Latitude.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Parse Latitude.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Parse Latitude.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Parse Latitude.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Parse LicenseCreationDate"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Parse LicenseCreationDate"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Inputs[Derived Column Input].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseCreationDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Outputs[Derived Column Output].Columns[LicenseCreationDateParsed]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Outputs[Derived Column Output].Columns[LicenseCreationDateParsed]"
                      name="LicenseCreationDateParsed"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseCreationDate]}) != "" ? (DT_DBDATE)#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseCreationDate]} : NULL(DT_DBDATE)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(LicenseCreationDate) != "" ? (DT_DBDATE)LicenseCreationDate : NULL(DT_DBDATE)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Parse LicenseExpirationDate"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Parse LicenseExpirationDate"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Inputs[Derived Column Input].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseExpirationDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Outputs[Derived Column Output].Columns[LicenseExpirationDateParsed]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Outputs[Derived Column Output].Columns[LicenseExpirationDateParsed]"
                      name="LicenseExpirationDateParsed"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}) != "" ? (DT_DBDATE)#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseExpirationDate]} : NULL(DT_DBDATE)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(LicenseExpirationDate) != "" ? (DT_DBDATE)LicenseExpirationDate : NULL(DT_DBDATE)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Parse Longitude"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Parse Longitude"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Parse Longitude.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Parse Longitude.Inputs[Derived Column Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Longitude]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Parse Longitude.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of license data\Parse Longitude.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Parse Longitude.Outputs[Derived Column Output].Columns[LongitudeParsed]"
                      dataType="numeric"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Ensure correctness of license data\Parse Longitude.Outputs[Derived Column Output].Columns[LongitudeParsed]"
                      name="LongitudeParsed"
                      precision="9"
                      scale="6"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Longitude]}) == "" ? NULL(DT_NUMERIC,9,6) : (DT_NUMERIC,9,6)#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Longitude]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(Longitude) == "" ? NULL(DT_NUMERIC,9,6) : (DT_NUMERIC,9,6)Longitude</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of license data\Parse Longitude.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of license data\Parse Longitude.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Parse Longitude.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Parse Longitude.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Parse Longitude.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Parse Longitude.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Unify log data"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Unify log data"
              version="1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 1].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 1].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 1].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="19"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 1].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 1].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="30"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 1].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 1].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 2].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 2].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 2].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 2].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 2].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 2].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="21"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 2].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="32"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 3]"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 3].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 3].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 3].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 3].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 3].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 3].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 3].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 4]"
                  hasSideEffects="true"
                  name="Union All Input 4">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 4].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 4].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 4].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 4].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 4].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="19"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 4].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 4].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 5]"
                  hasSideEffects="true"
                  name="Union All Input 5">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 5].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 5].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 5].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="19"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 5].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 5].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 5].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 5].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="41"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 6]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 6">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Dataset]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Dataset]"
                      name="Dataset" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnName]"
                      dataType="wstr"
                      length="21"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnName]"
                      name="ColumnName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnValue]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[ColumnValue]"
                      name="ColumnValue" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Description]"
                      dataType="wstr"
                      length="41"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Description]"
                      name="Description" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Timestamp]"
                      name="Timestamp" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Severity]"
                      dataType="wstr"
                      length="6"
                      lineageId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1].Columns[Severity]"
                      name="Severity" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Union 1"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union 1"
              version="1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="23"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="19"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="30"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3]"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="41"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4]"
                  hasSideEffects="true"
                  name="Union All Input 4">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="41"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 5]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 5">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseNumber]"
                      name="LicenseNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessType]"
                      name="BusinessType" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseCreationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBuilding]"
                      name="AddressBuilding" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressStreetName]"
                      name="AddressStreetName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressCity]"
                      name="AddressCity" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressState]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressState]"
                      name="AddressState" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressZIP]"
                      name="AddressZIP" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBorough]"
                      name="AddressBorough" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BoroughCode]"
                      name="BoroughCode" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CommunityBoard]"
                      name="CommunityBoard" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CouncilDistrict]"
                      name="CouncilDistrict" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CensusTract]"
                      name="CensusTract" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Longitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Latitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Dataset]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Dataset]"
                      name="Dataset" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]"
                      dataType="wstr"
                      length="19"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]"
                      name="ColumnName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]"
                      name="ColumnValue" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Description]"
                      dataType="wstr"
                      length="41"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Description]"
                      name="Description" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]"
                      name="Timestamp" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Severity]"
                      dataType="wstr"
                      length="6"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Severity]"
                      name="Severity" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Union 2"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union 2"
              version="1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseNumber]"
                      name="LicenseNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessType]"
                      name="BusinessType" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseCreationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressBuilding]"
                      name="AddressBuilding" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressStreetName]"
                      name="AddressStreetName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressCity]"
                      name="AddressCity" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressState]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressState]"
                      name="AddressState" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressZIP]"
                      name="AddressZIP" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressBorough]"
                      name="AddressBorough" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BoroughCode]"
                      name="BoroughCode" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CommunityBoard]"
                      name="CommunityBoard" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CouncilDistrict]"
                      name="CouncilDistrict" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CensusTract]"
                      name="CensusTract" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Longitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Latitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Union 3"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union 3"
              version="1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseNumber]"
                      name="LicenseNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessType]"
                      name="BusinessType" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseCreationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressBuilding]"
                      name="AddressBuilding" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressStreetName]"
                      name="AddressStreetName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressCity]"
                      name="AddressCity" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressState]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressState]"
                      name="AddressState" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressZIP]"
                      name="AddressZIP" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressBorough]"
                      name="AddressBorough" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BoroughCode]"
                      name="BoroughCode" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CommunityBoard]"
                      name="CommunityBoard" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CouncilDistrict]"
                      name="CouncilDistrict" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CensusTract]"
                      name="CensusTract" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Longitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Latitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Union 4"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union 4"
              version="1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseNumber]"
                      name="LicenseNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessType]"
                      name="BusinessType" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseCreationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressBuilding]"
                      name="AddressBuilding" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressStreetName]"
                      name="AddressStreetName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressCity]"
                      name="AddressCity" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressState]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressState]"
                      name="AddressState" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressZIP]"
                      name="AddressZIP" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressBorough]"
                      name="AddressBorough" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BoroughCode]"
                      name="BoroughCode" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CommunityBoard]"
                      name="CommunityBoard" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CouncilDistrict]"
                      name="CouncilDistrict" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CensusTract]"
                      name="CensusTract" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Longitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Latitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of license data\Union 5"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union 5"
              version="1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BusinessType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BusinessName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BusinessName2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BusinessName2]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressBuilding]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressBuilding]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressCity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressCity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressState]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressState]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressZIP]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressZIP]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[AddressBorough]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressBorough]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[BoroughCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BoroughCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CommunityBoard]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[CommunityBoard]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[CouncilDistrict]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[CensusTract]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[CensusTract]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Longitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Longitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[Latitude]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Latitude]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[LicenseNumber]"
                      name="LicenseNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BusinessType]"
                      name="BusinessType" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[LicenseCreationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressBuilding]"
                      name="AddressBuilding" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressStreetName]"
                      name="AddressStreetName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressCity]"
                      name="AddressCity" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressState]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressState]"
                      name="AddressState" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressZIP]"
                      name="AddressZIP" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[AddressBorough]"
                      name="AddressBorough" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[BoroughCode]"
                      name="BoroughCode" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[CommunityBoard]"
                      name="CommunityBoard" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[CouncilDistrict]"
                      name="CouncilDistrict" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[CensusTract]"
                      name="CensusTract" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Longitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Latitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Ensure correctness of license data.Paths[BusinessName is empty]"
              endId="Package\Ensure correctness of license data\Log missing BusinessName.Inputs[Derived Column Input]"
              name="BusinessName is empty"
              startId="Package\Ensure correctness of license data\Check for missing values.Outputs[BusinessName is missing]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Default]"
              endId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 2]"
              name="Default"
              startId="Package\Ensure correctness of license data\Check for missing values.Outputs[Default]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Error Output]"
              endId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Inputs[Derived Column Input]"
              name="Derived Column Error Output"
              startId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Outputs[Derived Column Error Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Error Output1]"
              endId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Inputs[Derived Column Input]"
              name="Derived Column Error Output"
              startId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Outputs[Derived Column Error Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Error Output2]"
              endId="Package\Ensure correctness of license data\Log invalid Latitude.Inputs[Derived Column Input]"
              name="Derived Column Error Output"
              startId="Package\Ensure correctness of license data\Parse Latitude.Outputs[Derived Column Error Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Error Output3]"
              endId="Package\Ensure correctness of license data\Log invalid Longitude.Inputs[Derived Column Input]"
              name="Derived Column Error Output"
              startId="Package\Ensure correctness of license data\Parse Longitude.Outputs[Derived Column Error Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Output10]"
              endId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 1]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of license data\Parse Longitude.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Output9]"
              endId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 2]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Output8]"
              endId="Package\Ensure correctness of license data\Multicast 4.Inputs[Multicast Input 1]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of license data\Log invalid Longitude.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Output7]"
              endId="Package\Ensure correctness of license data\Multicast.Inputs[Multicast Input 1]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of license data\Include SessionId.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Output6]"
              endId="Package\Ensure correctness of license data\Multicast 3.Inputs[Multicast Input 1]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Output3]"
              endId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 2]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Output4]"
              endId="Package\Ensure correctness of license data\Multicast 2.Inputs[Multicast Input 1]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of license data\Log invalid LicenseCreationDate.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Output11]"
              endId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 1]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of license data\Log missing BusinessName.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Output2]"
              endId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 2]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Output1]"
              endId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 3]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of license data\Log missing Longitude.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Output]"
              endId="Package\Ensure correctness of license data\Union 1.Inputs[Union All Input 4]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of license data\Log missing Latitude.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Derived Column Output5]"
              endId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 4]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of license data\Log invalid Latitude.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[High severity]"
              endId="Package\Ensure correctness of license data\Delete rows from LicenseExtract table.Inputs[OLE DB Command Input]"
              name="High severity"
              startId="Package\Ensure correctness of license data\Get logs with High severity.Outputs[High severity]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Latitude is missing, but Longitude exists]"
              endId="Package\Ensure correctness of license data\Log missing Latitude.Inputs[Derived Column Input]"
              name="Latitude is missing, but Longitude exists"
              startId="Package\Ensure correctness of license data\Check for missing values.Outputs[Latitude is missing, but Longitude exists]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[LicenseCreationDate is empty]"
              endId="Package\Ensure correctness of license data\Log missing LicenseCreationDate.Inputs[Derived Column Input]"
              name="LicenseCreationDate is empty"
              startId="Package\Ensure correctness of license data\Check for missing values.Outputs[LicenseCreationDate is missing]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Longitude is missing, but Latitude exists]"
              endId="Package\Ensure correctness of license data\Log missing Longitude.Inputs[Derived Column Input]"
              name="Longitude is missing, but Latitude exists"
              startId="Package\Ensure correctness of license data\Check for missing values.Outputs[Longitude is missing, but Latitude exists]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Multicast Output 1]"
              endId="Package\Ensure correctness of license data\Union 4.Inputs[Union All Input 1]"
              name="Multicast Output 1"
              startId="Package\Ensure correctness of license data\Multicast 3.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Multicast Output 11]"
              endId="Package\Ensure correctness of license data\Union 5.Inputs[Union All Input 2]"
              name="Multicast Output 1"
              startId="Package\Ensure correctness of license data\Multicast 4.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Multicast Output 12]"
              endId="Package\Ensure correctness of license data\Union 2.Inputs[Union All Input 1]"
              name="Multicast Output 1"
              startId="Package\Ensure correctness of license data\Multicast 1.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Multicast Output 13]"
              endId="Package\Ensure correctness of license data\Union 3.Inputs[Union All Input 1]"
              name="Multicast Output 1"
              startId="Package\Ensure correctness of license data\Multicast 2.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Multicast Output 24]"
              endId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 2]"
              name="Multicast Output 2"
              startId="Package\Ensure correctness of license data\Multicast 3.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Multicast Output 22]"
              endId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 1]"
              name="Multicast Output 2"
              startId="Package\Ensure correctness of license data\Multicast 2.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Multicast Output 23]"
              endId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 3]"
              name="Multicast Output 2"
              startId="Package\Ensure correctness of license data\Multicast 4.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Multicast Output 2]"
              endId="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input]"
              name="Multicast Output 2"
              startId="Package\Ensure correctness of license data\Multicast.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Multicast Output 21]"
              endId="Package\Ensure correctness of license data\Unify log data.Inputs[Union All Input 5]"
              name="Multicast Output 2"
              startId="Package\Ensure correctness of license data\Multicast 1.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Multicast Output 3]"
              endId="Package\Ensure correctness of license data\Get logs with High severity.Inputs[Conditional Split Input]"
              name="Multicast Output 3"
              startId="Package\Ensure correctness of license data\Multicast.Outputs[Multicast Output 3]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[OLE DB Source Output]"
              endId="Package\Ensure correctness of license data\Check for missing values.Inputs[Conditional Split Input]"
              name="OLE DB Source Output"
              startId="Package\Ensure correctness of license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Union All Output 14]"
              endId="Package\Ensure correctness of license data\Parse LicenseExpirationDate.Inputs[Derived Column Input]"
              name="Union All Output 1"
              startId="Package\Ensure correctness of license data\Union 3.Outputs[Union All Output 1]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Union All Output 1]"
              endId="Package\Ensure correctness of license data\Parse LicenseCreationDate.Inputs[Derived Column Input]"
              name="Union All Output 1"
              startId="Package\Ensure correctness of license data\Union 2.Outputs[Union All Output 1]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Union All Output 11]"
              endId="Package\Ensure correctness of license data\Include SessionId.Inputs[Derived Column Input]"
              name="Union All Output 1"
              startId="Package\Ensure correctness of license data\Unify log data.Outputs[Union All Output 1]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Union All Output 12]"
              endId="Package\Ensure correctness of license data\Parse Latitude.Inputs[Derived Column Input]"
              name="Union All Output 1"
              startId="Package\Ensure correctness of license data\Union 5.Outputs[Union All Output 1]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Union All Output 13]"
              endId="Package\Ensure correctness of license data\Parse Longitude.Inputs[Derived Column Input]"
              name="Union All Output 1"
              startId="Package\Ensure correctness of license data\Union 4.Outputs[Union All Output 1]" />
            <path
              refId="Package\Ensure correctness of license data.Paths[Union All Output 15]"
              endId="Package\Ensure correctness of license data\Multicast 1.Inputs[Multicast Input 1]"
              name="Union All Output 1"
              startId="Package\Ensure correctness of license data\Union 1.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure correctness of payment data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{3300F248-DDA7-4DA9-9444-53FBD38AEBBE}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure correctness of payment data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Ensure correctness of payment data\Check for missing values"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Check for missing values"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Check for missing values.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Check for missing values.Inputs[Conditional Split Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Check for missing values.Inputs[Conditional Split Input].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Check for missing values.Outputs[FeeSequenceId is missing]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="FeeSequenceId is missing"
                  synchronousInputId="Package\Ensure correctness of payment data\Check for missing values.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[TRIM](#{Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}) == ""</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">TRIM(FeeSequenceId) == ""</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Check for missing values.Outputs[PaymentAmount is missing]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="PaymentAmount is missing"
                  synchronousInputId="Package\Ensure correctness of payment data\Check for missing values.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[TRIM](#{Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]}) == ""</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">TRIM(PaymentAmount) == ""</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Check for missing values.Outputs[Default]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Default"
                  synchronousInputId="Package\Ensure correctness of payment data\Check for missing values.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Check for missing values.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Check for missing values.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Check for missing values.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Check for missing values.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Check for missing values.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Check for missing values.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Delete rows from PaymentExtract table"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">DELETE FROM [DWSTAGE].[PaymentExtract]
WHERE [SourceRowNumber] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Inputs[OLE DB Command Input].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      externalMetadataColumnId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Get logs with High severity"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Get logs with High severity"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Get logs with High severity.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Get logs with High severity.Inputs[Conditional Split Input].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Severity]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Get logs with High severity.Outputs[High severity]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="High severity"
                  synchronousInputId="Package\Ensure correctness of payment data\Get logs with High severity.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Severity]} == "High"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">Severity == "High"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Get logs with High severity.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Get logs with High severity.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Get logs with High severity.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Get logs with High severity.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Get logs with High severity.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Get logs with High severity.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Get logs with High severity.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Get logs with High severity.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get selected columns from extracted payment data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[PaymentExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[SourceRowNumber]"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]"
                      name="SourceRowNumber"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentAmount]"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      name="TransactionType"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[SourceRowNumber]"
                      dataType="i4"
                      name="SourceRowNumber" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[RecordId]"
                      dataType="wstr"
                      length="50"
                      name="RecordId" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentAmount]"
                      dataType="wstr"
                      length="50"
                      name="PaymentAmount" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentDate]"
                      dataType="wstr"
                      length="50"
                      name="PaymentDate" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[PaymentAmount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[PaymentAmount]"
                      name="PaymentAmount" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      name="TransactionType" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Include SessionId"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Include SessionId"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Include SessionId.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Include SessionId.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Include SessionId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Include SessionId.Outputs[Derived Column Output].Columns[SessionId]"
                      dataType="guid"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of payment data\Include SessionId.Outputs[Derived Column Output].Columns[SessionId]"
                      name="SessionId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_GUID)("{" + (DT_WSTR,36)@[User::SessionId] + "}")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_GUID)("{" + (DT_WSTR,36)@[User::SessionId] + "}")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Include SessionId.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Include SessionId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Include SessionId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Include SessionId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Include SessionId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Include SessionId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert logs to DataCorrectnessInfo table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWLOG].[DataCorrectnessInfo]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      externalMetadataColumnId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[SourceRowNumber]"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]" />
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      externalMetadataColumnId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Dataset]"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Dataset]" />
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="13"
                      cachedName="ColumnName"
                      externalMetadataColumnId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnName]"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[ColumnName]" />
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      externalMetadataColumnId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnValue]"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[ColumnValue]" />
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      externalMetadataColumnId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Timestamp]" />
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[SessionId]"
                      cachedDataType="guid"
                      cachedName="SessionId"
                      externalMetadataColumnId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                      lineageId="Package\Ensure correctness of payment data\Include SessionId.Outputs[Derived Column Output].Columns[SessionId]" />
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="24"
                      cachedName="Description"
                      externalMetadataColumnId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Description]" />
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      externalMetadataColumnId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Severity]"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Severity]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Dataset]"
                      dataType="wstr"
                      length="20"
                      name="Dataset" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[SourceRowNumber]"
                      dataType="i4"
                      name="SourceRowNumber" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnName]"
                      dataType="wstr"
                      length="50"
                      name="ColumnName" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnValue]"
                      dataType="wstr"
                      length="300"
                      name="ColumnValue" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      dataType="dbTimeStamp2"
                      name="Timestamp"
                      scale="7" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                      dataType="guid"
                      name="SessionId" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                      dataType="wstr"
                      length="500"
                      name="Description" />
                    <externalMetadataColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input].ExternalColumns[Severity]"
                      dataType="wstr"
                      length="20"
                      name="Severity" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Log invalid PaymentAmount"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log invalid PaymentAmount"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Inputs[Derived Column Input].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      lineageId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[PaymentAmount]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Payments"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Payments"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="13"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"PaymentAmount"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"PaymentAmount"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[PaymentAmount]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">PaymentAmount</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="24"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"PaymentAmount is invalid"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"PaymentAmount is invalid"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Log missing FeeSequenceId"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log missing FeeSequenceId"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Inputs[Derived Column Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Payments"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Payments"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="13"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"FeeSequenceId"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"FeeSequenceId"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">FeeSequenceId</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="24"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"FeeSequenceId is missing"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"FeeSequenceId is missing"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Log missing PaymentAmount"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Log missing PaymentAmount"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Inputs[Derived Column Input].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Payments"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Payments"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[ColumnName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="13"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[ColumnName]"
                      name="ColumnName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"PaymentAmount"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"PaymentAmount"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[ColumnValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[ColumnValue]"
                      name="ColumnValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">PaymentAmount</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="24"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"PaymentAmount is missing"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"PaymentAmount is missing"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[Severity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[Severity]"
                      name="Severity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Medium"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Medium"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Multicast.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Ensure correctness of payment data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Multicast.Outputs[Multicast Output 3]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Ensure correctness of payment data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Multicast.Outputs[Multicast Output 1]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Ensure correctness of payment data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Multicast 1"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast 1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Multicast 1.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Multicast 1.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Ensure correctness of payment data\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Multicast 1.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Ensure correctness of payment data\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Multicast 1.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Ensure correctness of payment data\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Parse PaymentAmount"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Parse PaymentAmount"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Parse PaymentAmount.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Parse PaymentAmount.Inputs[Derived Column Input].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      lineageId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[PaymentAmount]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Parse PaymentAmount.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Parse PaymentAmount.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Parse PaymentAmount.Outputs[Derived Column Output].Columns[PaymentAmountParsed]"
                      dataType="cy"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Ensure correctness of payment data\Parse PaymentAmount.Outputs[Derived Column Output].Columns[PaymentAmountParsed]"
                      name="PaymentAmountParsed"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[PaymentAmount]}) != "" ? (DT_CY)#{Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[PaymentAmount]} : NULL(DT_CY)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(PaymentAmount) != "" ? (DT_CY)PaymentAmount : NULL(DT_CY)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Ensure correctness of payment data\Parse PaymentAmount.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Ensure correctness of payment data\Parse PaymentAmount.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Parse PaymentAmount.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Parse PaymentAmount.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Parse PaymentAmount.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Parse PaymentAmount.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Unify log data"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Unify log data"
              version="1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 1].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 1].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 1].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[PaymentAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[PaymentAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 1].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[TransactionType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[TransactionType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 1].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 1].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="13"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 1].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 1].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="24"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 1].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 1].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 2].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 2].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 2].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      lineageId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[PaymentAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[PaymentAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 2].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[TransactionType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[TransactionType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 2].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 2].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="13"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 2].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 2].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="24"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 2].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 2].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[PaymentAmount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[PaymentAmount]"
                      name="PaymentAmount" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[TransactionType]"
                      name="TransactionType" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Dataset]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Dataset]"
                      name="Dataset" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[ColumnName]"
                      dataType="wstr"
                      length="13"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[ColumnName]"
                      name="ColumnName" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[ColumnValue]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[ColumnValue]"
                      name="ColumnValue" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Description]"
                      dataType="wstr"
                      length="24"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Description]"
                      name="Description" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Timestamp]"
                      name="Timestamp" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Severity]"
                      dataType="wstr"
                      length="6"
                      lineageId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1].Columns[Severity]"
                      name="Severity" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Union 1"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union 1"
              version="1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 1].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 1].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 1].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[PaymentAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 1].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[TransactionType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[TransactionType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 1].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 1].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="13"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 1].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 1].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="24"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 1].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 1].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 2].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 2].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 2].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[PaymentAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 2].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[TransactionType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[TransactionType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 2].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[Dataset]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Dataset]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 2].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="13"
                      cachedName="ColumnName"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[ColumnName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 2].Columns[ColumnValue]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ColumnValue"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[ColumnValue]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 2].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="24"
                      cachedName="Description"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[Description]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Description]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 2].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[Timestamp]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 2].Columns[Severity]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="Severity"
                      lineageId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output].Columns[Severity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Severity]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[PaymentAmount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[PaymentAmount]"
                      name="PaymentAmount" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[TransactionType]"
                      name="TransactionType" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Dataset]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Dataset]"
                      name="Dataset" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]"
                      dataType="wstr"
                      length="13"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[ColumnName]"
                      name="ColumnName" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[ColumnValue]"
                      name="ColumnValue" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Description]"
                      dataType="wstr"
                      length="24"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Description]"
                      name="Description" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Timestamp]"
                      name="Timestamp" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Severity]"
                      dataType="wstr"
                      length="6"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[Severity]"
                      name="Severity" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Ensure correctness of payment data\Union 2"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union 2"
              version="1">
              <inputs>
                <input
                  refId="Package\Ensure correctness of payment data\Union 2.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 2.Inputs[Union All Input 1].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 2.Inputs[Union All Input 1].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 2.Inputs[Union All Input 1].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[PaymentAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 2.Inputs[Union All Input 1].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[TransactionType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[TransactionType]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of payment data\Union 2.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 2.Inputs[Union All Input 2].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[SourceRowNumber]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 2.Inputs[Union All Input 2].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[FeeSequenceId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 2.Inputs[Union All Input 2].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[PaymentAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[PaymentAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Ensure correctness of payment data\Union 2.Inputs[Union All Input 2].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1].Columns[TransactionType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[TransactionType]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Ensure correctness of payment data\Union 2.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[PaymentAmount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[PaymentAmount]"
                      name="PaymentAmount" />
                    <outputColumn
                      refId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1].Columns[TransactionType]"
                      name="TransactionType" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Ensure correctness of payment data.Paths[Default]"
              endId="Package\Ensure correctness of payment data\Union 2.Inputs[Union All Input 1]"
              name="Default"
              startId="Package\Ensure correctness of payment data\Check for missing values.Outputs[Default]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[Derived Column Error Output]"
              endId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Inputs[Derived Column Input]"
              name="Derived Column Error Output"
              startId="Package\Ensure correctness of payment data\Parse PaymentAmount.Outputs[Derived Column Error Output]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[Derived Column Output]"
              endId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 2]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[Derived Column Output1]"
              endId="Package\Ensure correctness of payment data\Multicast.Inputs[Multicast Input 1]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of payment data\Include SessionId.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[Derived Column Output2]"
              endId="Package\Ensure correctness of payment data\Union 1.Inputs[Union All Input 1]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[Derived Column Output3]"
              endId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 2]"
              name="Derived Column Output"
              startId="Package\Ensure correctness of payment data\Log invalid PaymentAmount.Outputs[Derived Column Output]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[FeeSequenceId is missing]"
              endId="Package\Ensure correctness of payment data\Log missing FeeSequenceId.Inputs[Derived Column Input]"
              name="FeeSequenceId is missing"
              startId="Package\Ensure correctness of payment data\Check for missing values.Outputs[FeeSequenceId is missing]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[High severity]"
              endId="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table.Inputs[OLE DB Command Input]"
              name="High severity"
              startId="Package\Ensure correctness of payment data\Get logs with High severity.Outputs[High severity]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[Multicast Output 1]"
              endId="Package\Ensure correctness of payment data\Union 2.Inputs[Union All Input 2]"
              name="Multicast Output 1"
              startId="Package\Ensure correctness of payment data\Multicast 1.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[Multicast Output 2]"
              endId="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table.Inputs[OLE DB Destination Input]"
              name="Multicast Output 2"
              startId="Package\Ensure correctness of payment data\Multicast.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[Multicast Output 21]"
              endId="Package\Ensure correctness of payment data\Unify log data.Inputs[Union All Input 1]"
              name="Multicast Output 2"
              startId="Package\Ensure correctness of payment data\Multicast 1.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[Multicast Output 3]"
              endId="Package\Ensure correctness of payment data\Get logs with High severity.Inputs[Conditional Split Input]"
              name="Multicast Output 3"
              startId="Package\Ensure correctness of payment data\Multicast.Outputs[Multicast Output 3]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[OLE DB Source Output]"
              endId="Package\Ensure correctness of payment data\Check for missing values.Inputs[Conditional Split Input]"
              name="OLE DB Source Output"
              startId="Package\Ensure correctness of payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[PaymentAmount is missing]"
              endId="Package\Ensure correctness of payment data\Log missing PaymentAmount.Inputs[Derived Column Input]"
              name="PaymentAmount is missing"
              startId="Package\Ensure correctness of payment data\Check for missing values.Outputs[PaymentAmount is missing]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[Union All Output 1]"
              endId="Package\Ensure correctness of payment data\Multicast 1.Inputs[Multicast Input 1]"
              name="Union All Output 1"
              startId="Package\Ensure correctness of payment data\Union 1.Outputs[Union All Output 1]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[Union All Output 11]"
              endId="Package\Ensure correctness of payment data\Parse PaymentAmount.Inputs[Derived Column Input]"
              name="Union All Output 1"
              startId="Package\Ensure correctness of payment data\Union 2.Outputs[Union All Output 1]" />
            <path
              refId="Package\Ensure correctness of payment data.Paths[Union All Output 12]"
              endId="Package\Ensure correctness of payment data\Include SessionId.Inputs[Derived Column Input]"
              name="Union All Output 1"
              startId="Package\Ensure correctness of payment data\Unify log data.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure DWSTAGE, DWLOG and DW schemas exist"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3a5bb444-605c-4a8b-80c3-5448bfbae3de}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure DWSTAGE, DWLOG and DW schemas exist"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2AE594AF-1E0E-4046-88A5-B26D8D809332}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT *&#xA;    FROM [sys].[schemas]&#xA;    WHERE [name] = N'DWSTAGE'&#xA;)&#xA;EXEC('CREATE SCHEMA [DWSTAGE]');&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT *&#xA;    FROM [sys].[schemas]&#xA;    WHERE [name] = N'DWLOG'&#xA;)&#xA;EXEC('CREATE SCHEMA [DWLOG]');&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT *&#xA;    FROM [sys].[schemas]&#xA;    WHERE [name] = N'DW'&#xA;)&#xA;EXEC('CREATE SCHEMA [DW]');" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure logging tables, staging tables, dimensions and fact tables exist"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{a9f89b0a-9d63-4990-9f53-d6af43e528b5}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure logging tables, staging tables, dimensions and fact tables exist"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2AE594AF-1E0E-4046-88A5-B26D8D809332}"
          SQLTask:SqlStatementSource="-- Logging tables&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'Sessions' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWLOG].[Sessions] (&#xA;    [SessionId] uniqueidentifier NOT NULL UNIQUE,&#xA;    [StartTime] datetime2 NOT NULL,&#xA;&#x9;[EndTime] datetime2 NULL,&#xA;    CONSTRAINT [PK_Sessions] PRIMARY KEY ([SessionId])&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'DataExtractionErrors' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWLOG].[DataExtractionErrors] (&#xA;    [SessionId] uniqueidentifier NOT NULL,&#xA;    [Dataset] nvarchar(20) NOT NULL,&#xA;    [FaultyRow] nvarchar(4000) NOT NULL,&#xA;&#x9;[ErrorColumn] int NOT NULL,&#xA;    [ColumnName] nvarchar(255) NOT NULL,&#xA;&#x9;[ErrorCode] int NOT NULL,&#xA;    [ErrorDescription] nvarchar(255) NOT NULL,&#xA;    [Timestamp] datetime2 NOT NULL,&#xA;    CONSTRAINT [FK_DataExtractionErrors_ToSessions] FOREIGN KEY ([SessionId]) REFERENCES [DWLOG].[Sessions]([SessionId])&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'DataCorrectnessInfo' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWLOG].[DataCorrectnessInfo] (&#xA;    [SessionId] uniqueidentifier NOT NULL,&#xA;    [Dataset] nvarchar(20) NOT NULL,&#xA;    [SourceRowNumber] int NOT NULL,&#xA;    [ColumnName] nvarchar(50) NOT NULL,&#xA;    [ColumnValue] nvarchar(300) NOT NULL,&#xA;    [Description] nvarchar(500) NOT NULL,&#xA;&#x9;[Severity] nvarchar(20) NOT NULL,&#xA;    [Timestamp] datetime2 NOT NULL,&#xA;    CONSTRAINT [FK_DataCorrectnessInfo_ToSessions] FOREIGN KEY ([SessionId]) REFERENCES [DWLOG].[Sessions]([SessionId])&#xA;)&#xA;GO&#xA;&#xA;-- Extract tables&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'LicenseExtract' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWSTAGE].[LicenseExtract] (&#xA;    [SourceRowNumber] int NOT NULL UNIQUE,&#xA;    [DCALicenseNumber] nvarchar(50) NOT NULL,&#xA;    [LicenseType] nvarchar(50) NOT NULL,&#xA;    [LicenseExpirationDate] nvarchar(50) NOT NULL,&#xA;    [LicenseStatus] nvarchar(50) NOT NULL,&#xA;    [LicenseCreationDate] nvarchar(50) NOT NULL,&#xA;    [Industry] nvarchar(50) NOT NULL,&#xA;    [BusinessName] nvarchar(300) NOT NULL,&#xA;    [BusinessName2] nvarchar(100) NOT NULL,&#xA;    [AddressBuilding] nvarchar(50) NOT NULL,&#xA;    [AddressStreetName] nvarchar(75) NOT NULL,&#xA;    [SecondaryAddressStreetName] nvarchar(75) NOT NULL,&#xA;    [AddressCity] nvarchar(50) NOT NULL,&#xA;    [AddressState] nvarchar(50) NOT NULL,&#xA;    [AddressZIP] nvarchar(50) NOT NULL,&#xA;    [ContactPhoneNumber] nvarchar(50) NOT NULL,&#xA;    [AddressBorough] nvarchar(50) NOT NULL,&#xA;    [BoroughCode] nvarchar(50) NOT NULL,&#xA;    [CommunityBoard] nvarchar(50) NOT NULL,&#xA;    [CouncilDistrict] nvarchar(50) NOT NULL,&#xA;    [BIN] nvarchar(50) NOT NULL,&#xA;    [BBL] nvarchar(50) NOT NULL,&#xA;    [NTA] nvarchar(50) NOT NULL,&#xA;    [CensusTract] nvarchar(50) NOT NULL,&#xA;    [Detail] nvarchar(300) NOT NULL,&#xA;    [Longitude] nvarchar(50) NOT NULL,&#xA;    [Latitude] nvarchar(50) NOT NULL,&#xA;    [Location] nvarchar(50) NOT NULL&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'FeeExtract' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWSTAGE].[FeeExtract] (&#xA;    [SourceRowNumber] int NOT NULL UNIQUE,&#xA;    [RecordId] nvarchar(50) NOT NULL,&#xA;    [RecordType] nvarchar(50) NOT NULL,&#xA;    [BusinessName] nvarchar(300) NOT NULL,&#xA;    [BusinessName2] nvarchar(100) NOT NULL,&#xA;    [Industry] nvarchar(50) NOT NULL,&#xA;    [FeeSequenceId] nvarchar(50) NOT NULL,&#xA;    [FeeType] nvarchar(50) NOT NULL,&#xA;    [FeeDescription] nvarchar(100) NOT NULL,&#xA;    [FeeAmount] nvarchar(50) NOT NULL,&#xA;    [FeeDate] nvarchar(50) NOT NULL,&#xA;    [FeeStatus] nvarchar(50) NOT NULL&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'PaymentExtract' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWSTAGE].[PaymentExtract] (&#xA;    [SourceRowNumber] int NOT NULL UNIQUE,&#xA;    [RecordId] nvarchar(50) NOT NULL,&#xA;    [BusinessName] nvarchar(300) NOT NULL,&#xA;    [BusinessName2] nvarchar(100) NOT NULL,&#xA;    [Industry] nvarchar(50) NOT NULL,&#xA;    [FeeSequenceId] nvarchar(50) NOT NULL,&#xA;    [FeeType] nvarchar(50) NOT NULL,&#xA;    [FeeDescription] nvarchar(100) NOT NULL,&#xA;    [RecordType] nvarchar(50) NOT NULL,&#xA;    [PaymentAmount] nvarchar(50) NOT NULL,&#xA;    [TransactionType] nvarchar(50) NOT NULL,&#xA;    [PaymentDate] nvarchar(50) NOT NULL&#xA;)&#xA;GO&#xA;&#xA;-- Staging tables&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'LicenseStage' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWSTAGE].[LicenseStage] (&#xA;    [LicenseNumber] nvarchar(50) NOT NULL,&#xA;    [BusinessType] nvarchar(50) NOT NULL,&#xA;    [LicenseExpirationDate] date NULL,&#xA;    [LicenseCreationDate] date NULL,&#xA;    [Industry] nvarchar(50) NOT NULL,&#xA;    [BusinessName] nvarchar(300) NOT NULL,&#xA;    [BusinessName2] nvarchar(100) NOT NULL,&#xA;    [AddressBuilding] nvarchar(50) NOT NULL,&#xA;    [AddressStreetName] nvarchar(75) NOT NULL,&#xA;    [SecondaryAddressStreetName] nvarchar(75) NOT NULL,&#xA;    [AddressCity] nvarchar(50) NOT NULL,&#xA;    [AddressState] nvarchar(50) NOT NULL,&#xA;    [AddressZIP] nvarchar(50) NOT NULL,&#xA;    [AddressBorough] nvarchar(50) NOT NULL,&#xA;    [BoroughCode] nvarchar(50) NOT NULL,&#xA;    [CommunityBoard] nvarchar(50) NOT NULL,&#xA;    [CouncilDistrict] nvarchar(50) NOT NULL,&#xA;    [CensusTract] nvarchar(50) NOT NULL,&#xA;    [Longitude] nvarchar(50) NOT NULL,&#xA;    [Latitude] nvarchar(50) NOT NULL&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'FeeStage' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWSTAGE].[FeeStage] (&#xA;    [FeeSequenceId] nvarchar(50) NOT NULL,&#xA;    [BusinessName] nvarchar(300) NOT NULL,&#xA;    [BusinessName2] nvarchar(100) NOT NULL,&#xA;    [FeeDate] date NULL,&#xA;    [RecordType] nvarchar(50) NOT NULL,&#xA;    [Industry] nvarchar(50) NOT NULL,&#xA;    [FeeType] nvarchar(50) NOT NULL,&#xA;    [FeeDescription] nvarchar(100) NOT NULL,&#xA;    [FeeAmount] money NULL&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'PaymentStage' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWSTAGE].[PaymentStage] (&#xA;    [FeeSequenceId] nvarchar(50) NOT NULL,&#xA;    [PaymentAmount] money NULL,&#xA;    [TransactionType] nvarchar(50) NOT NULL&#xA;)&#xA;GO&#xA;&#xA;-- Dimensions&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'BusinessDim' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[BusinessDim] (&#xA;    [BusinessId] int NOT NULL IDENTITY(1,1),&#xA;    [BusinessName] nvarchar(300) NOT NULL,&#xA;    [BusinessName2] nvarchar(100) NOT NULL,&#xA;    [BusinessType] nvarchar(50) NOT NULL,&#xA;    [AddressBuilding] nvarchar(50) NOT NULL,&#xA;    [AddressStreetName] nvarchar(75) NOT NULL,&#xA;    [SecondaryAddressStreetName] nvarchar(75) NOT NULL,&#xA;    [AddressCity] nvarchar(50) NOT NULL,&#xA;    [AddressState] nvarchar(50) NOT NULL,&#xA;    [AddressZIP] nvarchar(50) NOT NULL,&#xA;    [AddressBorough] nvarchar(50) NOT NULL,&#xA;    [BoroughCode] nvarchar(50) NOT NULL,&#xA;    [CommunityBoard] nvarchar(50) NOT NULL,&#xA;    [CouncilDistrict] nvarchar(50) NOT NULL,&#xA;    [CensusTract] nvarchar(50) NOT NULL,&#xA;    [Longitude] nvarchar(50) NOT NULL,&#xA;    [Latitude] nvarchar(50) NOT NULL,&#xA;    CONSTRAINT [PK_BusinessDim] PRIMARY KEY ([BusinessId])&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'IndustryDim' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[IndustryDim] (&#xA;    [IndustryId] int NOT NULL IDENTITY(1,1),&#xA;    [Industry] nvarchar(50) NOT NULL,&#xA;    CONSTRAINT [PK_IndustryDim] PRIMARY KEY ([IndustryId])&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'FeeDim' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[FeeDim] (&#xA;    [FeeId] int NOT NULL IDENTITY(1,1),&#xA;    [IndustryId] int NOT NULL,&#xA;    [RecordType] nvarchar(50) NOT NULL,&#xA;    [FeeType] nvarchar(50) NOT NULL,&#xA;    [FeeDescription] nvarchar(100) NOT NULL,&#xA;    CONSTRAINT [PK_FeeDim] PRIMARY KEY ([FeeId]),&#xA;    CONSTRAINT [FK_FeeDim_ToIndustryDim] FOREIGN KEY ([IndustryId]) REFERENCES [DW].[IndustryDim]([IndustryId])&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'TimeDim' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[TimeDim] (&#xA;    [Date] date NOT NULL,&#xA;    [Day] int NOT NULL,&#xA;    [DayName] nvarchar(30) NOT NULL,&#xA;    [Weekday] int NOT NULL,&#xA;    [Week] int NOT NULL,&#xA;    [Month] int NOT NULL,&#xA;    [MonthName] nvarchar(30) NOT NULL,&#xA;    [Quarter] int NOT NULL,&#xA;    [Year] int NOT NULL,&#xA;    CONSTRAINT [PK_TimeDim] PRIMARY KEY ([Date])&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'TransactionTypeDim' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[TransactionTypeDim] (&#xA;    [TransactionTypeId] int NOT NULL IDENTITY(1,1),&#xA;    [TransactionType] nvarchar(50) NOT NULL,&#xA;    CONSTRAINT [PK_TransactionTypeDim] PRIMARY KEY ([TransactionTypeId])&#xA;)&#xA;GO&#xA;&#xA;-- Fact tables&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'LicenseFact' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[LicenseFact] (&#xA;    [CreationDate] date NULL,&#xA;    [ExpirationDate] date NULL,&#xA;    [BusinessId] int NOT NULL,&#xA;    [IndustryId] int NOT NULL,&#xA;    [LicenseNumber] nvarchar(50) NOT NULL,&#xA;    [DurationInDays] int NULL,&#xA;    CONSTRAINT [FK_LicenseFact_ToTimeDim_CreationDate] FOREIGN KEY ([CreationDate]) REFERENCES [DW].[TimeDim]([Date]),&#xA;    CONSTRAINT [FK_LicenseFact_ToTimeDim_ExpirationDate] FOREIGN KEY ([ExpirationDate]) REFERENCES [DW].[TimeDim]([Date]),&#xA;    CONSTRAINT [FK_LicenseFact_ToBusinessDim] FOREIGN KEY ([BusinessId]) REFERENCES [DW].[BusinessDim]([BusinessId]),&#xA;    CONSTRAINT [FK_LicenseFact_ToIndustryDim] FOREIGN KEY ([IndustryId]) REFERENCES [DW].[IndustryDim]([IndustryId])&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'PaymentFact' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[PaymentFact] (&#xA;    [PaymentDate] date NULL,&#xA;    [FeeId] int NOT NULL,&#xA;    [BusinessId] int NOT NULL,&#xA;    [TransactionTypeId] int NOT NULL,&#xA;    [FeeSequenceId] int NOT NULL,&#xA;    [FeeAmount] money NULL,&#xA;    [PaymentAmount] money NULL,&#xA;    CONSTRAINT [FK_PaymentFact_ToTimeDim] FOREIGN KEY ([PaymentDate]) REFERENCES [DW].[TimeDim]([Date]),&#xA;    CONSTRAINT [FK_PaymentFact_ToFeeDim] FOREIGN KEY ([FeeId]) REFERENCES [DW].[FeeDim]([FeeId]),&#xA;    CONSTRAINT [FK_PaymentFact_ToBusinessDim] FOREIGN KEY ([BusinessId]) REFERENCES [DW].[BusinessDim]([BusinessId]),&#xA;    CONSTRAINT [FK_PaymentFact_ToTransactionTypeDim] FOREIGN KEY ([TransactionTypeId]) REFERENCES [DW].[TransactionTypeDim]([TransactionTypeId])&#xA;)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure NORMALIZE function exists"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3ac8a253-4d7b-4b2c-a839-4024b45c92f1}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure NORMALIZE function exists"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2AE594AF-1E0E-4046-88A5-B26D8D809332}"
          SQLTask:SqlStatementSource="CREATE OR ALTER FUNCTION [DW].[NORMALIZE](@str AS NVARCHAR(MAX)) RETURNS NVARCHAR(MAX)&#xA;AS&#xA;BEGIN&#xA;    RETURN UPPER(REPLACE(REPLACE(REPLACE(TRIM(@str),' ','&lt;&gt;'),'&gt;&lt;',''),'&lt;&gt;',' '));&#xA;END;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure TOPROPERCASE function exists"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{56550159-0E80-4487-8995-A722A8141A45}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure TOPROPERCASE function exists"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2AE594AF-1E0E-4046-88A5-B26D8D809332}"
          SQLTask:SqlStatementSource="CREATE OR ALTER FUNCTION [DW].[TOPROPERCASE](@str AS NVARCHAR(MAX)) RETURNS NVARCHAR(MAX)&#xA;AS&#xA;BEGIN&#xA;    DECLARE @reset BIT;&#xA;    DECLARE @output NVARCHAR(MAX);&#xA;    DECLARE @i INT;&#xA;    DECLARE @c CHAR(1);&#xA;&#xA;    IF @str IS NULL&#xA;        RETURN NULL;&#xA;&#xA;    SELECT @reset = 1, @i = 1, @output = '';&#xA;&#xA;    WHILE (@i &lt;= LEN(@str))&#xA;        SELECT @c = SUBSTRING(@str, @i, 1),&#xA;               @output = @output + CASE WHEN @reset = 1 THEN UPPER(@c) ELSE LOWER(@c) END,&#xA;               @reset = CASE WHEN @c LIKE '[a-zA-Z]' THEN 0 ELSE 1 END,&#xA;               @i = @i + 1&#xA;    RETURN @output;&#xA;END;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Extract fee data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{00d9aeef-baf6-44bd-9401-0695d396cfd3}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Extract fee data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Extract fee data\Derive error info"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derive error info"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract fee data\Derive error info.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract fee data\Derive error info.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Extract fee data\Derive error info.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract fee data\Derive error info.Outputs[Derived Column Output].Columns[SessionId]"
                      dataType="guid"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract fee data\Derive error info.Outputs[Derived Column Output].Columns[SessionId]"
                      name="SessionId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_GUID)("{" + (DT_WSTR,36)@[User::SessionId] + "}")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_GUID)("{" + (DT_WSTR,36)@[User::SessionId] + "}")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract fee data\Derive error info.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="4"
                      lineageId="Package\Extract fee data\Derive error info.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Fees"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Fees"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract fee data\Derive error info.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract fee data\Derive error info.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract fee data\Derive error info.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Extract fee data\Derive error info.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract fee data\Derive error info.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract fee data\Derive error info.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract fee data\Derive error info.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract fee data\Derive error info.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract fee data\Extract fee data from dataset"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Extract fee data from dataset"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract fee data\Extract fee data from dataset.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Fees]"
                  connectionManagerRefId="Package.ConnectionManagers[Fees]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[RecordId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD ID]"
                      length="50"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[RecordId]"
                      name="RecordId"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[RecordType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD TYPE]"
                      length="50"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[RecordType]"
                      name="RecordType"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME]"
                      length="300"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME2]"
                      length="100"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[INDUSTRY]"
                      length="50"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE SEQUENCE ID]"
                      length="50"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE TYPE]"
                      length="50"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeType]"
                      name="FeeType"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE DESCRIPTION]"
                      length="100"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeAmount]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE AMOUNT]"
                      length="50"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE DATE]"
                      length="50"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeDate]"
                      name="FeeDate"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeStatus]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE STATUS]"
                      length="50"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeStatus]"
                      name="FeeStatus"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD ID]"
                      dataType="wstr"
                      length="50"
                      name="RECORD ID" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD TYPE]"
                      dataType="wstr"
                      length="50"
                      name="RECORD TYPE" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME]"
                      dataType="wstr"
                      length="300"
                      name="BUSINESS NAME" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME2]"
                      dataType="wstr"
                      length="100"
                      name="BUSINESS NAME2" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[INDUSTRY]"
                      dataType="wstr"
                      length="50"
                      name="INDUSTRY" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE SEQUENCE ID]"
                      dataType="wstr"
                      length="50"
                      name="FEE SEQUENCE ID" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE TYPE]"
                      dataType="wstr"
                      length="50"
                      name="FEE TYPE" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE DESCRIPTION]"
                      dataType="wstr"
                      length="100"
                      name="FEE DESCRIPTION" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE AMOUNT]"
                      dataType="wstr"
                      length="50"
                      name="FEE AMOUNT" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE DATE]"
                      dataType="wstr"
                      length="50"
                      name="FEE DATE" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE STATUS]"
                      dataType="wstr"
                      length="50"
                      name="FEE STATUS" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="65001"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract fee data\Generate error info"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Generate error info"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Text;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

  /// <summary>
  /// This method is called once for every row that passes through the component from Input0.
  ///
  /// Example of reading a value from a column in the the row:
  ///  string zipCode = Row.ZipCode
  ///
  /// Example of writing a value to a column in the row:
  ///  Row.ZipCode = zipCode
  /// </summary>
  /// <param name="Row">The row that is currently passing through the component</param>
  public override void Input0_ProcessInputRow(Input0Buffer Row)
  {
    Row.ErrorDescription = ComponentMetaData.GetErrorDescription(Row.ErrorCode);

    if (ComponentMetaData is IDTSComponentMetaData130 componentMetaData130)
    {
      switch (Row.ErrorColumn)
      {
        // 0 means no specific column is identified by ErrorColumn, this time.
        case 0:
          Row.ColumnName = "Check the row for a violation of a foreign key constraint.";
          break;
        // -1 means you are using Table Lock for a Memory Optimised destination table which is not supported.
        case -1:
          Row.ColumnName = "Table lock is not compatible with Memory Optimised tables.";
          break;
        default:
          Row.ColumnName = componentMetaData130.GetIdentificationStringByID(Row.ErrorColumn);
          break;
      }
    }
    else
    {
      Row.ColumnName = string.Empty;
    }

    if (Row.FlatFileSourceErrorOutputColumn.IsNull)
    {
      Row.FaultyRow = string.Empty;
    }
    else
    {
      var blobLength = Convert.ToInt32(Row.FlatFileSourceErrorOutputColumn.Length);
      var blobData = Row.FlatFileSourceErrorOutputColumn.GetBlobData(0, blobLength);
      Row.FaultyRow = Encoding.Unicode.GetString(blobData);
    }
  }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public BlobColumn FlatFileSourceErrorOutputColumn
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[2]];
        }
    }
    public bool FlatFileSourceErrorOutputColumn_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String ColumnName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ColumnName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FaultyRow
    {
        set
        {
            this[5] = value;
        }
    }
    public bool FaultyRow_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_44ea07d1d862422c8641ed0620646838.Properties.Settings.get_Default():SC_44ea07d1d862422c8641ed0620646838.Properties.Sett" +
    "ings")]

namespace SC_44ea07d1d862422c8641ed0620646838.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_44ea07d1d862422c8641ed0620646838.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{11b96e81-6d22-4c22-9819-8f7a13608d28}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_44ea07d1d862422c8641ed0620646838</RootNamespace>
    <AssemblyName>SC_8208A995654142F482843237DE25D3BA</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_44ea07d1d862422c8641ed0620646838" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_44ea07d1d862422c8641ed0620646838</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_44ea07d1d862422c8641ed0620646838</msb:DisplayName>
    <msb:ProjectId>{3F5D8168-678D-4E88-A9C1-BD84A541A09D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_44ea07d1d862422c8641ed0620646838.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_44ea07d1d862422c8641ed0620646838")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_44ea07d1d862422c8641ed0620646838")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_44ea07d1d862422c8641ed0620646838.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_44ea07d1d862422c8641ed0620646838.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_44ea07d1d862422c8641ed0620646838.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_44ea07d1d862422c8641ed0620646838.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_44ea07d1d862422c8641ed0620646838.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8208A995654142F482843237DE25D3BA.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKCIuWAAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAGjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMg2AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAIBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD8
NgAAAAAAAEgAAAACAAUA0CIAAEATAAABAAAAAAAAABA2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwC3AAAAAQAAEQMCKBAAAAoDbwQAAAZvEQAACm8MAAAG
AigQAAAKdQ4AAAEKBiw8A28GAAAGCwcVLhAHLRoDcgEAAHBvCgAABissA3J3AABwbwoAAAYrHwMG
A28GAAAGbxIAAApvCgAABisLA34TAAAKbwoAAAYDbwgAAAZvFAAACiwMA34TAAAKbw4AAAYqA28I
AAAGbxUAAAooFgAACgwDbwgAAAYWCG8XAAAKDQMoGAAACglvGQAACm8OAAAGKh4CKBIAAAYqKgID
BAUoGgAACipSAnsbAAAKAnscAAAKFpRvHQAACioiAhYoHgAACipSAnsbAAAKAnscAAAKF5RvHQAA
CioiAhcoHgAACipmAnsbAAAKAnscAAAKGJRvHwAACnQSAAABKiICGCgeAAAKKiYCGQMoIAAACipa
AywIAhkoIQAACipy7QAAcHMiAAAKeiYCGgMoIAAACipaAywIAhooIQAACipy7QAAcHMiAAAKeiYC
GwMoIAAACipaAywIAhsoIQAACipy7QAAcHMiAAAKeh4CKCMAAAoqHgIoJAAACip+AiglAAAKAgJz
FgAABn0BAAAEAgJzFwAABn0CAAAEKpIEcooBAHAabyYAAAosFQIFAgMoJwAACg4EcwMAAAZvFAAA
BipKKwcCA28VAAAGA28QAAAGLfEqBio6AigoAAAKAgN9AwAABCo6AigoAAAKAgN9BAAABCoeAigo
AAAKKq5+BQAABC0ecpoBAHDQBwAAAigpAAAKbyoAAApzKwAACoAFAAAEfgUAAAQqGn4GAAAEKh4C
gAYAAAQqGn4HAAAEKh4CKCwAAAoqLnMdAAAGgAcAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4z
MDMxOQAAAAAFAGwAAACgBgAAI34AAAwHAAAsCAAAI1N0cmluZ3MAAAAAOA8AAAwCAAAjVVMARBEA
ABAAAAAjR1VJRAAAAFQRAADsAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAA
JAAAAAgAAAAHAAAAHgAAABMAAAAsAAAAEAAAAAEAAAADAAAADwAAABAAAAABAAAABQAAAAEAAAAA
AJQDAQAAAAAABgCOAjoGBgAiAzoGBgDaAScGDwCuBgAABgAHAgYFBgBxAgYFBgBSAgYFBgAJAwYF
BgCuAgYFBgDHAgYFBgAeAgYFBgA5Ak8DCgDiAicBDgAaAPEFCgDQBScBEgDBBScBCgB4BScBEgCd
BCcBCgB0BycBBgA3B38EBgC9AScGBgDhBVoGBgBsBfEEFgCNAX4DFgDuAX4DFgB1AdwEBgCiAToG
DgABAPEFBgBsA38EBgChB38EBgBGA94HBgAYBX8EBgBbBX8EBgBIAX8EBgDqAH8EBgAbCAYFAAAA
AEQAAAAAAAEAAQABABAAkgQAABAAAQABAAEAEAC0BQAAPQABAAMAAQAQAFYHAABNAAEAEgABABAA
KwcAAFEAAwAWAAEAEADsBgAAUQAEABcAAAAQAGEGvQZRAAUAGAAAARAAGwe9BmkABwAcAAYAKweu
AAYA7AayAAEAZAe2AAEAZAe2ABEAhgS6ABEAZQG+ABEAwADCAFAgAAAAAMYA6gfGAAEAEyEAAAAA
hhgaBgYAAgAbIQAAAACGGBoGUAACACYhAAAAAIYI0ADMAAUAOyEAAAAAhgi8AzEABQBEIQAAAACG
CKgEzAAFAFkhAAAAAIYI5wMxAAUAYiEAAAAAhgi4BNAABQB8IQAAAACGCP4DMQAFAIUhAAAAAIYI
DgEQAAUAjyEAAAAAhgjRA9UABgCmIQAAAACGCDIFEAAHALAhAAAAAIYIKQTVAAgAxyEAAAAAhggJ
CBAACQDRIQAAAACGCFAE1QAKAOghAAAAAIYAAQgxAAsA8CEAAAAAhgA+BzEACwD4IQAAAACGGBoG
BgALABgiAAAAAMYA0QfaAAsAPSIAAAAAxgHKB8YADwBQIgAAAADGAeoHxgAQAFIiAAAAAIYYGgbk
ABEAYSIAAAAAhhgaBuQAEgBwIgAAAACDGBoGBgATAHgiAAAAAJMI3QXqABMApCIAAAAAkwhNAe8A
EwCrIgAAAACTCFkB9AATALMiAAAAAJYISgf6ABQAuiIAAAAAhhgaBgYAFADCIgAAAACRGCAG/wAU
AAAAAQATCAAAAQDWBQAAAgD2BgAAAwCGBQAAAQBAAwAAAQBAAwAAAQBAAwAAAQBAAwAAAQBAAwAA
AQBAAwAAAQBxAAAAAgAdAQAAAwDWBQAABACGBQAAAQDWBQAAAQATCAAAAQB6BwAAAQB6BwAAAQBA
AwkAGgYBABEAGgYGABkAGgYKACkAGgYQADEAGgYQADkAGgYQAEEAGgYQAEkAGgYQAFEAGgYQAFkA
GgYQAGEAGgYQAGkAGgYGAKkAGgYGAMkAGgYVANkAGgYGAJkAlQAkAOEARwUpAHEAeQApAOkAJAgu
AJEARQQxAJEAcwM1APEAMwA5AJEAqwA+APkA3gBFAPkAaQNKAHkAGgZQAHkA1gVaAHkA9gZeAIEA
OwBiAHkAXgRnAIEAbQRsAHkAdgRxAHkAZQQBAAEBGgYQAHkAAQgxAHkAPgcxAJkAGgYGAOkAJAd3
AJkACgd/AKEAGgYGABEB/ACFABEBFwiOALEAGgaUANEAGgYGAC4ACwAjAS4AEwAsAS4AGwBLAS4A
IwBUAS4AKwB9AS4AMwB9AS4AOwB9AS4AQwBUAS4ASwCDAS4AUwB9AS4AWwCaAUMAYwDkAeEAewDk
AeMAawDkAakBcwBLAckBcwBLARsAAwABAAcADQAIAA8AAADUAAMBAADAAwcBAACsBAMBAADrAwcB
AAC8BAsBAAACBAcBAAASARABAADVAwcBAABKBRABAAAtBAcBAAANCBABAABUBAcBAADhBRQBAABt
ARkBAABOBx4BAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgAIAAsAAgAJAA0AAQAKAA8AAQALABEA
AQAMABMAAQANABUAAQAOABcAAQAPABkAAgAZABsAAgAaAB0AAQAbAB0AAgAcAB8ABIAAAAEAAAAA
AAAAAAAAAAAATQAAAAQAAAAAAAAAAAAAAJwAtwAAAAAADwAAAAAAAAAAAAAApQCEBwAAAAAPAAAA
AAAAAAAAAAClAJAFAAAAAA8AAAAAAAAAAAAAAKUAqQcAAAAABAAAAAAAAAAAAAAAnAB/BAAAAAAA
AAAAAQAAAGsGAAAAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTQ29tcG9uZW50TWV0
YURhdGExMzAAVG9JbnQzMgBHZXRJbnQzMgA8TW9kdWxlPgBTQ184MjA4QTk5NTY1NDE0MkY0ODI4
NDMyMzdERTI1RDNCQQBJbnB1dElEAEdldElkZW50aWZpY2F0aW9uU3RyaW5nQnlJRABnZXRfQ29t
cG9uZW50TWV0YURhdGEAR2V0QmxvYkRhdGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdldF9F
cnJvckNvZGUAZ2V0X1VuaWNvZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
c2V0X0NvbHVtbk5hbWUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5l
AFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVlAEVu
Y29kaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAGdldF9MZW5ndGgAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFNDXzgyMDhBOTk1NjU0MTQyRjQ4Mjg0MzIzN0RFMjVEM0JBLmRs
bABnZXRfRXJyb3JDb2RlX0lzTnVsbABzZXRfQ29sdW1uTmFtZV9Jc051bGwAZ2V0X0Vycm9yQ29s
dW1uX0lzTnVsbABnZXRfRmxhdEZpbGVTb3VyY2VFcnJvck91dHB1dENvbHVtbl9Jc051bGwAc2V0
X0Vycm9yRGVzY3JpcHRpb25fSXNOdWxsAGdldF9Jc051bGwAc2V0X0ZhdWx0eVJvd19Jc051bGwA
U2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBC
bG9iQ29sdW1uAGdldF9FcnJvckNvbHVtbgBnZXRfRmxhdEZpbGVTb3VyY2VFcnJvck91dHB1dENv
bHVtbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9uAEdl
dEVycm9yRGVzY3JpcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1l
TWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1dDBC
dWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTQ180NGVhMDdkMWQ4NjI0MjJjODY0MWVkMDYyMDY0NjgzOC5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfNDRlYTA3ZDFkODYyNDIyYzg2NDFlZDA2
MjA2NDY4MzguUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1
bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dzZXQA
Z2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVy
LlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AFN5c3RlbS5UZXh0AElucHV0MF9Qcm9j
ZXNzSW5wdXRSb3cATmV4dFJvdwBzZXRfRmF1bHR5Um93AGdldF9Bc3NlbWJseQBFbXB0eQAAAAB1
QwBoAGUAYwBrACAAdABoAGUAIAByAG8AdwAgAGYAbwByACAAYQAgAHYAaQBvAGwAYQB0AGkAbwBu
ACAAbwBmACAAYQAgAGYAbwByAGUAaQBnAG4AIABrAGUAeQAgAGMAbwBuAHMAdAByAGEAaQBuAHQA
LgAAdVQAYQBiAGwAZQAgAGwAbwBjAGsAIABpAHMAIABuAG8AdAAgAGMAbwBtAHAAYQB0AGkAYgBs
AGUAIAB3AGkAdABoACAATQBlAG0AbwByAHkAIABPAHAAdABpAG0AaQBzAGUAZAAgAHQAYQBiAGwA
ZQBzAC4AAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIA
ZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1
AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAA
dQB0ACAAMAAAcVMAQwBfADQANABlAGEAMAA3AGQAMQBkADgANgAyADQAMgAyAGMAOAA2ADQAMQBl
AGQAMAA2ADIAMAA2ADQANgA4ADMAOAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAUshRfGCzDk+gKCcT9FjiMgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERYQgHBBI5
CAgdBQQgABJxBCABDggCBg4DIAACAyAACQQAAQgJBiACHQUICAQAABJ9BSABDh0FCSADARJBHQgS
RQMGEkEDBh0IBCABCAgEIAECCAQgARwIBSACAQgcByACAg4RgIUFIAEdCAgIAAESgIkRgI0FIAAS
gJEHIAIBDhKAkQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSTQMGElkDBhJdAwYSIAUgAQES
DAMgAAgEIAASSQQgAQECCSAEAQgOEkESRQUgAQESTQQAABJZBAAAEl0FAAEBEl0EAAASIAMAAAED
KAAIAygAAgQoABJJAygADgQIABJZBAgAEl0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNDRlYTA3ZDFkODYyNDIyYzg2NDFlZDA2MjA2
NDY4MzgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAA
AAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAADwNgAAAAAAAAAAAAAKNwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
/DYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8ANAA0AGUAYQAwADcAZAAxAGQAOAA2ADIANAAyADIAYwA4ADYANAAxAGUAZAAwADYAMgAw
ADYANAA2ADgAMwA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA4ADIAMAA4AEEAOQA5
ADUANgA1ADQAMQA0ADIARgA0ADgAMgA4ADQAMwAyADMANwBEAEUAMgA1AEQAMwBCAEEALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADgAMgAw
ADgAQQA5ADkANQA2ADUANAAxADQAMgBGADQAOAAyADgANAAzADIAMwA3AEQARQAyADUARAAzAEIA
QQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA0ADQAZQBh
ADAANwBkADEAZAA4ADYAMgA0ADIAMgBjADgANgA0ADEAZQBkADAANgAyADAANgA0ADYAOAAzADgA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABw3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_8208a995654142f482843237de25d3ba</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">27</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Extract fee data\Generate error info.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract fee data\Generate error info.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Extract fee data\Generate error info.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Extract fee data\Generate error info.Inputs[Input 0].Columns[Flat File Source Error Output Column]"
                      cachedCodepage="65001"
                      cachedDataType="text"
                      cachedName="Flat File Source Error Output Column"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract fee data\Generate error info.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Extract fee data\Generate error info.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract fee data\Generate error info.Outputs[Output 0].Columns[ColumnName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract fee data\Generate error info.Outputs[Output 0].Columns[ColumnName]"
                      name="ColumnName" />
                    <outputColumn
                      refId="Package\Extract fee data\Generate error info.Outputs[Output 0].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract fee data\Generate error info.Outputs[Output 0].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                    <outputColumn
                      refId="Package\Extract fee data\Generate error info.Outputs[Output 0].Columns[FaultyRow]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Extract fee data\Generate error info.Outputs[Output 0].Columns[FaultyRow]"
                      name="FaultyRow" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract fee data\Generate source row number"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Generate source row number"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    private int _sourceRowNumber;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        _sourceRowNumber = 1;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.SourceRowNumber = _sourceRowNumber++;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 SourceRowNumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool SourceRowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f6edec8c26f148dfb4626908035c0461.Properties.Settings.get_Default():SC_f6edec8c26f148dfb4626908035c0461.Properties.Sett" +
    "ings")]

namespace SC_f6edec8c26f148dfb4626908035c0461.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f6edec8c26f148dfb4626908035c0461.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{91734a36-4557-46c1-ba68-c130a041acc4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f6edec8c26f148dfb4626908035c0461</RootNamespace>
    <AssemblyName>SC_f6edec8c26f148dfb4626908035c0461</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_f6edec8c26f148dfb4626908035c0461" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_f6edec8c26f148dfb4626908035c0461</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_f6edec8c26f148dfb4626908035c0461</msb:DisplayName>
    <msb:ProjectId>{CF539093-FF5B-43D1-8316-245E0B81D950}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f6edec8c26f148dfb4626908035c0461.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f6edec8c26f148dfb4626908035c0461")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f6edec8c26f148dfb4626908035c0461")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f6edec8c26f148dfb4626908035c0461.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f6edec8c26f148dfb4626908035c0461.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f6edec8c26f148dfb4626908035c0461.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f6edec8c26f148dfb4626908035c0461.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f6edec8c26f148dfb4626908035c0461.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f6edec8c26f148dfb4626908035c0461.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHW7uGAAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAASjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPgwAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAUBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAs
MQAAAAAAAEgAAAACAAUArCEAAJQOAAABAAAAAAAAAEAwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADoCKBAAAAoCF30BAAAEKh4CKBEAAAoqABMwBAAYAAAAAQAA
EQMCAnsBAAAECgYXWH0BAAAEBm8GAAAGKh4CKAoAAAYqKgIDBAUoEgAACio6AhYDjBoAAAEoEwAA
CipaAywIAhYoFAAACipyAQAAcHMVAAAKeh4CKBYAAAoqHgIoFwAACip+AigYAAAKAgJzDgAABn0C
AAAEAgJzDwAABn0DAAAEKpIEcp4AAHAabxkAAAosFQIFAgMoGgAACg4EcwUAAAZvDAAABipKKwcC
A28NAAAGA28IAAAGLfEqBio6AigbAAAKAgN9BAAABCo6AigbAAAKAgN9BQAABCoeAigbAAAKKq5+
BgAABC0ecq4AAHDQBwAAAigcAAAKbx0AAApzHgAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQq
Gn4IAAAEKh4CKB8AAAoqLnMVAAAGgAgAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAA
AAUAbAAAACwFAAAjfgAAmAUAADgGAAAjU3RyaW5ncwAAAADQCwAAIAEAACNVUwDwDAAAEAAAACNH
VUlEAAAAAA0AAJQBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAgAAAACAAA
AAgAAAAWAAAADwAAAB8AAAAQAAAAAQAAAAMAAAAFAAAABgAAAAEAAAAEAAAAAQAAAAAA8AIBAAAA
AAAGAOoBbwQGAH4CbwQGADYBXAQPAOMEAAAGAGMBjAMGAM0BjAMGAK4BjAMGAGUCjAMGAAoCjAMG
ACMCjAMGAHoBjAMGAJUBuQIKAD4CgwAKAC4EgwAOAB8EgwAKANUDgwAKAKkFgwAGAGwFRAMGABkB
XAQGAD8EjwQGAMkDdwMSAOkA2gISAEoB2gISANEAYgMGAP4AbwQGACUARAMGAJ4DRAMGANMCRAMG
ALgDRAMGAKQARAMGAFUARAMGAC4GjAMAAAAAKwAAAAAAAQABAAEAEABXAwAAEAABAAEAAQAQABIE
AAA5AAIABQABABAAiwUAAEUAAgAKAAEAEABgBQAASQAEAA4AAQAQACEFAABJAAUADwAAABAAlgTy
BEkABgAQAAABEABQBfIEYQAIABQAAQABBGcABgBgBWoABgAhBW4AAQCZBXIAAQCZBXIAEQBLA3YA
EQDBAHoAEQBFAH4AUCAAAAAAxgCcAgYAAQBfIAAAAADGAKcCBgABAGggAAAAAMYACwaCAAEAjCAA
AAAAhhhPBAYAAgCUIAAAAACGGE8EHwACAJ8gAAAAAIYI7QMBAAUAriAAAAAAhggYA4gABgDFIAAA
AACGACIGLwAHAM0gAAAAAIYAcwUvAAcA1SAAAAAAhhhPBAYABwD1IAAAAADGAP4FjQAHABohAAAA
AMYB9wWCAAsALSEAAAAAxgELBoIADAAvIQAAAACGGE8ElwANAD4hAAAAAIYYTwSXAA4ATSEAAAAA
gxhPBAYADwBVIQAAAACTCDsEnQAPAIEhAAAAAJMIqQCiAA8AiCEAAAAAkwi1AKcADwCQIQAAAACW
CH8FrQAQAJchAAAAAIYYTwQGABAAnyEAAAAAkRhVBLIAEAAAAAEAJgYAAAEANAQAAAIAKwUAAAMA
4wMAAAEAswIAAAEAswIAAAEANAAAAAIAeQAAAAMANAQAAAQA4wMAAAEANAQAAAEAJgYAAAEArwUA
AAEArwUAAAEAswIJAE8EAQARAE8EBgAZAE8ECgApAE8EEAAxAE8EEAA5AE8EEABBAE8EEABJAE8E
EABRAE8EEABZAE8EEABhAE8EEABpAE8EBgCZAE8EBgC5AE8EFQDJAE8EBgCJAJwCBgCJAKcCBgBx
AE8EHwBxADsDKQBxADMDAQDZAE8EEABxACIGLwBxAHMFLwCJAE8EBgDhAFkFMwCJAD8FOgCRAE8E
BgDxAGcAQADxACoGRwChAE8ETQDBAE8EBgAuAAsAzQAuABMA1gAuABsA9QAuACMA/gAuACsAJwEu
ADMAJwEuADsAJwEuAEMA/gAuAEsALQEuAFMAJwEuAFsARAFDAGMAjgFpAHMA9QCJAHMA9QDjAGsA
jgEBAXsAjgEbAAMAAQAHAAMACAAFAAAA8QO2AAAAHAO6AAAAPwS+AAAAyQDDAAAAgwXIAAEABgAD
AAEABwAFAAIAEQAHAAIAEgAJAAEAEwAJAAIAFAALAASAAAABAAAAAAAAAAAAAAAAAAEAAAAEAAAA
AAAAAAAAAABVADwAAAAAAA8AAAAAAAAAAAAAAF4AuQUAAAAADwAAAAAAAAAAAAAAXgDWBQAAAAAE
AAAAAAAAAAAAAABVAEQDAAAAAAAAAAABAAAAoAQAAAAAAAAAU0NfZjZlZGVjOGMyNmYxNDhkZmI0
NjI2OTA4MDM1YzA0NjEASW50MzIAPE1vZHVsZT4ASW5wdXRJRABtc2NvcmxpYgBkZWZhdWx0SW5z
dGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
cmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp
b25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1
Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVu
dEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2Y2ZWRlYzhj
MjZmMTQ4ZGZiNDYyNjkwODAzNWMwNDYxLmRsbABzZXRfU291cmNlUm93TnVtYmVyX0lzTnVsbABT
ZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRP
cGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1l
TWFwAE91dHB1dE1hcABzZXRfU291cmNlUm93TnVtYmVyAF9zb3VyY2VSb3dOdW1iZXIASW5wdXQw
QnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5j
dG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2Y2ZWRlYzhjMjZmMTQ4ZGZiNDYyNjkwODAzNWMwNDYx
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19mNmVkZWM4
YzI2ZjE0OGRmYjQ2MjY5MDgwMzVjMDQ2MS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1
bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAE9i
amVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVu
dABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQu
U3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNz
SW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABl
AHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAA
QQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAg
AGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwBmADYAZQBkAGUAYwA4AGMA
MgA2AGYAMQA0ADgAZABmAGIANAA2ADIANgA5ADAAOAAwADMANQBjADAANAA2ADEALgBQAHIAbwBw
AGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAO+TSIcmNzNGknAWCL8/hFcABCABAQgD
IAABBSABARERBCABAQ4FIAEBEVkDBwEICSADARI9HQgSQQUgAgEIHAMgAAIGIAICDhF1BSABHQgI
BgABEnkRfQUgABKAgQcgAgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRAgYIAwYSFAMGEhgDBhJFAwYS
UQMGElUDBhIgBSABARIMBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIg
AwAAAQMoAAgDKAACBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19mNmVkZWM4YzI2ZjE0OGRmYjQ2MjY5MDgwMzVjMDQ2
MQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAAAgMQAAAAAAAAAAAAA6MQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALDEAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AZgA2AGUAZABlAGMAOABjADIANgBmADEANAA4AGQAZgBiADQANgAyADYAOQAwADgA
MAAzADUAYwAwADQANgAxAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmADYAZQBkAGUA
YwA4AGMAMgA2AGYAMQA0ADgAZABmAGIANAA2ADIANgA5ADAAOAAwADMANQBjADAANAA2ADEALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGYA
NgBlAGQAZQBjADgAYwAyADYAZgAxADQAOABkAGYAYgA0ADYAMgA2ADkAMAA4ADAAMwA1AGMAMAA0
ADYAMQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmADYA
ZQBkAGUAYwA4AGMAMgA2AGYAMQA0ADgAZABmAGIANAA2ADIANgA5ADAAOAAwADMANQBjADAANAA2
ADEAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAEwxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_f6edec8c26f148dfb4626908035c0461</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">CA</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Extract fee data\Generate source row number.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract fee data\Generate source row number.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Extract fee data\Generate source row number.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract fee data\Generate source row number.Outputs[Output 0].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Extract fee data\Generate source row number.Outputs[Output 0].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract fee data\Insert error info to DataExtractionErrors table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert error info to DataExtractionErrors table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWLOG].[DataExtractionErrors]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[SessionId]"
                      cachedDataType="guid"
                      cachedName="SessionId"
                      externalMetadataColumnId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                      lineageId="Package\Extract fee data\Derive error info.Outputs[Derived Column Output].Columns[SessionId]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="4"
                      cachedName="Dataset"
                      externalMetadataColumnId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[Dataset]"
                      lineageId="Package\Extract fee data\Derive error info.Outputs[Derived Column Output].Columns[Dataset]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      externalMetadataColumnId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      lineageId="Package\Extract fee data\Derive error info.Outputs[Derived Column Output].Columns[Timestamp]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ColumnName"
                      externalMetadataColumnId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnName]"
                      lineageId="Package\Extract fee data\Generate error info.Outputs[Output 0].Columns[ColumnName]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[ErrorDescription]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorDescription"
                      externalMetadataColumnId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                      lineageId="Package\Extract fee data\Generate error info.Outputs[Output 0].Columns[ErrorDescription]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[FaultyRow]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="FaultyRow"
                      externalMetadataColumnId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[FaultyRow]"
                      lineageId="Package\Extract fee data\Generate error info.Outputs[Output 0].Columns[FaultyRow]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                      dataType="guid"
                      name="SessionId" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[Dataset]"
                      dataType="wstr"
                      length="20"
                      name="Dataset" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[FaultyRow]"
                      dataType="wstr"
                      length="4000"
                      name="FaultyRow" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnName]"
                      dataType="wstr"
                      length="255"
                      name="ColumnName" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                      dataType="wstr"
                      length="255"
                      name="ErrorDescription" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      dataType="dbTimeStamp2"
                      name="Timestamp"
                      scale="7" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract fee data\Insert raw fee data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert raw fee data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract fee data\Insert raw fee data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      externalMetadataColumnId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      externalMetadataColumnId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      externalMetadataColumnId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      externalMetadataColumnId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      externalMetadataColumnId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      externalMetadataColumnId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeAmount]"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      externalMetadataColumnId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDate]"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[RecordId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordId"
                      externalMetadataColumnId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordId]"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[RecordId]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      externalMetadataColumnId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[FeeStatus]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeStatus"
                      externalMetadataColumnId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeStatus]"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeStatus]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      externalMetadataColumnId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      externalMetadataColumnId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[SourceRowNumber]"
                      lineageId="Package\Extract fee data\Generate source row number.Outputs[Output 0].Columns[SourceRowNumber]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeAmount]"
                      dataType="wstr"
                      length="50"
                      name="FeeAmount" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDate]"
                      dataType="wstr"
                      length="50"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordId]"
                      dataType="wstr"
                      length="50"
                      name="RecordId" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeStatus]"
                      dataType="wstr"
                      length="50"
                      name="FeeStatus" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[SourceRowNumber]"
                      dataType="i4"
                      name="SourceRowNumber" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract fee data\Insert raw fee data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract fee data\Insert raw fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract fee data\Insert raw fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract fee data\Insert raw fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Extract fee data.Paths[Derived Column Output]"
              endId="Package\Extract fee data\Generate error info.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Extract fee data\Derive error info.Outputs[Derived Column Output]" />
            <path
              refId="Package\Extract fee data.Paths[Flat File Source Error Output]"
              endId="Package\Extract fee data\Derive error info.Inputs[Derived Column Input]"
              name="Flat File Source Error Output"
              startId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Error Output]" />
            <path
              refId="Package\Extract fee data.Paths[Flat File Source Output]"
              endId="Package\Extract fee data\Generate source row number.Inputs[Input 0]"
              name="Flat File Source Output"
              startId="Package\Extract fee data\Extract fee data from dataset.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Extract fee data.Paths[Output 0]"
              endId="Package\Extract fee data\Insert raw fee data to database.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Extract fee data\Generate source row number.Outputs[Output 0]" />
            <path
              refId="Package\Extract fee data.Paths[Output 01]"
              endId="Package\Extract fee data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Extract fee data\Generate error info.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Extract license data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{9240c34d-6008-446b-ad73-7d2d87aab6ae}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Extract license data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Extract license data\Derive error info"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derive error info"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract license data\Derive error info.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract license data\Derive error info.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Extract license data\Derive error info.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract license data\Derive error info.Outputs[Derived Column Output].Columns[SessionId]"
                      dataType="guid"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract license data\Derive error info.Outputs[Derived Column Output].Columns[SessionId]"
                      name="SessionId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_GUID)("{" + (DT_WSTR,36)@[User::SessionId] + "}")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_GUID)("{" + (DT_WSTR,36)@[User::SessionId] + "}")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Derive error info.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Extract license data\Derive error info.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Licenses"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Licenses"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Derive error info.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract license data\Derive error info.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract license data\Derive error info.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Extract license data\Derive error info.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract license data\Derive error info.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract license data\Derive error info.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract license data\Derive error info.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract license data\Derive error info.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract license data\Generate error info"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Generate error info"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Text;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

  /// <summary>
  /// This method is called once for every row that passes through the component from Input0.
  ///
  /// Example of reading a value from a column in the the row:
  ///  string zipCode = Row.ZipCode
  ///
  /// Example of writing a value to a column in the row:
  ///  Row.ZipCode = zipCode
  /// </summary>
  /// <param name="Row">The row that is currently passing through the component</param>
  public override void Input0_ProcessInputRow(Input0Buffer Row)
  {
    Row.ErrorDescription = ComponentMetaData.GetErrorDescription(Row.ErrorCode);

    if (ComponentMetaData is IDTSComponentMetaData130 componentMetaData130)
    {
      switch (Row.ErrorColumn)
      {
        // 0 means no specific column is identified by ErrorColumn, this time.
        case 0:
          Row.ColumnName = "Check the row for a violation of a foreign key constraint.";
          break;
        // -1 means you are using Table Lock for a Memory Optimised destination table which is not supported.
        case -1:
          Row.ColumnName = "Table lock is not compatible with Memory Optimised tables.";
          break;
        default:
          Row.ColumnName = componentMetaData130.GetIdentificationStringByID(Row.ErrorColumn);
          break;
      }
    }
    else
    {
      Row.ColumnName = string.Empty;
    }

    if (Row.FlatFileSourceErrorOutputColumn.IsNull)
    {
      Row.FaultyRow = string.Empty;
    }
    else
    {
      var blobLength = Convert.ToInt32(Row.FlatFileSourceErrorOutputColumn.Length);
      var blobData = Row.FlatFileSourceErrorOutputColumn.GetBlobData(0, blobLength);
      Row.FaultyRow = Encoding.Unicode.GetString(blobData);
    }
  }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public BlobColumn FlatFileSourceErrorOutputColumn
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[2]];
        }
    }
    public bool FlatFileSourceErrorOutputColumn_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String ColumnName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ColumnName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FaultyRow
    {
        set
        {
            this[5] = value;
        }
    }
    public bool FaultyRow_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_44ea07d1d862422c8641ed0620646838.Properties.Settings.get_Default():SC_44ea07d1d862422c8641ed0620646838.Properties.Sett" +
    "ings")]

namespace SC_44ea07d1d862422c8641ed0620646838.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_44ea07d1d862422c8641ed0620646838.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{11b96e81-6d22-4c22-9819-8f7a13608d28}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_44ea07d1d862422c8641ed0620646838</RootNamespace>
    <AssemblyName>SC_44ea07d1d862422c8641ed0620646838</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_44ea07d1d862422c8641ed0620646838" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_44ea07d1d862422c8641ed0620646838</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_44ea07d1d862422c8641ed0620646838</msb:DisplayName>
    <msb:ProjectId>{E6A21FF8-2F54-4162-8997-36E105504A8E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_44ea07d1d862422c8641ed0620646838.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_44ea07d1d862422c8641ed0620646838")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_44ea07d1d862422c8641ed0620646838")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_44ea07d1d862422c8641ed0620646838.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_44ea07d1d862422c8641ed0620646838.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_44ea07d1d862422c8641ed0620646838.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_44ea07d1d862422c8641ed0620646838.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_44ea07d1d862422c8641ed0620646838.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_44ea07d1d862422c8641ed0620646838.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALWHuWAAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAGjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMg2AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAIBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD8
NgAAAAAAAEgAAAACAAUA0CIAAEATAAABAAAAAAAAABA2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwC3AAAAAQAAEQMCKBAAAAoDbwQAAAZvEQAACm8MAAAG
AigQAAAKdQ4AAAEKBiw8A28GAAAGCwcVLhAHLRoDcgEAAHBvCgAABissA3J3AABwbwoAAAYrHwMG
A28GAAAGbxIAAApvCgAABisLA34TAAAKbwoAAAYDbwgAAAZvFAAACiwMA34TAAAKbw4AAAYqA28I
AAAGbxUAAAooFgAACgwDbwgAAAYWCG8XAAAKDQMoGAAACglvGQAACm8OAAAGKh4CKBIAAAYqKgID
BAUoGgAACipSAnsbAAAKAnscAAAKFpRvHQAACioiAhYoHgAACipSAnsbAAAKAnscAAAKF5RvHQAA
CioiAhcoHgAACipmAnsbAAAKAnscAAAKGJRvHwAACnQSAAABKiICGCgeAAAKKiYCGQMoIAAACipa
AywIAhkoIQAACipy7QAAcHMiAAAKeiYCGgMoIAAACipaAywIAhooIQAACipy7QAAcHMiAAAKeiYC
GwMoIAAACipaAywIAhsoIQAACipy7QAAcHMiAAAKeh4CKCMAAAoqHgIoJAAACip+AiglAAAKAgJz
FgAABn0BAAAEAgJzFwAABn0CAAAEKpIEcooBAHAabyYAAAosFQIFAgMoJwAACg4EcwMAAAZvFAAA
BipKKwcCA28VAAAGA28QAAAGLfEqBio6AigoAAAKAgN9AwAABCo6AigoAAAKAgN9BAAABCoeAigo
AAAKKq5+BQAABC0ecpoBAHDQBwAAAigpAAAKbyoAAApzKwAACoAFAAAEfgUAAAQqGn4GAAAEKh4C
gAYAAAQqGn4HAAAEKh4CKCwAAAoqLnMdAAAGgAcAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4z
MDMxOQAAAAAFAGwAAACgBgAAI34AAAwHAAAsCAAAI1N0cmluZ3MAAAAAOA8AAAwCAAAjVVMARBEA
ABAAAAAjR1VJRAAAAFQRAADsAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAA
JAAAAAgAAAAHAAAAHgAAABMAAAAsAAAAEAAAAAEAAAADAAAADwAAABAAAAABAAAABQAAAAEAAAAA
AJQDAQAAAAAABgCOAjoGBgAiAzoGBgDaAScGDwCuBgAABgAHAgYFBgBxAgYFBgBSAgYFBgAJAwYF
BgCuAgYFBgDHAgYFBgAeAgYFBgA5Ak8DCgDiAicBDgAaAPEFCgDQBScBEgDBBScBCgB4BScBEgCd
BCcBCgB0BycBBgA3B38EBgC9AScGBgDhBVoGBgBsBfEEFgCNAX4DFgDuAX4DFgB1AdwEBgCiAToG
DgABAPEFBgBsA38EBgChB38EBgBGA94HBgAYBX8EBgBbBX8EBgBIAX8EBgDqAH8EBgAbCAYFAAAA
AGgAAAAAAAEAAQABABAAkgQAABAAAQABAAEAEAC0BQAAPQABAAMAAQAQAFYHAABNAAEAEgABABAA
KwcAAFEAAwAWAAEAEADsBgAAUQAEABcAAAAQAGEGvQZRAAUAGAAAARAAGwe9BmkABwAcAAYAKweu
AAYA7AayAAEAZAe2AAEAZAe2ABEAhgS6ABEAZQG+ABEAwADCAFAgAAAAAMYA6gfGAAEAEyEAAAAA
hhgaBgYAAgAbIQAAAACGGBoGUAACACYhAAAAAIYI0ADMAAUAOyEAAAAAhgi8AzEABQBEIQAAAACG
CKgEzAAFAFkhAAAAAIYI5wMxAAUAYiEAAAAAhgi4BNAABQB8IQAAAACGCP4DMQAFAIUhAAAAAIYI
DgEQAAUAjyEAAAAAhgjRA9UABgCmIQAAAACGCDIFEAAHALAhAAAAAIYIKQTVAAgAxyEAAAAAhggJ
CBAACQDRIQAAAACGCFAE1QAKAOghAAAAAIYAAQgxAAsA8CEAAAAAhgA+BzEACwD4IQAAAACGGBoG
BgALABgiAAAAAMYA0QfaAAsAPSIAAAAAxgHKB8YADwBQIgAAAADGAeoHxgAQAFIiAAAAAIYYGgbk
ABEAYSIAAAAAhhgaBuQAEgBwIgAAAACDGBoGBgATAHgiAAAAAJMI3QXqABMApCIAAAAAkwhNAe8A
EwCrIgAAAACTCFkB9AATALMiAAAAAJYISgf6ABQAuiIAAAAAhhgaBgYAFADCIgAAAACRGCAG/wAU
AAAAAQATCAAAAQDWBQAAAgD2BgAAAwCGBQAAAQBAAwAAAQBAAwAAAQBAAwAAAQBAAwAAAQBAAwAA
AQBAAwAAAQBxAAAAAgAdAQAAAwDWBQAABACGBQAAAQDWBQAAAQATCAAAAQB6BwAAAQB6BwAAAQBA
AwkAGgYBABEAGgYGABkAGgYKACkAGgYQADEAGgYQADkAGgYQAEEAGgYQAEkAGgYQAFEAGgYQAFkA
GgYQAGEAGgYQAGkAGgYGAKkAGgYGAMkAGgYVANkAGgYGAJkAlQAkAOEARwUpAHEAeQApAOkAJAgu
AJEARQQxAJEAcwM1APEAMwA5AJEAqwA+APkA3gBFAPkAaQNKAHkAGgZQAHkA1gVaAHkA9gZeAIEA
OwBiAHkAXgRnAIEAbQRsAHkAdgRxAHkAZQQBAAEBGgYQAHkAAQgxAHkAPgcxAJkAGgYGAOkAJAd3
AJkACgd/AKEAGgYGABEB/ACFABEBFwiOALEAGgaUANEAGgYGAC4ACwAjAS4AEwAsAS4AGwBLAS4A
IwBUAS4AKwB9AS4AMwB9AS4AOwB9AS4AQwBUAS4ASwCDAS4AUwB9AS4AWwCaAUMAYwDkAeEAewDk
AeMAawDkAakBcwBLAckBcwBLARsAAwABAAcADQAIAA8AAADUAAMBAADAAwcBAACsBAMBAADrAwcB
AAC8BAsBAAACBAcBAAASARABAADVAwcBAABKBRABAAAtBAcBAAANCBABAABUBAcBAADhBRQBAABt
ARkBAABOBx4BAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgAIAAsAAgAJAA0AAQAKAA8AAQALABEA
AQAMABMAAQANABUAAQAOABcAAQAPABkAAgAZABsAAgAaAB0AAQAbAB0AAgAcAB8ABIAAAAEAAAAA
AAAAAAAAAAAARAAAAAQAAAAAAAAAAAAAAJwAtwAAAAAADwAAAAAAAAAAAAAApQCEBwAAAAAPAAAA
AAAAAAAAAAClAJAFAAAAAA8AAAAAAAAAAAAAAKUAqQcAAAAABAAAAAAAAAAAAAAAnAB/BAAAAAAA
AAAAAQAAAGsGAAAAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTQ29tcG9uZW50TWV0
YURhdGExMzAAVG9JbnQzMgBHZXRJbnQzMgBTQ180NGVhMDdkMWQ4NjI0MjJjODY0MWVkMDYyMDY0
NjgzOAA8TW9kdWxlPgBJbnB1dElEAEdldElkZW50aWZpY2F0aW9uU3RyaW5nQnlJRABnZXRfQ29t
cG9uZW50TWV0YURhdGEAR2V0QmxvYkRhdGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdldF9F
cnJvckNvZGUAZ2V0X1VuaWNvZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
c2V0X0NvbHVtbk5hbWUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5l
AFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVlAEVu
Y29kaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAGdldF9MZW5ndGgAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFNDXzQ0ZWEwN2QxZDg2MjQyMmM4NjQxZWQwNjIwNjQ2ODM4LmRs
bABnZXRfRXJyb3JDb2RlX0lzTnVsbABzZXRfQ29sdW1uTmFtZV9Jc051bGwAZ2V0X0Vycm9yQ29s
dW1uX0lzTnVsbABnZXRfRmxhdEZpbGVTb3VyY2VFcnJvck91dHB1dENvbHVtbl9Jc051bGwAc2V0
X0Vycm9yRGVzY3JpcHRpb25fSXNOdWxsAGdldF9Jc051bGwAc2V0X0ZhdWx0eVJvd19Jc051bGwA
U2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBC
bG9iQ29sdW1uAGdldF9FcnJvckNvbHVtbgBnZXRfRmxhdEZpbGVTb3VyY2VFcnJvck91dHB1dENv
bHVtbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9uAEdl
dEVycm9yRGVzY3JpcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1l
TWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1dDBC
dWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTQ180NGVhMDdkMWQ4NjI0MjJjODY0MWVkMDYyMDY0NjgzOC5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfNDRlYTA3ZDFkODYyNDIyYzg2NDFlZDA2
MjA2NDY4MzguUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1
bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dzZXQA
Z2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVy
LlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AFN5c3RlbS5UZXh0AElucHV0MF9Qcm9j
ZXNzSW5wdXRSb3cATmV4dFJvdwBzZXRfRmF1bHR5Um93AGdldF9Bc3NlbWJseQBFbXB0eQAAAAB1
QwBoAGUAYwBrACAAdABoAGUAIAByAG8AdwAgAGYAbwByACAAYQAgAHYAaQBvAGwAYQB0AGkAbwBu
ACAAbwBmACAAYQAgAGYAbwByAGUAaQBnAG4AIABrAGUAeQAgAGMAbwBuAHMAdAByAGEAaQBuAHQA
LgAAdVQAYQBiAGwAZQAgAGwAbwBjAGsAIABpAHMAIABuAG8AdAAgAGMAbwBtAHAAYQB0AGkAYgBs
AGUAIAB3AGkAdABoACAATQBlAG0AbwByAHkAIABPAHAAdABpAG0AaQBzAGUAZAAgAHQAYQBiAGwA
ZQBzAC4AAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIA
ZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1
AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAA
dQB0ACAAMAAAcVMAQwBfADQANABlAGEAMAA3AGQAMQBkADgANgAyADQAMgAyAGMAOAA2ADQAMQBl
AGQAMAA2ADIAMAA2ADQANgA4ADMAOAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAifkGcYCrOEG0JV56BPGAtAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERYQgHBBI5
CAgdBQQgABJxBCABDggCBg4DIAACAyAACQQAAQgJBiACHQUICAQAABJ9BSABDh0FCSADARJBHQgS
RQMGEkEDBh0IBCABCAgEIAECCAQgARwIBSACAQgcByACAg4RgIUFIAEdCAgIAAESgIkRgI0FIAAS
gJEHIAIBDhKAkQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSTQMGElkDBhJdAwYSIAUgAQES
DAMgAAgEIAASSQQgAQECCSAEAQgOEkESRQUgAQESTQQAABJZBAAAEl0FAAEBEl0EAAASIAMAAAED
KAAIAygAAgQoABJJAygADgQIABJZBAgAEl0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNDRlYTA3ZDFkODYyNDIyYzg2NDFlZDA2MjA2
NDY4MzgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAA
AAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAADwNgAAAAAAAAAAAAAKNwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
/DYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8ANAA0AGUAYQAwADcAZAAxAGQAOAA2ADIANAAyADIAYwA4ADYANAAxAGUAZAAwADYAMgAw
ADYANAA2ADgAMwA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA0ADQAZQBhADAANwBk
ADEAZAA4ADYAMgA0ADIAMgBjADgANgA0ADEAZQBkADAANgAyADAANgA0ADYAOAAzADgALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADQANABl
AGEAMAA3AGQAMQBkADgANgAyADQAMgAyAGMAOAA2ADQAMQBlAGQAMAA2ADIAMAA2ADQANgA4ADMA
OAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA0ADQAZQBh
ADAANwBkADEAZAA4ADYAMgA0ADIAMgBjADgANgA0ADEAZQBkADAANgAyADAANgA0ADYAOAAzADgA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABw3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_44ea07d1d862422c8641ed0620646838</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">27</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Extract license data\Generate error info.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract license data\Generate error info.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Extract license data\Generate error info.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Extract license data\Generate error info.Inputs[Input 0].Columns[Flat File Source Error Output Column]"
                      cachedCodepage="65001"
                      cachedDataType="text"
                      cachedName="Flat File Source Error Output Column"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract license data\Generate error info.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Extract license data\Generate error info.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract license data\Generate error info.Outputs[Output 0].Columns[ColumnName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract license data\Generate error info.Outputs[Output 0].Columns[ColumnName]"
                      name="ColumnName" />
                    <outputColumn
                      refId="Package\Extract license data\Generate error info.Outputs[Output 0].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract license data\Generate error info.Outputs[Output 0].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                    <outputColumn
                      refId="Package\Extract license data\Generate error info.Outputs[Output 0].Columns[FaultyRow]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Extract license data\Generate error info.Outputs[Output 0].Columns[FaultyRow]"
                      name="FaultyRow" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract license data\Generate source row number"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Generate source row number"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
  #region Help:  Using Integration Services variables and parameters
  /* To use a variable in this script, first ensure that the variable has been added to
   * either the list contained in the ReadOnlyVariables property or the list contained in
   * the ReadWriteVariables property of this script component, according to whether or not your
   * code needs to write into the variable.  To do so, save this script, close this instance of
   * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
   * Script Transformation Editor window.
   * To use a parameter in this script, follow the same steps. Parameters are always read-only.
   *
   * Example of reading from a variable or parameter:
   *  DateTime startTime = Variables.MyStartTime;
   *
   * Example of writing to a variable:
   *  Variables.myStringVariable = "new value";
   */
  #endregion

  #region Help:  Using Integration Services Connnection Managers
  /* Some types of connection managers can be used in this script component.  See the help topic
   * "Working with Connection Managers Programatically" for details.
   *
   * To use a connection manager in this script, first ensure that the connection manager has
   * been added to either the list of connection managers on the Connection Managers page of the
   * script component editor.  To add the connection manager, save this script, close this instance of
   * Visual Studio, and add the Connection Manager to the list.
   *
   * If the component needs to hold a connection open while processing rows, override the
   * AcquireConnections and ReleaseConnections methods.
   * 
   * Example of using an ADO.Net connection manager to acquire a SqlConnection:
   *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
   *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
   *
   * Example of using a File connection manager to acquire a file path:
   *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
   *  string filePath = (string)rawConnection;
   *
   * Example of releasing a connection manager:
   *  Connections.SalesDB.ReleaseConnection(rawConnection);
   */
  #endregion

  #region Help:  Firing Integration Services Events
  /* This script component can fire events.
   *
   * Example of firing an error event:
   *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
   *
   * Example of firing an information event:
   *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
   *
   * Example of firing a warning event:
   *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
   */
  #endregion

    private int _sourceRowNumber;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        _sourceRowNumber = 1;
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.SourceRowNumber = _sourceRowNumber++;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 SourceRowNumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool SourceRowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_41f3a2797b26456a8170b7e150a616ab.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a640b8e4-a165-4590-8ffc-b6fce31db78e}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_41f3a2797b26456a8170b7e150a616ab</RootNamespace>
    <AssemblyName>SC_41f3a2797b26456a8170b7e150a616ab</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_41f3a2797b26456a8170b7e150a616ab" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_41f3a2797b26456a8170b7e150a616ab.Properties.Settings.get_Default():SC_41f3a2797b26456a8170b7e150a616ab.Properties.Sett" +
    "ings")]

namespace SC_41f3a2797b26456a8170b7e150a616ab.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_41f3a2797b26456a8170b7e150a616ab</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_41f3a2797b26456a8170b7e150a616ab</msb:DisplayName>
    <msb:ProjectId>{707CAA98-2A35-4189-8EEB-C918720C10B3}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_41f3a2797b26456a8170b7e150a616ab.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_41f3a2797b26456a8170b7e150a616ab")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_41f3a2797b26456a8170b7e150a616ab")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_41f3a2797b26456a8170b7e150a616ab.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_41f3a2797b26456a8170b7e150a616ab.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_41f3a2797b26456a8170b7e150a616ab.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_41f3a2797b26456a8170b7e150a616ab.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_41f3a2797b26456a8170b7e150a616ab.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_41f3a2797b26456a8170b7e150a616ab.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABa8uGAAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAIjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANAwAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAKBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAE
MQAAAAAAAEgAAAACAAUApCEAAHQOAAABAAAAAAAAABgwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADoCKBAAAAoCF30BAAAEKgATMAQAGAAAAAEAABEDAgJ7AQAA
BAoGF1h9AQAABAZvBQAABioeAigJAAAGKioCAwQFKBEAAAoqOgIWA4waAAABKBIAAAoqWgMsCAIW
KBMAAAoqcgEAAHBzFAAACnoeAigVAAAKKh4CKBYAAAoqfgIoFwAACgICcw0AAAZ9AgAABAICcw4A
AAZ9AwAABCqSBHKeAABwGm8YAAAKLBUCBQIDKBkAAAoOBHMEAAAGbwsAAAYqSisHAgNvDAAABgNv
BwAABi3xKgYqOgIoGgAACgIDfQQAAAQqOgIoGgAACgIDfQUAAAQqHgIoGgAACiqufgYAAAQtHnKu
AABw0AcAAAIoGwAACm8cAAAKcx0AAAqABgAABH4GAAAEKhp+BwAABCoeAoAHAAAEKhp+CAAABCoe
AigeAAAKKi5zFAAABoAIAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAY
BQAAI34AAIQFAAAsBgAAI1N0cmluZ3MAAAAAsAsAACABAAAjVVMA0AwAABAAAAAjR1VJRAAAAOAM
AACUAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAIAAAAAgAAAAIAAAAFQAA
AA8AAAAeAAAAEAAAAAEAAAADAAAABQAAAAYAAAABAAAABAAAAAEAAAAAAOQCAQAAAAAABgDqAWME
BgB+AmMEBgA2AVAEDwDXBAAABgBjAYADBgDNAYADBgCuAYADBgBlAoADBgAKAoADBgAjAoADBgB6
AYADBgCVAa0CCgA+AoMACgAiBIMADgATBIMACgDJA4MACgCdBYMABgBgBTgDBgAZAVAEBgAzBIME
BgC9A2sDEgDpAM4CEgBKAc4CEgDRAFYDBgD+AGMEBgABADgDBgCSAzgDBgDHAjgDBgCsAzgDBgCk
ADgDBgBVADgDBgAiBoADAAAAAAcAAAAAAAEAAQABABAASwMAABAAAQABAAEAEAAGBAAAOQACAAQA
AQAQAH8FAABFAAIACQABABAAVAUAAEkABAANAAEAEAAVBQAASQAFAA4AAAAQAIoE5gRJAAYADwAA
ARAARAXmBGEACAATAAEA9QNnAAYAVAVqAAYAFQVuAAEAjQVyAAEAjQVyABEAPwN2ABEAwQB6ABEA
RQB+AFAgAAAAAMYAnAIGAAEAYCAAAAAAxgD/BYIAAQCEIAAAAACGGEMEBgACAIwgAAAAAIYYQwQf
AAIAlyAAAAAAhgjhAwEABQCmIAAAAACGCAwDiAAGAL0gAAAAAIYAFgYvAAcAxSAAAAAAhgBnBS8A
BwDNIAAAAACGGEMEBgAHAO0gAAAAAMYA8gWNAAcAEiEAAAAAxgHrBYIACwAlIQAAAADGAf8FggAM
ACchAAAAAIYYQwSXAA0ANiEAAAAAhhhDBJcADgBFIQAAAACDGEMEBgAPAE0hAAAAAJMILwSdAA8A
eSEAAAAAkwipAKIADwCAIQAAAACTCLUApwAPAIghAAAAAJYIcwWtABAAjyEAAAAAhhhDBAYAEACX
IQAAAACRGEkEsgAQAAAAAQAaBgAAAQAoBAAAAgAfBQAAAwDXAwAAAQCnAgAAAQCnAgAAAQAQAAAA
AgB5AAAAAwAoBAAABADXAwAAAQAoBAAAAQAaBgAAAQCjBQAAAQCjBQAAAQCnAgkAQwQBABEAQwQG
ABkAQwQKACkAQwQQADEAQwQQADkAQwQQAEEAQwQQAEkAQwQQAFEAQwQQAFkAQwQQAGEAQwQQAGkA
QwQGAJkAQwQGALkAQwQVAMkAQwQGAIkAnAIGAHEAQwQfAHEALwMpAHEAJwMBANkAQwQQAHEAFgYv
AHEAZwUvAIkAQwQGAOEATQUzAIkAMwU6AJEAQwQGAPEAZwBAAPEAHgZHAKEAQwRNAMEAQwQGAC4A
CwDNAC4AEwDWAC4AGwD1AC4AIwD+AC4AKwAnAS4AMwAnAS4AOwAnAS4AQwD+AC4ASwAtAS4AUwAn
AS4AWwBEAUMAYwCOAWkAcwD1AIkAcwD1AOMAawCOAQEBewCOARsAAwABAAcAAwAIAAUAAADlA7YA
AAAQA7oAAAAzBL4AAADJAMMAAAB3BcgAAQAFAAMAAQAGAAUAAgAQAAcAAgARAAkAAQASAAkAAgAT
AAsABIAAAAEAAAAAAAAAAAAAAAAAGAAAAAQAAAAAAAAAAAAAAFUAPAAAAAAADwAAAAAAAAAAAAAA
XgCtBQAAAAAPAAAAAAAAAAAAAABeAMoFAAAAAAQAAAAAAAAAAAAAAFUAOAMAAAAAAAAAAAEAAACU
BAAAAAAAAABJbnQzMgA8TW9kdWxlPgBJbnB1dElEAFNDXzQxZjNhMjc5N2IyNjQ1NmE4MTcwYjdl
MTUwYTYxNmFiAG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUA
VHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25T
ZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0
ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBTeXN0ZW0uQ29tcG9uZW50
TW9kZWwAU0NfNDFmM2EyNzk3YjI2NDU2YTgxNzBiN2UxNTBhNjE2YWIuZGxsAHNldF9Tb3VyY2VS
b3dOdW1iZXJfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlw
dE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1
cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAHNldF9Tb3VyY2VSb3dOdW1iZXIAX3NvdXJj
ZVJvd051bWJlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9S
ZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfNDFmM2EyNzk3YjI2NDU2
YTgxNzBiN2UxNTBhNjE2YWIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAFNDXzQxZjNhMjc5N2IyNjQ1NmE4MTcwYjdlMTUwYTYxNmFiLlByb3BlcnRpZXMAVmFy
aWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVh
bHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25l
bnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4
U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5w
dXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAAAICbSQBzAE4A
dQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABv
ACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgA
ZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBf
ADQAMQBmADMAYQAyADcAOQA3AGIAMgA2ADQANQA2AGEAOAAxADcAMABiADcAZQAxADUAMABhADYA
MQA2AGEAYgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAnjfToZaV
50KMrDCSwQm2kAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQMHAQgJIAMBEj0dCBJBBSACAQgc
AyAAAgYgAgIOEXUFIAEdCAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRdzYCAzJEC
BggDBhIUAwYSGAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwEIAEBAgkgBAEIDhI9EkEFIAEBEkUEAAAS
UQQAABJVBQABARJVBAAAEiADAAABAygACAMoAAIECAASUQQIABJVBAgAEiAIAQAIAAAAAAAeAQAB
AFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzQxZjNhMjc5N2IyNjQ1
NmE4MTcwYjdlMTUwYTYxNmFiAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjEAAEkBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFt
ZXdvcmsgNC43BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAPgwAAAAAAAAAAAAABIxAAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAEMQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8ANAAxAGYAMwBhADIANwA5ADcAYgAyADYANAA1ADYAYQA4ADEANwAwAGIANwBlADEA
NQAwAGEANgAxADYAYQBiAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA0ADEAZgAzAGEA
MgA3ADkANwBiADIANgA0ADUANgBhADgAMQA3ADAAYgA3AGUAMQA1ADAAYQA2ADEANgBhAGIALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADQA
MQBmADMAYQAyADcAOQA3AGIAMgA2ADQANQA2AGEAOAAxADcAMABiADcAZQAxADUAMABhADYAMQA2
AGEAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA0ADEA
ZgAzAGEAMgA3ADkANwBiADIANgA0ADUANgBhADgAMQA3ADAAYgA3AGUAMQA1ADAAYQA2ADEANgBh
AGIAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACQxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_41f3a2797b26456a8170b7e150a616ab</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">CA</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Extract license data\Generate source row number.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract license data\Generate source row number.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Extract license data\Generate source row number.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract license data\Generate source row number.Outputs[Output 0].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Extract license data\Generate source row number.Outputs[Output 0].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract license data\Get license data from dataset"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Get license data from dataset"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract license data\Get license data from dataset.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Licenses]"
                  connectionManagerRefId="Package.ConnectionManagers[Licenses]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[DCALicenseNumber]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[DCA License Number]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[DCALicenseNumber]"
                      name="DCALicenseNumber"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Type]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseType]"
                      name="LicenseType"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseExpirationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Expiration Date]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseStatus]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Status]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseStatus]"
                      name="LicenseStatus"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseCreationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Creation Date]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Business Name]"
                      length="300"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Business Name 2]"
                      length="100"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address Building]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressBuilding]"
                      name="AddressBuilding"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address Street Name]"
                      length="75"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressStreetName]"
                      name="AddressStreetName"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Secondary Address Street Name]"
                      length="75"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressCity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address City]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressCity]"
                      name="AddressCity"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressState]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address State]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressState]"
                      name="AddressState"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressZIP]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address ZIP]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressZIP]"
                      name="AddressZIP"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[ContactPhoneNumber]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Contact Phone Number]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[ContactPhoneNumber]"
                      name="ContactPhoneNumber"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressBorough]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address Borough]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressBorough]"
                      name="AddressBorough"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BoroughCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Borough Code]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BoroughCode]"
                      name="BoroughCode"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Community Board]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[CommunityBoard]"
                      name="CommunityBoard"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Council District]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BIN]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[BIN]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BIN]"
                      name="BIN"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BBL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[BBL]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BBL]"
                      name="BBL"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[NTA]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[NTA]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[NTA]"
                      name="NTA"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[CensusTract]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Census Tract]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[CensusTract]"
                      name="CensusTract"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Detail]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Detail]"
                      length="300"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Detail]"
                      name="Detail"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Longitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Longitude]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Longitude]"
                      name="Longitude"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Latitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Latitude]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Latitude]"
                      name="Latitude"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Location]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Location]"
                      length="50"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Location]"
                      name="Location"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[DCA License Number]"
                      dataType="wstr"
                      length="50"
                      name="DCA License Number" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Type]"
                      dataType="wstr"
                      length="50"
                      name="License Type" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Expiration Date]"
                      dataType="wstr"
                      length="50"
                      name="License Expiration Date" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Status]"
                      dataType="wstr"
                      length="50"
                      name="License Status" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Creation Date]"
                      dataType="wstr"
                      length="50"
                      name="License Creation Date" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Business Name]"
                      dataType="wstr"
                      length="300"
                      name="Business Name" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Business Name 2]"
                      dataType="wstr"
                      length="100"
                      name="Business Name 2" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address Building]"
                      dataType="wstr"
                      length="50"
                      name="Address Building" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address Street Name]"
                      dataType="wstr"
                      length="75"
                      name="Address Street Name" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Secondary Address Street Name]"
                      dataType="wstr"
                      length="75"
                      name="Secondary Address Street Name" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address City]"
                      dataType="wstr"
                      length="50"
                      name="Address City" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address State]"
                      dataType="wstr"
                      length="50"
                      name="Address State" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address ZIP]"
                      dataType="wstr"
                      length="50"
                      name="Address ZIP" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Contact Phone Number]"
                      dataType="wstr"
                      length="50"
                      name="Contact Phone Number" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address Borough]"
                      dataType="wstr"
                      length="50"
                      name="Address Borough" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Borough Code]"
                      dataType="wstr"
                      length="50"
                      name="Borough Code" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Community Board]"
                      dataType="wstr"
                      length="50"
                      name="Community Board" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Council District]"
                      dataType="wstr"
                      length="50"
                      name="Council District" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[BIN]"
                      dataType="wstr"
                      length="50"
                      name="BIN" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[BBL]"
                      dataType="wstr"
                      length="50"
                      name="BBL" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[NTA]"
                      dataType="wstr"
                      length="50"
                      name="NTA" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Census Tract]"
                      dataType="wstr"
                      length="50"
                      name="Census Tract" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Detail]"
                      dataType="wstr"
                      length="300"
                      name="Detail" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Location]"
                      dataType="wstr"
                      length="50"
                      name="Location" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="65001"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract license data\Insert error info to DataExtractionErrors table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert error info to DataExtractionErrors table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWLOG].[DataExtractionErrors]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[SessionId]"
                      cachedDataType="guid"
                      cachedName="SessionId"
                      externalMetadataColumnId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                      lineageId="Package\Extract license data\Derive error info.Outputs[Derived Column Output].Columns[SessionId]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      externalMetadataColumnId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[Dataset]"
                      lineageId="Package\Extract license data\Derive error info.Outputs[Derived Column Output].Columns[Dataset]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      externalMetadataColumnId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      lineageId="Package\Extract license data\Derive error info.Outputs[Derived Column Output].Columns[Timestamp]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ColumnName"
                      externalMetadataColumnId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnName]"
                      lineageId="Package\Extract license data\Generate error info.Outputs[Output 0].Columns[ColumnName]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[ErrorDescription]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorDescription"
                      externalMetadataColumnId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                      lineageId="Package\Extract license data\Generate error info.Outputs[Output 0].Columns[ErrorDescription]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[FaultyRow]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="FaultyRow"
                      externalMetadataColumnId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[FaultyRow]"
                      lineageId="Package\Extract license data\Generate error info.Outputs[Output 0].Columns[FaultyRow]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                      dataType="guid"
                      name="SessionId" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[Dataset]"
                      dataType="wstr"
                      length="20"
                      name="Dataset" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[FaultyRow]"
                      dataType="wstr"
                      length="4000"
                      name="FaultyRow" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnName]"
                      dataType="wstr"
                      length="255"
                      name="ColumnName" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                      dataType="wstr"
                      length="255"
                      name="ErrorDescription" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      dataType="dbTimeStamp2"
                      name="Timestamp"
                      scale="7" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract license data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract license data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract license data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract license data\Insert license data to LicenseExtract table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert license data to LicenseExtract table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract license data\Insert license data to LicenseExtract table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[DCALicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DCALicenseNumber"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[DCALicenseNumber]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[DCALicenseNumber]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[LicenseType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseType"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseType]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseType]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[LicenseStatus]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseStatus"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseStatus]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseStatus]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[AddressBuilding]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressBuilding]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[AddressStreetName]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressStreetName]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[SecondaryAddressStreetName]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[SecondaryAddressStreetName]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[AddressCity]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressCity]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[AddressState]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressState]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[AddressZIP]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressZIP]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[ContactPhoneNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ContactPhoneNumber"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[ContactPhoneNumber]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[ContactPhoneNumber]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[AddressBorough]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressBorough]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[BoroughCode]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BoroughCode]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[CommunityBoard]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[CommunityBoard]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[CouncilDistrict]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[CouncilDistrict]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[BIN]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BIN"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[BIN]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BIN]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[BBL]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BBL"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[BBL]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[BBL]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[NTA]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="NTA"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[NTA]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[NTA]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[CensusTract]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[CensusTract]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[Detail]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="Detail"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[Detail]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Detail]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Longitude]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Latitude]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[Location]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Location"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[Location]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[Location]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseExpirationDate]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseExpirationDate]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseCreationDate]"
                      lineageId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseCreationDate]" />
                    <inputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      externalMetadataColumnId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[SourceRowNumber]"
                      lineageId="Package\Extract license data\Generate source row number.Outputs[Output 0].Columns[SourceRowNumber]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="DCALicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      name="LicenseType" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseExpirationDate]"
                      dataType="wstr"
                      length="50"
                      name="LicenseExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseStatus]"
                      dataType="wstr"
                      length="50"
                      name="LicenseStatus" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseCreationDate]"
                      dataType="wstr"
                      length="50"
                      name="LicenseCreationDate" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[ContactPhoneNumber]"
                      dataType="wstr"
                      length="50"
                      name="ContactPhoneNumber" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[BIN]"
                      dataType="wstr"
                      length="50"
                      name="BIN" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[BBL]"
                      dataType="wstr"
                      length="50"
                      name="BBL" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[NTA]"
                      dataType="wstr"
                      length="50"
                      name="NTA" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[Detail]"
                      dataType="wstr"
                      length="300"
                      name="Detail" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[Location]"
                      dataType="wstr"
                      length="50"
                      name="Location" />
                    <externalMetadataColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input].ExternalColumns[SourceRowNumber]"
                      dataType="i4"
                      name="SourceRowNumber" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract license data\Insert license data to LicenseExtract table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract license data\Insert license data to LicenseExtract table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract license data\Insert license data to LicenseExtract table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract license data\Insert license data to LicenseExtract table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Extract license data.Paths[Derived Column Output]"
              endId="Package\Extract license data\Generate error info.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Extract license data\Derive error info.Outputs[Derived Column Output]" />
            <path
              refId="Package\Extract license data.Paths[Flat File Source Error Output]"
              endId="Package\Extract license data\Derive error info.Inputs[Derived Column Input]"
              name="Flat File Source Error Output"
              startId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Error Output]" />
            <path
              refId="Package\Extract license data.Paths[Flat File Source Output]"
              endId="Package\Extract license data\Generate source row number.Inputs[Input 0]"
              name="Flat File Source Output"
              startId="Package\Extract license data\Get license data from dataset.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Extract license data.Paths[Output 0]"
              endId="Package\Extract license data\Insert license data to LicenseExtract table.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Extract license data\Generate source row number.Outputs[Output 0]" />
            <path
              refId="Package\Extract license data.Paths[Output 01]"
              endId="Package\Extract license data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Extract license data\Generate error info.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Extract payment data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{7b878f99-0a3b-494a-8544-2593554458a7}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Extract payment data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Extract payment data\Derive error info"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derive error info"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract payment data\Derive error info.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract payment data\Derive error info.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Extract payment data\Derive error info.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract payment data\Derive error info.Outputs[Derived Column Output].Columns[SessionId]"
                      dataType="guid"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract payment data\Derive error info.Outputs[Derived Column Output].Columns[SessionId]"
                      name="SessionId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_GUID)("{" + (DT_WSTR,36)@[User::SessionId] + "}")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_GUID)("{" + (DT_WSTR,36)@[User::SessionId] + "}")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract payment data\Derive error info.Outputs[Derived Column Output].Columns[Dataset]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Extract payment data\Derive error info.Outputs[Derived Column Output].Columns[Dataset]"
                      name="Dataset"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Payments"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Payments"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract payment data\Derive error info.Outputs[Derived Column Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract payment data\Derive error info.Outputs[Derived Column Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETUTCDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETUTCDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract payment data\Derive error info.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Extract payment data\Derive error info.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract payment data\Derive error info.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract payment data\Derive error info.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract payment data\Derive error info.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract payment data\Derive error info.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract payment data\Generate error info"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Generate error info"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Text;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

  /// <summary>
  /// This method is called once for every row that passes through the component from Input0.
  ///
  /// Example of reading a value from a column in the the row:
  ///  string zipCode = Row.ZipCode
  ///
  /// Example of writing a value to a column in the row:
  ///  Row.ZipCode = zipCode
  /// </summary>
  /// <param name="Row">The row that is currently passing through the component</param>
  public override void Input0_ProcessInputRow(Input0Buffer Row)
  {
    Row.ErrorDescription = ComponentMetaData.GetErrorDescription(Row.ErrorCode);

    if (ComponentMetaData is IDTSComponentMetaData130 componentMetaData130)
    {
      switch (Row.ErrorColumn)
      {
        // 0 means no specific column is identified by ErrorColumn, this time.
        case 0:
          Row.ColumnName = "Check the row for a violation of a foreign key constraint.";
          break;
        // -1 means you are using Table Lock for a Memory Optimised destination table which is not supported.
        case -1:
          Row.ColumnName = "Table lock is not compatible with Memory Optimised tables.";
          break;
        default:
          Row.ColumnName = componentMetaData130.GetIdentificationStringByID(Row.ErrorColumn);
          break;
      }
    }
    else
    {
      Row.ColumnName = string.Empty;
    }

    if (Row.FlatFileSourceErrorOutputColumn.IsNull)
    {
      Row.FaultyRow = string.Empty;
    }
    else
    {
      var blobLength = Convert.ToInt32(Row.FlatFileSourceErrorOutputColumn.Length);
      var blobData = Row.FlatFileSourceErrorOutputColumn.GetBlobData(0, blobLength);
      Row.FaultyRow = Encoding.Unicode.GetString(blobData);
    }
  }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public BlobColumn FlatFileSourceErrorOutputColumn
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[2]];
        }
    }
    public bool FlatFileSourceErrorOutputColumn_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String ColumnName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ColumnName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FaultyRow
    {
        set
        {
            this[5] = value;
        }
    }
    public bool FaultyRow_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_44ea07d1d862422c8641ed0620646838.Properties.Settings.get_Default():SC_44ea07d1d862422c8641ed0620646838.Properties.Sett" +
    "ings")]

namespace SC_44ea07d1d862422c8641ed0620646838.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_44ea07d1d862422c8641ed0620646838.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{11b96e81-6d22-4c22-9819-8f7a13608d28}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_44ea07d1d862422c8641ed0620646838</RootNamespace>
    <AssemblyName>SC_340B32E19F974789A431C8495982FAA4</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_44ea07d1d862422c8641ed0620646838" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_44ea07d1d862422c8641ed0620646838</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_44ea07d1d862422c8641ed0620646838</msb:DisplayName>
    <msb:ProjectId>{81049570-3A0F-4843-99E6-528F3203E763}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_44ea07d1d862422c8641ed0620646838.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_44ea07d1d862422c8641ed0620646838")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_44ea07d1d862422c8641ed0620646838")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_44ea07d1d862422c8641ed0620646838.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_44ea07d1d862422c8641ed0620646838.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_44ea07d1d862422c8641ed0620646838.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_44ea07d1d862422c8641ed0620646838.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_44ea07d1d862422c8641ed0620646838.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_340B32E19F974789A431C8495982FAA4.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADeJuWAAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAGjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMg2AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAIBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD8
NgAAAAAAAEgAAAACAAUA0CIAAEATAAABAAAAAAAAABA2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwC3AAAAAQAAEQMCKBAAAAoDbwQAAAZvEQAACm8MAAAG
AigQAAAKdQ4AAAEKBiw8A28GAAAGCwcVLhAHLRoDcgEAAHBvCgAABissA3J3AABwbwoAAAYrHwMG
A28GAAAGbxIAAApvCgAABisLA34TAAAKbwoAAAYDbwgAAAZvFAAACiwMA34TAAAKbw4AAAYqA28I
AAAGbxUAAAooFgAACgwDbwgAAAYWCG8XAAAKDQMoGAAACglvGQAACm8OAAAGKh4CKBIAAAYqKgID
BAUoGgAACipSAnsbAAAKAnscAAAKFpRvHQAACioiAhYoHgAACipSAnsbAAAKAnscAAAKF5RvHQAA
CioiAhcoHgAACipmAnsbAAAKAnscAAAKGJRvHwAACnQSAAABKiICGCgeAAAKKiYCGQMoIAAACipa
AywIAhkoIQAACipy7QAAcHMiAAAKeiYCGgMoIAAACipaAywIAhooIQAACipy7QAAcHMiAAAKeiYC
GwMoIAAACipaAywIAhsoIQAACipy7QAAcHMiAAAKeh4CKCMAAAoqHgIoJAAACip+AiglAAAKAgJz
FgAABn0BAAAEAgJzFwAABn0CAAAEKpIEcooBAHAabyYAAAosFQIFAgMoJwAACg4EcwMAAAZvFAAA
BipKKwcCA28VAAAGA28QAAAGLfEqBio6AigoAAAKAgN9AwAABCo6AigoAAAKAgN9BAAABCoeAigo
AAAKKq5+BQAABC0ecpoBAHDQBwAAAigpAAAKbyoAAApzKwAACoAFAAAEfgUAAAQqGn4GAAAEKh4C
gAYAAAQqGn4HAAAEKh4CKCwAAAoqLnMdAAAGgAcAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4z
MDMxOQAAAAAFAGwAAACgBgAAI34AAAwHAAAsCAAAI1N0cmluZ3MAAAAAOA8AAAwCAAAjVVMARBEA
ABAAAAAjR1VJRAAAAFQRAADsAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAA
JAAAAAgAAAAHAAAAHgAAABMAAAAsAAAAEAAAAAEAAAADAAAADwAAABAAAAABAAAABQAAAAEAAAAA
AJQDAQAAAAAABgCOAjoGBgAiAzoGBgDaAScGDwCuBgAABgAHAgYFBgBxAgYFBgBSAgYFBgAJAwYF
BgCuAgYFBgDHAgYFBgAeAgYFBgA5Ak8DCgDiAicBDgAaAPEFCgDQBScBEgDBBScBCgB4BScBEgCd
BCcBCgB0BycBBgA3B38EBgC9AScGBgDhBVoGBgBsBfEEFgCNAX4DFgDuAX4DFgB1AdwEBgCiAToG
DgABAPEFBgBsA38EBgChB38EBgBGA94HBgAYBX8EBgBbBX8EBgBIAX8EBgDqAH8EBgAbCAYFAAAA
AGgAAAAAAAEAAQABABAAkgQAABAAAQABAAEAEAC0BQAAPQABAAMAAQAQAFYHAABNAAEAEgABABAA
KwcAAFEAAwAWAAEAEADsBgAAUQAEABcAAAAQAGEGvQZRAAUAGAAAARAAGwe9BmkABwAcAAYAKweu
AAYA7AayAAEAZAe2AAEAZAe2ABEAhgS6ABEAZQG+ABEAwADCAFAgAAAAAMYA6gfGAAEAEyEAAAAA
hhgaBgYAAgAbIQAAAACGGBoGUAACACYhAAAAAIYI0ADMAAUAOyEAAAAAhgi8AzEABQBEIQAAAACG
CKgEzAAFAFkhAAAAAIYI5wMxAAUAYiEAAAAAhgi4BNAABQB8IQAAAACGCP4DMQAFAIUhAAAAAIYI
DgEQAAUAjyEAAAAAhgjRA9UABgCmIQAAAACGCDIFEAAHALAhAAAAAIYIKQTVAAgAxyEAAAAAhggJ
CBAACQDRIQAAAACGCFAE1QAKAOghAAAAAIYAAQgxAAsA8CEAAAAAhgA+BzEACwD4IQAAAACGGBoG
BgALABgiAAAAAMYA0QfaAAsAPSIAAAAAxgHKB8YADwBQIgAAAADGAeoHxgAQAFIiAAAAAIYYGgbk
ABEAYSIAAAAAhhgaBuQAEgBwIgAAAACDGBoGBgATAHgiAAAAAJMI3QXqABMApCIAAAAAkwhNAe8A
EwCrIgAAAACTCFkB9AATALMiAAAAAJYISgf6ABQAuiIAAAAAhhgaBgYAFADCIgAAAACRGCAG/wAU
AAAAAQATCAAAAQDWBQAAAgD2BgAAAwCGBQAAAQBAAwAAAQBAAwAAAQBAAwAAAQBAAwAAAQBAAwAA
AQBAAwAAAQBxAAAAAgAdAQAAAwDWBQAABACGBQAAAQDWBQAAAQATCAAAAQB6BwAAAQB6BwAAAQBA
AwkAGgYBABEAGgYGABkAGgYKACkAGgYQADEAGgYQADkAGgYQAEEAGgYQAEkAGgYQAFEAGgYQAFkA
GgYQAGEAGgYQAGkAGgYGAKkAGgYGAMkAGgYVANkAGgYGAJkAlQAkAOEARwUpAHEAeQApAOkAJAgu
AJEARQQxAJEAcwM1APEAMwA5AJEAqwA+APkA3gBFAPkAaQNKAHkAGgZQAHkA1gVaAHkA9gZeAIEA
OwBiAHkAXgRnAIEAbQRsAHkAdgRxAHkAZQQBAAEBGgYQAHkAAQgxAHkAPgcxAJkAGgYGAOkAJAd3
AJkACgd/AKEAGgYGABEB/ACFABEBFwiOALEAGgaUANEAGgYGAC4ACwAjAS4AEwAsAS4AGwBLAS4A
IwBUAS4AKwB9AS4AMwB9AS4AOwB9AS4AQwBUAS4ASwCDAS4AUwB9AS4AWwCaAUMAYwDkAeEAewDk
AeMAawDkAakBcwBLAckBcwBLARsAAwABAAcADQAIAA8AAADUAAMBAADAAwcBAACsBAMBAADrAwcB
AAC8BAsBAAACBAcBAAASARABAADVAwcBAABKBRABAAAtBAcBAAANCBABAABUBAcBAADhBRQBAABt
ARkBAABOBx4BAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgAIAAsAAgAJAA0AAQAKAA8AAQALABEA
AQAMABMAAQANABUAAQAOABcAAQAPABkAAgAZABsAAgAaAB0AAQAbAB0AAgAcAB8ABIAAAAEAAAAA
AAAAAAAAAAAARAAAAAQAAAAAAAAAAAAAAJwAtwAAAAAADwAAAAAAAAAAAAAApQCEBwAAAAAPAAAA
AAAAAAAAAAClAJAFAAAAAA8AAAAAAAAAAAAAAKUAqQcAAAAABAAAAAAAAAAAAAAAnAB/BAAAAAAA
AAAAAQAAAGsGAAAAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTQ29tcG9uZW50TWV0
YURhdGExMzAAVG9JbnQzMgBHZXRJbnQzMgBTQ18zNDBCMzJFMTlGOTc0Nzg5QTQzMUM4NDk1OTgy
RkFBNAA8TW9kdWxlPgBJbnB1dElEAEdldElkZW50aWZpY2F0aW9uU3RyaW5nQnlJRABnZXRfQ29t
cG9uZW50TWV0YURhdGEAR2V0QmxvYkRhdGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdldF9F
cnJvckNvZGUAZ2V0X1VuaWNvZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
c2V0X0NvbHVtbk5hbWUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5l
AFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVlAEVu
Y29kaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAGdldF9MZW5ndGgAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFNDXzM0MEIzMkUxOUY5NzQ3ODlBNDMxQzg0OTU5ODJGQUE0LmRs
bABnZXRfRXJyb3JDb2RlX0lzTnVsbABzZXRfQ29sdW1uTmFtZV9Jc051bGwAZ2V0X0Vycm9yQ29s
dW1uX0lzTnVsbABnZXRfRmxhdEZpbGVTb3VyY2VFcnJvck91dHB1dENvbHVtbl9Jc051bGwAc2V0
X0Vycm9yRGVzY3JpcHRpb25fSXNOdWxsAGdldF9Jc051bGwAc2V0X0ZhdWx0eVJvd19Jc051bGwA
U2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBC
bG9iQ29sdW1uAGdldF9FcnJvckNvbHVtbgBnZXRfRmxhdEZpbGVTb3VyY2VFcnJvck91dHB1dENv
bHVtbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9uAEdl
dEVycm9yRGVzY3JpcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1l
TWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1dDBC
dWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTQ180NGVhMDdkMWQ4NjI0MjJjODY0MWVkMDYyMDY0NjgzOC5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfNDRlYTA3ZDFkODYyNDIyYzg2NDFlZDA2
MjA2NDY4MzguUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1
bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dzZXQA
Z2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVy
LlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AFN5c3RlbS5UZXh0AElucHV0MF9Qcm9j
ZXNzSW5wdXRSb3cATmV4dFJvdwBzZXRfRmF1bHR5Um93AGdldF9Bc3NlbWJseQBFbXB0eQAAAAB1
QwBoAGUAYwBrACAAdABoAGUAIAByAG8AdwAgAGYAbwByACAAYQAgAHYAaQBvAGwAYQB0AGkAbwBu
ACAAbwBmACAAYQAgAGYAbwByAGUAaQBnAG4AIABrAGUAeQAgAGMAbwBuAHMAdAByAGEAaQBuAHQA
LgAAdVQAYQBiAGwAZQAgAGwAbwBjAGsAIABpAHMAIABuAG8AdAAgAGMAbwBtAHAAYQB0AGkAYgBs
AGUAIAB3AGkAdABoACAATQBlAG0AbwByAHkAIABPAHAAdABpAG0AaQBzAGUAZAAgAHQAYQBiAGwA
ZQBzAC4AAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIA
ZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1
AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAA
dQB0ACAAMAAAcVMAQwBfADQANABlAGEAMAA3AGQAMQBkADgANgAyADQAMgAyAGMAOAA2ADQAMQBl
AGQAMAA2ADIAMAA2ADQANgA4ADMAOAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAA4VKrqZobTECpX98c5NH6BwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERYQgHBBI5
CAgdBQQgABJxBCABDggCBg4DIAACAyAACQQAAQgJBiACHQUICAQAABJ9BSABDh0FCSADARJBHQgS
RQMGEkEDBh0IBCABCAgEIAECCAQgARwIBSACAQgcByACAg4RgIUFIAEdCAgIAAESgIkRgI0FIAAS
gJEHIAIBDhKAkQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSTQMGElkDBhJdAwYSIAUgAQES
DAMgAAgEIAASSQQgAQECCSAEAQgOEkESRQUgAQESTQQAABJZBAAAEl0FAAEBEl0EAAASIAMAAAED
KAAIAygAAgQoABJJAygADgQIABJZBAgAEl0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNDRlYTA3ZDFkODYyNDIyYzg2NDFlZDA2MjA2
NDY4MzgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAA
AAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAADwNgAAAAAAAAAAAAAKNwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
/DYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8ANAA0AGUAYQAwADcAZAAxAGQAOAA2ADIANAAyADIAYwA4ADYANAAxAGUAZAAwADYAMgAw
ADYANAA2ADgAMwA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAzADQAMABCADMAMgBF
ADEAOQBGADkANwA0ADcAOAA5AEEANAAzADEAQwA4ADQAOQA1ADkAOAAyAEYAQQBBADQALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADMANAAw
AEIAMwAyAEUAMQA5AEYAOQA3ADQANwA4ADkAQQA0ADMAMQBDADgANAA5ADUAOQA4ADIARgBBAEEA
NAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA0ADQAZQBh
ADAANwBkADEAZAA4ADYAMgA0ADIAMgBjADgANgA0ADEAZQBkADAANgAyADAANgA0ADYAOAAzADgA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABw3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_340b32e19f974789a431c8495982faa4</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">27</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Extract payment data\Generate error info.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract payment data\Generate error info.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Extract payment data\Generate error info.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Extract payment data\Generate error info.Inputs[Input 0].Columns[Flat File Source Error Output Column]"
                      cachedCodepage="65001"
                      cachedDataType="text"
                      cachedName="Flat File Source Error Output Column"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract payment data\Generate error info.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Extract payment data\Generate error info.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract payment data\Generate error info.Outputs[Output 0].Columns[ColumnName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract payment data\Generate error info.Outputs[Output 0].Columns[ColumnName]"
                      name="ColumnName" />
                    <outputColumn
                      refId="Package\Extract payment data\Generate error info.Outputs[Output 0].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract payment data\Generate error info.Outputs[Output 0].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                    <outputColumn
                      refId="Package\Extract payment data\Generate error info.Outputs[Output 0].Columns[FaultyRow]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Extract payment data\Generate error info.Outputs[Output 0].Columns[FaultyRow]"
                      name="FaultyRow" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract payment data\Generate source row number"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Generate source row number"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    private int _sourceRowNumber;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        _sourceRowNumber = 1;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.SourceRowNumber = _sourceRowNumber++;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 SourceRowNumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool SourceRowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0295cf8eb2ea45c182237331078e7066.Properties.Settings.get_Default():SC_0295cf8eb2ea45c182237331078e7066.Properties.Sett" +
    "ings")]

namespace SC_0295cf8eb2ea45c182237331078e7066.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0295cf8eb2ea45c182237331078e7066.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1f8f324c-d3c0-4dd3-93c2-d53f2384b948}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0295cf8eb2ea45c182237331078e7066</RootNamespace>
    <AssemblyName>SC_0295cf8eb2ea45c182237331078e7066</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_0295cf8eb2ea45c182237331078e7066" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_0295cf8eb2ea45c182237331078e7066</msb:CodeName>
    <msb:DisplayName>SC_0295cf8eb2ea45c182237331078e7066</msb:DisplayName>
    <msb:ProjectId>{394EE88B-0EE7-44B2-B2CF-5445A30C46B9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_0295cf8eb2ea45c182237331078e7066.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0295cf8eb2ea45c182237331078e7066")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0295cf8eb2ea45c182237331078e7066")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0295cf8eb2ea45c182237331078e7066.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0295cf8eb2ea45c182237331078e7066.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0295cf8eb2ea45c182237331078e7066.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0295cf8eb2ea45c182237331078e7066.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0295cf8eb2ea45c182237331078e7066.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0295cf8eb2ea45c182237331078e7066.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAO7WtGAAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAASjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPgwAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAUBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAs
MQAAAAAAAEgAAAACAAUArCEAAJQOAAABAAAAAAAAAEAwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADoCKBAAAAoCF30BAAAEKh4CKBEAAAoqABMwBAAYAAAAAQAA
EQMCAnsBAAAECgYXWH0BAAAEBm8GAAAGKh4CKAoAAAYqKgIDBAUoEgAACio6AhYDjBoAAAEoEwAA
CipaAywIAhYoFAAACipyAQAAcHMVAAAKeh4CKBYAAAoqHgIoFwAACip+AigYAAAKAgJzDgAABn0C
AAAEAgJzDwAABn0DAAAEKpIEcp4AAHAabxkAAAosFQIFAgMoGgAACg4EcwUAAAZvDAAABipKKwcC
A28NAAAGA28IAAAGLfEqBio6AigbAAAKAgN9BAAABCo6AigbAAAKAgN9BQAABCoeAigbAAAKKq5+
BgAABC0ecq4AAHDQBwAAAigcAAAKbx0AAApzHgAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQq
Gn4IAAAEKh4CKB8AAAoqLnMVAAAGgAgAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAA
AAUAbAAAACwFAAAjfgAAmAUAADgGAAAjU3RyaW5ncwAAAADQCwAAIAEAACNVUwDwDAAAEAAAACNH
VUlEAAAAAA0AAJQBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAgAAAACAAA
AAgAAAAWAAAADwAAAB8AAAAQAAAAAQAAAAMAAAAFAAAABgAAAAEAAAAEAAAAAQAAAAAA8AIBAAAA
AAAGAOoBbwQGAH4CbwQGADYBXAQPAOMEAAAGAGMBjAMGAM0BjAMGAK4BjAMGAGUCjAMGAAoCjAMG
ACMCjAMGAHoBjAMGAJUBuQIKAD4CgwAKAC4EgwAOAB8EgwAKANUDgwAKAKkFgwAGAGwFRAMGABkB
XAQGAD8EjwQGAMkDdwMSAOkA2gISAEoB2gISANEAYgMGAP4AbwQGAAEARAMGAJ4DRAMGANMCRAMG
ALgDRAMGAKQARAMGAFUARAMGAC4GjAMAAAAAKwAAAAAAAQABAAEAEABXAwAAEAABAAEAAQAQABIE
AAA5AAIABQABABAAiwUAAEUAAgAKAAEAEABgBQAASQAEAA4AAQAQACEFAABJAAUADwAAABAAlgTy
BEkABgAQAAABEABQBfIEYQAIABQAAQABBGcABgBgBWoABgAhBW4AAQCZBXIAAQCZBXIAEQBLA3YA
EQDBAHoAEQBFAH4AUCAAAAAAxgCcAgYAAQBfIAAAAADGAKcCBgABAGggAAAAAMYACwaCAAEAjCAA
AAAAhhhPBAYAAgCUIAAAAACGGE8EHwACAJ8gAAAAAIYI7QMBAAUAriAAAAAAhggYA4gABgDFIAAA
AACGACIGLwAHAM0gAAAAAIYAcwUvAAcA1SAAAAAAhhhPBAYABwD1IAAAAADGAP4FjQAHABohAAAA
AMYB9wWCAAsALSEAAAAAxgELBoIADAAvIQAAAACGGE8ElwANAD4hAAAAAIYYTwSXAA4ATSEAAAAA
gxhPBAYADwBVIQAAAACTCDsEnQAPAIEhAAAAAJMIqQCiAA8AiCEAAAAAkwi1AKcADwCQIQAAAACW
CH8FrQAQAJchAAAAAIYYTwQGABAAnyEAAAAAkRhVBLIAEAAAAAEAJgYAAAEANAQAAAIAKwUAAAMA
4wMAAAEAswIAAAEAswIAAAEANAAAAAIAeQAAAAMANAQAAAQA4wMAAAEANAQAAAEAJgYAAAEArwUA
AAEArwUAAAEAswIJAE8EAQARAE8EBgAZAE8ECgApAE8EEAAxAE8EEAA5AE8EEABBAE8EEABJAE8E
EABRAE8EEABZAE8EEABhAE8EEABpAE8EBgCZAE8EBgC5AE8EFQDJAE8EBgCJAJwCBgCJAKcCBgBx
AE8EHwBxADsDKQBxADMDAQDZAE8EEABxACIGLwBxAHMFLwCJAE8EBgDhAFkFMwCJAD8FOgCRAE8E
BgDxAGcAQADxACoGRwChAE8ETQDBAE8EBgAuAAsAzQAuABMA1gAuABsA9QAuACMA/gAuACsAJwEu
ADMAJwEuADsAJwEuAEMA/gAuAEsALQEuAFMAJwEuAFsARAFDAGMAjgFpAHMA9QCJAHMA9QDjAGsA
jgEBAXsAjgEbAAMAAQAHAAMACAAFAAAA8QO2AAAAHAO6AAAAPwS+AAAAyQDDAAAAgwXIAAEABgAD
AAEABwAFAAIAEQAHAAIAEgAJAAEAEwAJAAIAFAALAASAAAABAAAAAAAAAAAAAAAAAAcAAAAEAAAA
AAAAAAAAAABVADwAAAAAAA8AAAAAAAAAAAAAAF4AuQUAAAAADwAAAAAAAAAAAAAAXgDWBQAAAAAE
AAAAAAAAAAAAAABVAEQDAAAAAAAAAAABAAAAoAQAAAAAAAAASW50MzIAU0NfMDI5NWNmOGViMmVh
NDVjMTgyMjM3MzMxMDc4ZTcwNjYAPE1vZHVsZT4ASW5wdXRJRABtc2NvcmxpYgBkZWZhdWx0SW5z
dGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
cmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp
b25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1
Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVu
dEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzAyOTVjZjhl
YjJlYTQ1YzE4MjIzNzMzMTA3OGU3MDY2LmRsbABzZXRfU291cmNlUm93TnVtYmVyX0lzTnVsbABT
ZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRP
cGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1l
TWFwAE91dHB1dE1hcABzZXRfU291cmNlUm93TnVtYmVyAF9zb3VyY2VSb3dOdW1iZXIASW5wdXQw
QnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5j
dG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzAyOTVjZjhlYjJlYTQ1YzE4MjIzNzMzMTA3OGU3MDY2
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18wMjk1Y2Y4
ZWIyZWE0NWMxODIyMzczMzEwNzhlNzA2Ni5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1
bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAE9i
amVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVu
dABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQu
U3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNz
SW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABl
AHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAA
QQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAg
AGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwAwADIAOQA1AGMAZgA4AGUA
YgAyAGUAYQA0ADUAYwAxADgAMgAyADMANwAzADMAMQAwADcAOABlADcAMAA2ADYALgBQAHIAbwBw
AGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAABmXXGeeh2VMnnn6Nt3TEXgABCABAQgD
IAABBSABARERBCABAQ4FIAEBEVkDBwEICSADARI9HQgSQQUgAgEIHAMgAAIGIAICDhF1BSABHQgI
BgABEnkRfQUgABKAgQcgAgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRAgYIAwYSFAMGEhgDBhJFAwYS
UQMGElUDBhIgBSABARIMBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIg
AwAAAQMoAAgDKAACBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18wMjk1Y2Y4ZWIyZWE0NWMxODIyMzczMzEwNzhlNzA2
NgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAAAgMQAAAAAAAAAAAAA6MQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALDEAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AMAAyADkANQBjAGYAOABlAGIAMgBlAGEANAA1AGMAMQA4ADIAMgAzADcAMwAzADEA
MAA3ADgAZQA3ADAANgA2AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAwADIAOQA1AGMA
ZgA4AGUAYgAyAGUAYQA0ADUAYwAxADgAMgAyADMANwAzADMAMQAwADcAOABlADcAMAA2ADYALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADAA
MgA5ADUAYwBmADgAZQBiADIAZQBhADQANQBjADEAOAAyADIAMwA3ADMAMwAxADAANwA4AGUANwAw
ADYANgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAwADIA
OQA1AGMAZgA4AGUAYgAyAGUAYQA0ADUAYwAxADgAMgAyADMANwAzADMAMQAwADcAOABlADcAMAA2
ADYAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAEwxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_0295cf8eb2ea45c182237331078e7066</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">CA</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Extract payment data\Generate source row number.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract payment data\Generate source row number.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Extract payment data\Generate source row number.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract payment data\Generate source row number.Outputs[Output 0].Columns[SourceRowNumber]"
                      dataType="i4"
                      lineageId="Package\Extract payment data\Generate source row number.Outputs[Output 0].Columns[SourceRowNumber]"
                      name="SourceRowNumber" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract payment data\Get payment data from dataset"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Get payment data from dataset"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract payment data\Get payment data from dataset.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Payments]"
                  connectionManagerRefId="Package.ConnectionManagers[Payments]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[RecordId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD ID]"
                      length="50"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[RecordId]"
                      name="RecordId"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME]"
                      length="300"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME2]"
                      length="100"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[INDUSTRY]"
                      length="50"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE SEQUENCE ID]"
                      length="50"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE TYPE]"
                      length="50"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeType]"
                      name="FeeType"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE DESCRIPTION]"
                      length="100"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[RecordType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD DYPE]"
                      length="50"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[RecordType]"
                      name="RecordType"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[PaymentAmount]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[PAYMENT AMOUNT]"
                      length="50"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[TransactionType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[TRANSACTION TYPE]"
                      length="50"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[TransactionType]"
                      name="TransactionType"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[PaymentDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[PAYMENT DATE]"
                      length="50"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[PaymentDate]"
                      name="PaymentDate"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD ID]"
                      dataType="wstr"
                      length="50"
                      name="RECORD ID" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME]"
                      dataType="wstr"
                      length="300"
                      name="BUSINESS NAME" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME2]"
                      dataType="wstr"
                      length="100"
                      name="BUSINESS NAME2" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[INDUSTRY]"
                      dataType="wstr"
                      length="50"
                      name="INDUSTRY" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE SEQUENCE ID]"
                      dataType="wstr"
                      length="50"
                      name="FEE SEQUENCE ID" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE TYPE]"
                      dataType="wstr"
                      length="50"
                      name="FEE TYPE" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE DESCRIPTION]"
                      dataType="wstr"
                      length="100"
                      name="FEE DESCRIPTION" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD DYPE]"
                      dataType="wstr"
                      length="50"
                      name="RECORD DYPE" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[PAYMENT AMOUNT]"
                      dataType="wstr"
                      length="50"
                      name="PAYMENT AMOUNT" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[TRANSACTION TYPE]"
                      dataType="wstr"
                      length="50"
                      name="TRANSACTION TYPE" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[PAYMENT DATE]"
                      dataType="wstr"
                      length="50"
                      name="PAYMENT DATE" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="65001"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract payment data\Insert error info to DataExtractionErrors table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert error info to DataExtractionErrors table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWLOG].[DataExtractionErrors]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[SessionId]"
                      cachedDataType="guid"
                      cachedName="SessionId"
                      externalMetadataColumnId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                      lineageId="Package\Extract payment data\Derive error info.Outputs[Derived Column Output].Columns[SessionId]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[Dataset]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Dataset"
                      externalMetadataColumnId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[Dataset]"
                      lineageId="Package\Extract payment data\Derive error info.Outputs[Derived Column Output].Columns[Dataset]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      externalMetadataColumnId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      lineageId="Package\Extract payment data\Derive error info.Outputs[Derived Column Output].Columns[Timestamp]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[ColumnName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ColumnName"
                      externalMetadataColumnId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnName]"
                      lineageId="Package\Extract payment data\Generate error info.Outputs[Output 0].Columns[ColumnName]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[ErrorDescription]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorDescription"
                      externalMetadataColumnId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                      lineageId="Package\Extract payment data\Generate error info.Outputs[Output 0].Columns[ErrorDescription]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].Columns[FaultyRow]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="FaultyRow"
                      externalMetadataColumnId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[FaultyRow]"
                      lineageId="Package\Extract payment data\Generate error info.Outputs[Output 0].Columns[FaultyRow]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                      dataType="guid"
                      name="SessionId" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[Dataset]"
                      dataType="wstr"
                      length="20"
                      name="Dataset" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[FaultyRow]"
                      dataType="wstr"
                      length="4000"
                      name="FaultyRow" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ColumnName]"
                      dataType="wstr"
                      length="255"
                      name="ColumnName" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                      dataType="wstr"
                      length="255"
                      name="ErrorDescription" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      dataType="dbTimeStamp2"
                      name="Timestamp"
                      scale="7" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract payment data\Insert raw payment data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert raw payment data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[PaymentExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract payment data\Insert raw payment data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[RecordId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordId"
                      externalMetadataColumnId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordId]"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[RecordId]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      externalMetadataColumnId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      externalMetadataColumnId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      externalMetadataColumnId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      externalMetadataColumnId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      externalMetadataColumnId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      externalMetadataColumnId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      externalMetadataColumnId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[PaymentAmount]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      externalMetadataColumnId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[TransactionType]"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[TransactionType]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[PaymentDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentDate"
                      externalMetadataColumnId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentDate]"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[PaymentDate]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      externalMetadataColumnId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[SourceRowNumber]"
                      cachedDataType="i4"
                      cachedName="SourceRowNumber"
                      externalMetadataColumnId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[SourceRowNumber]"
                      lineageId="Package\Extract payment data\Generate source row number.Outputs[Output 0].Columns[SourceRowNumber]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordId]"
                      dataType="wstr"
                      length="50"
                      name="RecordId" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                      dataType="wstr"
                      length="50"
                      name="PaymentAmount" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentDate]"
                      dataType="wstr"
                      length="50"
                      name="PaymentDate" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[SourceRowNumber]"
                      dataType="i4"
                      name="SourceRowNumber" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract payment data\Insert raw payment data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract payment data\Insert raw payment data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract payment data\Insert raw payment data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract payment data\Insert raw payment data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Extract payment data.Paths[Derived Column Output]"
              endId="Package\Extract payment data\Generate error info.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Extract payment data\Derive error info.Outputs[Derived Column Output]" />
            <path
              refId="Package\Extract payment data.Paths[Flat File Source Error Output]"
              endId="Package\Extract payment data\Derive error info.Inputs[Derived Column Input]"
              name="Flat File Source Error Output"
              startId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Error Output]" />
            <path
              refId="Package\Extract payment data.Paths[Flat File Source Output]"
              endId="Package\Extract payment data\Generate source row number.Inputs[Input 0]"
              name="Flat File Source Output"
              startId="Package\Extract payment data\Get payment data from dataset.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Extract payment data.Paths[Output 0]"
              endId="Package\Extract payment data\Insert raw payment data to database.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Extract payment data\Generate source row number.Outputs[Output 0]" />
            <path
              refId="Package\Extract payment data.Paths[Output 01]"
              endId="Package\Extract payment data\Insert error info to DataExtractionErrors table.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Extract payment data\Generate error info.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Finish session"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3B1CCA6D-1E06-4CFF-A332-260FD0246962}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Finish session"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2AE594AF-1E0E-4046-88A5-B26D8D809332}"
          SQLTask:SqlStatementSource="UPDATE [DWLOG].[Sessions]&#xA;SET [EndTime] = GETUTCDATE()&#xA;WHERE [SessionId] = ?;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::SessionId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="72"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Generate session ID"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{331C8BC7-BE8C-4339-8D9F-EEAADACC8395}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate session ID"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_3633590dbcb14ea4b9c92d42c9ff8c13"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::SessionId">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_3633590dbcb14ea4b9c92d42c9ff8c13
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	  [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	  public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	  {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */
        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

		    /// <summary>
            /// This method is called when this script task executes in the control flow.
            /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
            /// To open Help, press F1.
            /// </summary>
		    public void Main()
        {
            Dts.Variables["User::SessionId"].Value = Guid.NewGuid().ToString();

			      Dts.TaskResult = (int)ScriptResults.Success;
		    }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	  }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_3633590dbcb14ea4b9c92d42c9ff8c13</msb:CodeName>
    <msb:DisplayName>ST_3633590dbcb14ea4b9c92d42c9ff8c13</msb:DisplayName>
    <msb:ProjectId>{8863A103-6E61-4724-B684-41D59B7768E8}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_3633590dbcb14ea4b9c92d42c9ff8c13.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3633590dbcb14ea4b9c92d42c9ff8c13.Properties.Settings.get_Default():ST_3633590dbcb14ea4b9c92d42c9ff8c13.Properties.Sett" +
    "ings")]

namespace ST_3633590dbcb14ea4b9c92d42c9ff8c13.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_3633590dbcb14ea4b9c92d42c9ff8c13.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6ecdbead-5343-4351-9b47-bcf95f3f0f87}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_3633590dbcb14ea4b9c92d42c9ff8c13</RootNamespace>
    <AssemblyName>ST_3633590dbcb14ea4b9c92d42c9ff8c13</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_3633590dbcb14ea4b9c92d42c9ff8c13")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_3633590dbcb14ea4b9c92d42c9ff8c13")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3633590dbcb14ea4b9c92d42c9ff8c13.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3633590dbcb14ea4b9c92d42c9ff8c13.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3633590dbcb14ea4b9c92d42c9ff8c13.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_3633590dbcb14ea4b9c92d42c9ff8c13.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_3633590dbcb14ea4b9c92d42c9ff8c13.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_3633590dbcb14ea4b9c92d42c9ff8c13.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADqnuGAAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAri0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFwtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
LQAAAAAAAEgAAAACAAUA/CAAAKgLAAABAAAAAAAAAKQsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgA6AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACigT
AAAKChIA/hYPAAABbxQAAApvFQAACgIoEAAAChZvFgAACioeAigXAAAKKh4CKBgAAAoqrn4BAAAE
LR5yIQAAcNADAAACKBkAAApvGgAACnMbAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMA
AAQqHgIoHAAACioucwgAAAaAAwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADIAwAAI34AADQEAABkBQAAI1N0cmluZ3MAAAAAmAkAAJQAAAAjVVMALAoAABAAAAAjR1VJRAAA
ADwKAABsAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAHgAAAAUAAAAGAAAA
CQAAAAEAAAAcAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAfQMB
AAAAAAAGAC0CTQQGALwCTQQGAHkBOgQPAMEEAAAGAKYB+wMGABAC+wMGAPEB+wMGAKMC+wMGAE0C
+wMGAGYC+wMGAL0B+wMGANgB6gIKAIECLAMKAPgALAMGAGEArgMGALUDrgMGAFwBOgQGADQFrgMG
AB0EbQQGAA0E5gMOACwBZwMOAI0BZwMOABQB0QMGAEEBTQQKAFUDLAMSAAMFowASAHYAowAGAMMA
rgMGAH8ArgMGAFoF+wMAAAAAJQAAAAAAAQABAAEAEADGAwEAOQABAAEAAAAQAHQE0ARJAAEAAwAA
ARAADQXQBF0AAwAHAAMBAAAmBQAAQQAEAAoAEQC6A20AEQDoAHEAEQBmAHUABgZNAHkAVoAWBXwA
VoDIAHwAUCAAAAAAhgDMAwYAAQCWIAAAAACGGC0EBgABAJ4gAAAAAIMYLQQGAAEApiAAAAAAkwgZ
BIAAAQDSIAAAAACTCNAAhQABANkgAAAAAJMI3ACKAAEA4SAAAAAAlgg7BZAAAgDoIAAAAACGGC0E
BgACAPAgAAAAAJEYMwSVAAIAAAABAOQCCQAtBAEAEQAtBAYAGQAtBAoAKQAtBBAAMQAtBBAAOQAt
BBAAQQAtBBAASQAtBBAAUQAtBBAAWQAtBBAAYQAtBBAAaQAtBAYAiQAtBAYAsQAtBBUAwQAtBAYA
cQAeBSAAyQD/BCUA0QClAyoAeQBeADAAkQAEAzUA2QDaAjkAyQBHBQEAcQAtBAYAkQAtBAYA4QCR
AD4A4QBWBUUAmQAtBEoAuQAtBAYACAAUAGMACAAYAGgAKQBzANAALgALAKgALgATALEALgAbANAA
LgAjANkALgArAAIBLgAzAAIBLgA7AAIBLgBDANkALgBLAAgBLgBTAAIBLgBbAB8BQwBjAGgASQBz
ANAAYQB7AGgAYwBrAGgAGwADAAEABAADAAAAHQSZAAAA8ACeAAAAPwWjAAIABAADAAIABQAFAAEA
BgAFAAIABwAHAASAAAABAAAAkB7tUwAAAAAAAAEAAAAEAAAAAAAAAAAAAABRAFUAAAAAAA8AAAAA
AAAAAAAAAFoADQMAAAAABAAAAAAAAAAAAAAAUQCuAwAAAAAPAAAAAAAAAAAAAABaAC4AAAAAAAAA
AAABAAAAfgQAAAUAAgAAAABTVF8zNjMzNTkwZGJjYjE0ZWE0YjljOTJkNDJjOWZmOGMxMwA8TW9k
dWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBOZXdH
dWlkAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBzZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBN
aWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFz
a3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1Rf
MzYzMzU5MGRiY2IxNGVhNGI5YzkyZDQyYzlmZjhjMTMuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVt
AHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdl
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF8zNjMzNTkwZGJjYjE0ZWE0YjljOTJkNDJjOWZm
OGMxMy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMzYz
MzU5MGRiY2IxNGVhNGI5YzkyZDQyYzlmZjhjMTMuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNl
dHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABnZXRfRGVmYXVsdABz
ZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1ibHkAAAAfVQBzAGUAcgA6ADoAUwBlAHMAcwBpAG8AbgBJ
AGQAAHFTAFQAXwAzADYAMwAzADUAOQAwAGQAYgBjAGIAMQA0AGUAYQA0AGIAOQBjADkAMgBkADQA
MgBjADkAZgBmADgAYwAxADMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAAADKpLEF/pVSTq+wjXm03iS0AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFVBAcBET0EIAAS
ZQQgABJpBSABEm0cBAAAET0DIAAOBCABARwGAAEScRF1BCAAEnkGIAIBDhJ5CLd6XFYZNOCJCImE
Xc2AgMyRBAAAAAAEAQAAAAMGEk0DBhJRAwYSEAIGCAMGERQEAAASTQQAABJRBQABARJRBAAAEhAD
AAABBAgAEk0ECAASUQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dz
AQgBAAIAAAAAACgBACNTVF8zNjMzNTkwZGJjYjE0ZWE0YjljOTJkNDJjOWZmOGMxMwAABQEAAAAA
FgEAEUNvcHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQO
FEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAAALQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACE
LQAAAAAAAAAAAACeLQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkC0AAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEA7VOQHgAAAQDtU5AePwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwAzADYAMwAzADUAOQAwAGQAYgBjAGIAMQA0AGUAYQA0AGIAOQBjADkAMgBkADQA
MgBjADkAZgBmADgAYwAxADMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANwA4ADIANAAuADIAMQA0ADgANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwAzADYAMwAzADUAOQAwAGQAYgBjAGIAMQA0AGUAYQA0AGIAOQBjADkAMgBkADQAMgBj
ADkAZgBmADgAYwAxADMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADMANgAzADMANQA5ADAAZABiAGMAYgAxADQAZQBhADQAYgA5AGMAOQAy
AGQANAAyAGMAOQBmAGYAOABjADEAMwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwAzADYAMwAzADUAOQAwAGQAYgBjAGIAMQA0AGUAYQA0AGIAOQBjADkAMgBk
ADQAMgBjADkAZgBmADgAYwAxADMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADcAOAAyADQALgAyADEANAA4ADUAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAOAAyADQALgAyADEANAA4ADUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAsD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Normalize selected data in FeeExtract table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{fc0f7506-69ff-4eac-b814-f3583ab82ae8}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Normalize selected data in FeeExtract table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2AE594AF-1E0E-4046-88A5-B26D8D809332}"
          SQLTask:SqlStatementSource="UPDATE [DWSTAGE].[FeeExtract]&#xA;SET [RecordType] = CASE WHEN TRIM([RecordType]) = '' THEN '(no data)' ELSE [DW].[NORMALIZE]([RecordType]) END,&#xA;    [BusinessName] = CASE WHEN TRIM([BusinessName]) = '' THEN '(no data)' ELSE [DW].[NORMALIZE]([BusinessName]) END,&#xA;    [BusinessName2] = [DW].[NORMALIZE]([BusinessName2]),&#xA;    [FeeType] = CASE WHEN TRIM([FeeType]) = '' THEN '(no data)' ELSE [DW].[NORMALIZE]([FeeType]) END,&#xA;    [Industry] = CASE WHEN TRIM([Industry]) = '' THEN '(no data)' ELSE [DW].[NORMALIZE]([Industry]) END,&#xA;    [FeeDescription] = CASE WHEN TRIM([FeeDescription]) = '' THEN '(no data)' ELSE [DW].[NORMALIZE]([FeeDescription]) END;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Normalize selected data in LicenseExtract table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C1B7B728-BAAD-4D58-91BE-205458DE6B6D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Normalize selected data in LicenseExtract table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2AE594AF-1E0E-4046-88A5-B26D8D809332}"
          SQLTask:SqlStatementSource="UPDATE [DWSTAGE].[LicenseExtract]&#xA;SET [BusinessName] = CASE WHEN TRIM([BusinessName]) = '' THEN '(no data)' ELSE [DW].[NORMALIZE]([BusinessName]) END,&#xA;    [BusinessName2] = [DW].[NORMALIZE]([BusinessName2]),&#xA;    [Industry] = CASE WHEN TRIM([Industry]) = '' THEN '(no data)' ELSE [DW].[NORMALIZE]([Industry]) END;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Normalize selected data in PaymentExtract table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{11d4abbb-696a-4b69-8027-51b4f53efc61}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Normalize selected data in PaymentExtract table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2AE594AF-1E0E-4046-88A5-B26D8D809332}"
          SQLTask:SqlStatementSource="UPDATE [DWSTAGE].[PaymentExtract]&#xA;SET [TransactionType] = CASE WHEN TRIM([TransactionType]) = '' THEN '(no data)' ELSE [DW].[NORMALIZE]([TransactionType]) END;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Stage fee data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{766000EB-ACA2-49CF-BEC7-8DC6D372E31F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Stage fee data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Stage fee data\Get selected columns from extracted fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get selected columns from extracted fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage fee data\Get selected columns from extracted fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      length="50"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      name="RecordType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      length="50"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      length="50"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      name="FeeType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      length="100"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      length="50"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      length="50"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]"
                      name="FeeDate"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[SourceRowNumber]"
                      dataType="i4"
                      name="SourceRowNumber" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordId]"
                      dataType="wstr"
                      length="50"
                      name="RecordId" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      dataType="wstr"
                      length="50"
                      name="FeeAmount" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      dataType="wstr"
                      length="50"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeStatus]"
                      dataType="wstr"
                      length="50"
                      name="FeeStatus" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      name="RecordType" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      name="FeeType" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      name="FeeDescription" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeAmount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeAmount]"
                      name="FeeAmount" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeDate]"
                      name="FeeDate" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage fee data\Handle dates and numbers"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Handle dates and numbers"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_27e77ddb16a048e7a04d05257695155a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_27e77ddb16a048e7a04d05257695155a")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Globalization;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

  /// <summary>
  /// This method is called once for every row that passes through the component from Input0.
  ///
  /// Example of reading a value from a column in the the row:
  ///  string zipCode = Row.ZipCode
  ///
  /// Example of writing a value to a column in the row:
  ///  Row.ZipCode = zipCode
  /// </summary>
  /// <param name="Row">The row that is currently passing through the component</param>
  public override void Input0_ProcessInputRow(Input0Buffer Row)
  {
    var feeAmountValid = decimal.TryParse(Row.FeeAmount, out var feeAmountParsed);

    if (feeAmountValid)
    {
      Row.FeeAmountParsed = feeAmountParsed;
    }
    else
    {
      Row.FeeAmountParsed_IsNull = true;
    }

    var feeDateValid = DateTime.TryParseExact(Row.FeeDate, "MM/dd/yyyy", CultureInfo.InvariantCulture, DateTimeStyles.None, out var feeDateParsed);

    if (feeDateValid)
    {
      Row.FeeDateParsed = feeDateParsed;
    }
    else
    {
      Row.FeeDateParsed_IsNull = true;
    }
  }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FeeAmount
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool FeeAmount_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String FeeDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool FeeDate_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public DateTime FeeDateParsed
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FeeDateParsed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal FeeAmountParsed
    {
        set
        {
            this[3] = value;
        }
    }
    public bool FeeAmountParsed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_27e77ddb16a048e7a04d05257695155a.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6eea526e-e90c-4e4d-b1b4-eff4e78faabc}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_27e77ddb16a048e7a04d05257695155a</RootNamespace>
    <AssemblyName>SC_27e77ddb16a048e7a04d05257695155a</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_27e77ddb16a048e7a04d05257695155a" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_27e77ddb16a048e7a04d05257695155a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_27e77ddb16a048e7a04d05257695155a</msb:DisplayName>
    <msb:ProjectId>{9944C64E-DA91-48FE-80A7-89BAA900E8E2}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_27e77ddb16a048e7a04d05257695155a.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_27e77ddb16a048e7a04d05257695155a.Properties.Settings.get_Default():SC_27e77ddb16a048e7a04d05257695155a.Properties.Sett" +
    "ings")]

namespace SC_27e77ddb16a048e7a04d05257695155a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_27e77ddb16a048e7a04d05257695155a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_27e77ddb16a048e7a04d05257695155a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_27e77ddb16a048e7a04d05257695155a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_27e77ddb16a048e7a04d05257695155a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_27e77ddb16a048e7a04d05257695155a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_27e77ddb16a048e7a04d05257695155a.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAJFuWAAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAwjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHAzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAyBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACk
MwAAAAAAAEgAAAACAAUAOCIAAIAQAAABAAAAAAAAALgyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAUASQAAAAEAABEDbwYAAAYS
ACgSAAAKLAkDBm8MAAAGKwcDF28NAAAGA28IAAAGcgEAAHAoEwAAChYSASgUAAAKLAgDB28KAAAG
KgMXbwsAAAYqHgIoEAAABioqAgMEBSgVAAAKKlICexYAAAoCexcAAAoWlG8YAAAKKiICFigZAAAK
KlICexYAAAoCexcAAAoXlG8YAAAKKiICFygZAAAKKjoCGAOMDwAAASgaAAAKKloDLAgCGCgbAAAK
KnIXAABwcxwAAAp6OgIZA4wOAAABKBoAAAoqWgMsCAIZKBsAAAoqchcAAHBzHAAACnoeAigdAAAK
Kh4CKB4AAAoqfgIoHwAACgICcxQAAAZ9AQAABAICcxUAAAZ9AgAABCqSBHK0AABwGm8gAAAKLBUC
BQIDKCEAAAoOBHMFAAAGbxIAAAYqSisHAgNvEwAABgNvDgAABi3xKgYqOgIoIgAACgIDfQMAAAQq
OgIoIgAACgIDfQQAAAQqHgIoIgAACiqufgUAAAQtHnLEAABw0AcAAAIoIwAACm8kAAAKcyUAAAqA
BQAABH4FAAAEKhp+BgAABCoeAoAGAAAEKhp+BwAABCoeAigmAAAKKi5zGwAABoAHAAAEKgAAQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAACAYAACN+AAB0BgAA7AYAACNTdHJpbmdz
AAAAAGANAAA4AQAAI1VTAJgOAAAQAAAAI0dVSUQAAACoDgAA2AEAACNCbG9iAAAAAAAAAAIAAAFX
FaIBCQEAAAD6ATMAFgAAAQAAACMAAAAIAAAABwAAABwAAAARAAAAJgAAABAAAAABAAAAAwAAAAsA
AAAMAAAAAQAAAAQAAAABAAAAAABOAwEAAAAAAAYAPQL5BAYA0QL5BAYAiQHmBA8AbQUAAAYAtgEr
BAYAIAIrBAYAAQIrBAYAuAIrBAYAXQIrBAYAdgIrBAYAzQErBAYA6AEMAwoAkQKsAAYAMAPjAwYA
owDjAwoAuASsAA4AqQSsAAoAdASsAAoAUAasAAYAEwbjAwYAbAHmBAYAyQQZBQYAaAQWBBIAPAE4
AxIAnQE4AxIADwEBBAYAUQH5BAYAjATjAwYAtQUWBAYAPQTjAwYAKQPjAwYAVwTjAwYAzQDjAwYA
dQDjAwYA4wYrBAAAAAABAAAAAAABAAEAAQAQAPYDAAAQAAEAAQABABAAnAQAAEEAAQAFAAEAEAAy
BgAATQABABAAAQAQAPkFAABRAAMAFAABABAAqwUAAFEABAAVAAAAEAAgBXwFUQAFABYAAAEQAOkF
fAVpAAcAGgAGAPkFmQAGAKsFnQABAEAGoQABAEAGoQARAOoDpQARAOoAqQARAGUArQBQIAAAAADG
AO8CBgABAFggAAAAAMYA+gIGAAEAYCAAAAAAxgDABrEAAQC1IAAAAACGGNkEBgACAL0gAAAAAIYY
2QQ8AAIAyCAAAAAAhghgBrcABQDdIAAAAACGCL0DXgAFAOYgAAAAAIYIMAG3AAUA+yAAAAAAhgiq
A14ABQAEIQAAAACGCD8AuwAFABMhAAAAAIYIdgPBAAYAKiEAAAAAhghRAMYABwA5IQAAAACGCI8D
wQAIAFAhAAAAAIYA1wZeAAkAWCEAAAAAhgAaBl4ACQBgIQAAAACGGNkEBgAJAIAhAAAAAMYAswbM
AAkApSEAAAAAxgGsBrEADQC4IQAAAADGAcAGsQAOALohAAAAAIYY2QTWAA8AySEAAAAAhhjZBNYA
EADYIQAAAACDGNkEBgARAOAhAAAAAJMIxQTcABEADCIAAAAAkwjSACoAEQATIgAAAACTCN4A4QAR
ABsiAAAAAJYIJgbnABIAIiIAAAAAhhjZBAYAEgAqIgAAAACRGN8E7AASAAAAAQDbBgAAAQC+BAAA
AgDEBQAAAwCCBAAAAQAGAwAAAQAGAwAAAQAGAwAAAQAGAwAAAQAKAAAAAgCZAAAAAwC+BAAABACC
BAAAAQC+BAAAAQDbBgAAAQBWBgAAAQBWBgAAAQAGAwkA2QQBABEA2QQGABkA2QQKACkA2QQQADEA
2QQQADkA2QQQAEEA2QQQAEkA2QQQAFEA2QQQAFkA2QQQAGEA2QQQAGkA2QQGAKkA2QQGAMkA2QQV
ANkA2QQGAJkA7wIGAJkA+gIGAHEAJwEiALkA+gAqAHkABQYvAIEA2QQ8AIEAvgRGAIEAxAVKAIkA
JgNOAIEAywNTAIEA2gNYAIEA0gMBAPEA2QQQAIEA1wZeAIEAGgZeAJkA2QQGAPkA8gViAJkA2AVq
AKEA2QQGAAkBhwBwAAkB3wZ5ALEA2QR/ANEA2QQGAC4ACwARAS4AEwAaAS4AGwA5AS4AIwBCAS4A
KwBrAS4AMwBrAS4AOwBrAS4AQwBCAS4ASwBxAS4AUwBrAS4AWwCIAUMAYwDSAeEAewDSAeMAawDS
ASkBcwA5AUkBcwA5ARsAAwABAAcACQAIAAsAAABkBvAAAADBA/QAAAA0AfAAAACuA/QAAABDAPgA
AAB6A/QAAABVAP0AAACTA/QAAADJBAIBAAAHAQcBAAAqBgwBAgAGAAMAAgAHAAUAAgAIAAcAAgAJ
AAkAAQAKAAsAAQALAA0AAQAMAA8AAQANABEAAgAXABMAAgAYABUAAQAZABUAAgAaABcABIAAAAEA
AAAAAAAAAAAAAAAAEgAAAAQAAAAAAAAAAAAAAIcANgAAAAAADwAAAAAAAAAAAAAAkABuBgAAAAAP
AAAAAAAAAAAAAACQAIsGAAAAAAQAAAAAAAAAAAAAAIcA4wMAAAAAAAAAAAEAAAAqBQAAAAAAPE1v
ZHVsZT4ASW5wdXRJRABTQ18yN2U3N2RkYjE2YTA0OGU3YTA0ZDA1MjU3Njk1MTU1YQBtc2Nvcmxp
YgBzZXRfRmVlRGF0ZVBhcnNlZABzZXRfRmVlQW1vdW50UGFyc2VkAGRlZmF1bHRJbnN0YW5jZQBS
dW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUARGF0ZVRpbWUATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAZ2V0X0ludmFyaWFudEN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UAVHJ5UGFyc2UAZ2V0X0ZlZURhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0
dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAEdldFN0cmluZwBEZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18yN2U3N2RkYjE2
YTA0OGU3YTA0ZDA1MjU3Njk1MTU1YS5kbGwAc2V0X0ZlZURhdGVQYXJzZWRfSXNOdWxsAHNldF9G
ZWVBbW91bnRQYXJzZWRfSXNOdWxsAGdldF9GZWVEYXRlX0lzTnVsbABnZXRfRmVlQW1vdW50X0lz
TnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3Rl
bS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAElu
dmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRw
dXROYW1lTWFwAE91dHB1dE1hcABJRm9ybWF0UHJvdmlkZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5l
QnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0
ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVz
b3VyY2VzAFNDXzI3ZTc3ZGRiMTZhMDQ4ZTdhMDRkMDUyNTc2OTUxNTVhLlByb3BlcnRpZXMuUmVz
b3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18yN2U3N2RkYjE2YTA0OGU3YTA0ZDA1
MjU3Njk1MTU1YS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBEYXRlVGltZVN0eWxlcwBCdWZmZXJDb2x1
bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAFRy
eVBhcnNlRXhhY3QAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQA
UGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfRmVlQW1vdW50AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQw
X1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5
AAAVTQBNAC8AZABkAC8AeQB5AHkAeQAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAg
AGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkA
ZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0
AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8AMgA3AGUANwA3AGQAZABiADEANgBhADAA
NAA4AGUANwBhADAANABkADAANQAyADUANwA2ADkANQAxADUANQBhAC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAABXdhoGUidVDi666dP898t4ABCABAQgDIAABBSAB
ARERBCABAQ4FIAEBEWEGBwIRORE9BwACAg4QETkEAAASXQwABQIODhJxEXUQET0JIAMBEkUdCBJJ
AwYSRQMGHQgEIAEOCAQgAQIIBSACAQgcAyAAAgcgAgIOEYCBBSABHQgICAABEoCFEYCJBSAAEoCN
ByACAQ4SgI0It3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEk0DBhJZAwYSXQMGEiAFIAEBEgwD
IAAOBSABARE9BCABAQIFIAEBETkJIAQBCA4SRRJJBSABARJNBAAAElkFAAEBEl0EAAASIAMAAAED
KAAOAygAAgQoABE9BCgAETkECAASWQQIABJdBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzI3ZTc3ZGRiMTZhMDQ4ZTdhMDRkMDUyNTc2
OTUxNTVhAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjEAAEkBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEA
AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAAJgzAAAAAAAAAAAAALIzAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACk
MwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwAyADcAZQA3ADcAZABkAGIAMQA2AGEAMAA0ADgAZQA3AGEAMAA0AGQAMAA1ADIANQA3
ADYAOQA1ADEANQA1AGEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADIANwBlADcANwBk
AGQAYgAxADYAYQAwADQAOABlADcAYQAwADQAZAAwADUAMgA1ADcANgA5ADUAMQA1ADUAYQAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMgA3
AGUANwA3AGQAZABiADEANgBhADAANAA4AGUANwBhADAANABkADAANQAyADUANwA2ADkANQAxADUA
NQBhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADIANwBl
ADcANwBkAGQAYgAxADYAYQAwADQAOABlADcAYQAwADQAZAAwADUAMgA1ADcANgA5ADUAMQA1ADUA
YQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAxDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_27e77ddb16a048e7a04d05257695155a</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">4B</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Stage fee data\Handle dates and numbers.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage fee data\Handle dates and numbers.Inputs[Input 0].Columns[FeeAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeAmount"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Stage fee data\Handle dates and numbers.Inputs[Input 0].Columns[FeeDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeDate"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage fee data\Handle dates and numbers.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Stage fee data\Handle dates and numbers.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage fee data\Handle dates and numbers.Outputs[Output 0].Columns[FeeDateParsed]"
                      dataType="dbDate"
                      lineageId="Package\Stage fee data\Handle dates and numbers.Outputs[Output 0].Columns[FeeDateParsed]"
                      name="FeeDateParsed" />
                    <outputColumn
                      refId="Package\Stage fee data\Handle dates and numbers.Outputs[Output 0].Columns[FeeAmountParsed]"
                      dataType="cy"
                      lineageId="Package\Stage fee data\Handle dates and numbers.Outputs[Output 0].Columns[FeeAmountParsed]"
                      name="FeeAmountParsed" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage fee data\Handle strings"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Handle strings"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage fee data\Handle strings.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage fee data\Handle strings.Inputs[Derived Column Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]}) == "" ? "(no data)" : [TRIM](#{Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(FeeDescription) == "" ? "(no data)" : TRIM(FeeDescription)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage fee data\Handle strings.Inputs[Derived Column Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}) == "" ? "(no data)" : [TRIM](#{Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(FeeSequenceId) == "" ? "(no data)" : TRIM(FeeSequenceId)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage fee data\Handle strings.Inputs[Derived Column Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]} == "(no data)" &amp;&amp; #{Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]} != "" ? #{Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]} : #{Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">BusinessName == "(no data)" &amp;&amp; BusinessName2 != "" ? BusinessName2 : BusinessName</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage fee data\Handle strings.Inputs[Derived Column Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]} == "(no data)" &amp;&amp; #{Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]} != "" ? "" : #{Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">BusinessName == "(no data)" &amp;&amp; BusinessName2 != "" ? "" : BusinessName2</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage fee data\Handle strings.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage fee data\Handle strings.Inputs[Derived Column Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage fee data\Handle strings.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage fee data\Handle strings.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage fee data\Handle strings.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage fee data\Handle strings.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage fee data\Handle strings.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage fee data\Handle strings.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage fee data\Insert staged data to FeeStage table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert staged data to FeeStage table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage fee data\Insert staged data to FeeStage table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      externalMetadataColumnId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      externalMetadataColumnId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      externalMetadataColumnId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      externalMetadataColumnId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      externalMetadataColumnId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      externalMetadataColumnId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].Columns[FeeAmountParsed]"
                      cachedDataType="cy"
                      cachedName="FeeAmountParsed"
                      externalMetadataColumnId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[FeeAmount]"
                      lineageId="Package\Stage fee data\Handle dates and numbers.Outputs[Output 0].Columns[FeeAmountParsed]" />
                    <inputColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].Columns[FeeDateParsed]"
                      cachedDataType="dbDate"
                      cachedName="FeeDateParsed"
                      externalMetadataColumnId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[FeeDate]"
                      lineageId="Package\Stage fee data\Handle dates and numbers.Outputs[Output 0].Columns[FeeDateParsed]" />
                    <inputColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      externalMetadataColumnId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[FeeDate]"
                      dataType="dbDate"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input].ExternalColumns[FeeAmount]"
                      dataType="cy"
                      name="FeeAmount" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage fee data\Insert staged data to FeeStage table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage fee data\Insert staged data to FeeStage table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage fee data\Insert staged data to FeeStage table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage fee data\Insert staged data to FeeStage table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Stage fee data.Paths[Derived Column Output]"
              endId="Package\Stage fee data\Handle dates and numbers.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Stage fee data\Handle strings.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage fee data.Paths[OLE DB Source Output]"
              endId="Package\Stage fee data\Handle strings.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Stage fee data\Get selected columns from extracted fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Stage fee data.Paths[Output 0]"
              endId="Package\Stage fee data\Insert staged data to FeeStage table.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Stage fee data\Handle dates and numbers.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Stage license data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{2AE749D8-4C98-4CEF-B1A4-D75C924F2BA3}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Stage license data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Stage license data\Get selected columns from extracted license data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get selected columns from extracted license data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage license data\Get selected columns from extracted license data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[DCALicenseNumber]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]"
                      name="LicenseNumber"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseType]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessType]"
                      name="BusinessType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]"
                      name="AddressBuilding"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      length="75"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]"
                      name="AddressStreetName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      length="75"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]"
                      name="AddressCity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]"
                      name="AddressState"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]"
                      name="AddressZIP"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]"
                      name="AddressBorough"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]"
                      name="BoroughCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]"
                      name="CommunityBoard"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]"
                      name="CensusTract"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]"
                      name="Longitude"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]"
                      name="Latitude"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="DCALicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      name="LicenseType" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      dataType="wstr"
                      length="50"
                      name="LicenseExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseStatus]"
                      dataType="wstr"
                      length="50"
                      name="LicenseStatus" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      dataType="wstr"
                      length="50"
                      name="LicenseCreationDate" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[ContactPhoneNumber]"
                      dataType="wstr"
                      length="50"
                      name="ContactPhoneNumber" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BIN]"
                      dataType="wstr"
                      length="50"
                      name="BIN" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BBL]"
                      dataType="wstr"
                      length="50"
                      name="BBL" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[NTA]"
                      dataType="wstr"
                      length="50"
                      name="NTA" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Detail]"
                      dataType="wstr"
                      length="300"
                      name="Detail" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Location]"
                      dataType="wstr"
                      length="50"
                      name="Location" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].ExternalColumns[SourceRowNumber]"
                      dataType="i4"
                      name="SourceRowNumber" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[DCALicenseNumber]"
                      name="DCALicenseNumber" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseType]"
                      name="LicenseType" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseExpirationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseCreationDate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressBuilding]"
                      name="AddressBuilding" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressStreetName]"
                      name="AddressStreetName" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressCity]"
                      name="AddressCity" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressState]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressState]"
                      name="AddressState" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressZIP]"
                      name="AddressZIP" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressBorough]"
                      name="AddressBorough" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[BoroughCode]"
                      name="BoroughCode" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[CommunityBoard]"
                      name="CommunityBoard" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[CensusTract]"
                      name="CensusTract" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[Longitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[Latitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage license data\Handle dates and numbers"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Handle dates and numbers"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Globalization;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

  /// <summary>
  /// This method is called once for every row that passes through the component from Input0.
  ///
  /// Example of reading a value from a column in the the row:
  ///  string zipCode = Row.ZipCode
  ///
  /// Example of writing a value to a column in the row:
  ///  Row.ZipCode = zipCode
  /// </summary>
  /// <param name="Row">The row that is currently passing through the component</param>
  public override void Input0_ProcessInputRow(Input0Buffer Row)
  {
    var licenseCreationDateValid = DateTime.TryParseExact(Row.LicenseCreationDate,  "MM/dd/yyyy", CultureInfo.InvariantCulture, DateTimeStyles.None, out var licenseCreationDateParsed);

    if (licenseCreationDateValid)
    {
      Row.LicenseCreationDateParsed = licenseCreationDateParsed;
    }
    else
    {
      Row.LicenseCreationDateParsed_IsNull = true;
    }

    var licenseExpirationDateValid = DateTime.TryParseExact(Row.LicenseExpirationDate, "MM/dd/yyyy", CultureInfo.InvariantCulture, DateTimeStyles.None, out var licenseExpirationDateParsed);

    if (licenseExpirationDateValid)
    {
      Row.LicenseExpirationDateParsed = licenseExpirationDateParsed;
    }
    else
    {
      Row.LicenseExpirationDateParsed_IsNull = true;
    }

    if (licenseCreationDateValid && licenseExpirationDateValid && licenseCreationDateParsed > licenseExpirationDateParsed)
    {
      Row.LicenseCreationDateParsed = licenseExpirationDateParsed;
      Row.LicenseExpirationDateParsed = licenseCreationDateParsed;
    }

    if (Row.Longitude.Trim() == "" || Row.Latitude.Trim() == "")
    {
      Row.Longitude = "(no data)";
      Row.Latitude = "(no data)";
    }
    else
    {
      var longitudeValid = double.TryParse(Row.Longitude, out var longitudeParsed);

      if (!(longitudeValid && longitudeParsed >= -180 && longitudeParsed <= 180))
      {
        Row.Longitude = "(no data)";
        Row.Latitude = "(no data)";
      }
      else
      {
        var latitudeValid = double.TryParse(Row.Latitude, out var latitudeParsed);

        if (!(latitudeValid && latitudeParsed >= -90 && latitudeParsed <= 90))
        {
          Row.Longitude = "(no data)";
          Row.Latitude = "(no data)";
        }
      }
    }
  }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String LicenseExpirationDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool LicenseExpirationDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String LicenseCreationDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool LicenseCreationDate_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Longitude
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool Longitude_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Latitude
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool Latitude_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime LicenseExpirationDateParsed
    {
        set
        {
            this[4] = value;
        }
    }
    public bool LicenseExpirationDateParsed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime LicenseCreationDateParsed
    {
        set
        {
            this[5] = value;
        }
    }
    public bool LicenseCreationDateParsed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_db1c5a48e0fe4b48ab8a7cee253ce39a.Properties.Settings.get_Default():SC_db1c5a48e0fe4b48ab8a7cee253ce39a.Properties.Sett" +
    "ings")]

namespace SC_db1c5a48e0fe4b48ab8a7cee253ce39a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_db1c5a48e0fe4b48ab8a7cee253ce39a.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3507a772-5a44-4a8a-b881-1ea1e4a1886d}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_db1c5a48e0fe4b48ab8a7cee253ce39a</RootNamespace>
    <AssemblyName>SC_db1c5a48e0fe4b48ab8a7cee253ce39a</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_db1c5a48e0fe4b48ab8a7cee253ce39a" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_db1c5a48e0fe4b48ab8a7cee253ce39a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_db1c5a48e0fe4b48ab8a7cee253ce39a</msb:DisplayName>
    <msb:ProjectId>{197AF830-12CD-4CC0-8C05-AF0ED2BCDAFD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_db1c5a48e0fe4b48ab8a7cee253ce39a.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_db1c5a48e0fe4b48ab8a7cee253ce39a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_db1c5a48e0fe4b48ab8a7cee253ce39a")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_db1c5a48e0fe4b48ab8a7cee253ce39a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_db1c5a48e0fe4b48ab8a7cee253ce39a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_db1c5a48e0fe4b48ab8a7cee253ce39a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_db1c5a48e0fe4b48ab8a7cee253ce39a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_db1c5a48e0fe4b48ab8a7cee253ce39a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_db1c5a48e0fe4b48ab8a7cee253ce39a.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAElHumAAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAA3jYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIw2AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5BYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
NgAAAAAAAEgAAAACAAUAkCMAAEQSAAABAAAAAAAAANQ1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBgA1AQAAAQAAEQNvBgAABnIBAABwKBAAAAoWEgAoEQAA
CiUsCQMGbxIAAAYrBwMXbxMAAAYDbwQAAAZyAQAAcCgQAAAKFhICKBEAAAoLBywJAwhvEAAABisH
AxdvEQAABgdfLBcGCCgSAAAKLA4DCG8SAAAGAwZvEAAABgNvCAAABm8TAAAKchcAAHAoFAAACi0X
A28MAAAGbxMAAApyFwAAcCgUAAAKLBcDchkAAHBvCQAABgNyGQAAcG8NAAAGKgNvCAAABhIDKBUA
AAosGAkjAAAAAACAZsA3DAkjAAAAAACAZkAxFwNyGQAAcG8JAAAGA3IZAABwbw0AAAYqA28MAAAG
EgQoFQAACiwaEQQjAAAAAACAVsA3DREEIwAAAAAAgFZAMRYDchkAAHBvCQAABgNyGQAAcG8NAAAG
Kh4CKBYAAAYqKgIDBAUoFgAACipSAnsXAAAKAnsYAAAKFpRvGQAACioiAhYoGgAACipSAnsXAAAK
AnsYAAAKF5RvGQAACioiAhcoGgAACipSAnsXAAAKAnsYAAAKGJRvGQAACiomAhgDKBsAAAoqIgIY
KBoAAAoqWgMsCAIYKBwAAAoqci0AAHBzHQAACnpSAnsXAAAKAnsYAAAKGZRvGQAACiomAhkDKBsA
AAoqIgIZKBoAAAoqWgMsCAIZKBwAAAoqci0AAHBzHQAACno6AhoDjA4AAAEoGwAACipaAywIAhoo
HAAACipyLQAAcHMdAAAKejoCGwOMDgAAASgbAAAKKloDLAgCGygcAAAKKnItAABwcx0AAAp6HgIo
HgAACioeAigfAAAKKn4CKCAAAAoCAnMaAAAGfQEAAAQCAnMbAAAGfQIAAAQqkgRyygAAcBpvIQAA
CiwVAgUCAygiAAAKDgRzAwAABm8YAAAGKkorBwIDbxkAAAYDbxQAAAYt8SoGKjoCKCMAAAoCA30D
AAAEKjoCKCMAAAoCA30EAAAEKh4CKCMAAAoqrn4FAAAELR5y2gAAcNAHAAACKCQAAApvJQAACnMm
AAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIoJwAACioucyEAAAaABwAABCpC
U0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADEBgAAI34AADAHAADcBwAAI1N0cmlu
Z3MAAAAADA8AAEwBAAAjVVMAWBAAABAAAAAjR1VJRAAAAGgQAADcAQAAI0Jsb2IAAAAAAAAAAgAA
AVcVogEJAQAAAPoBMwAWAAABAAAAIwAAAAgAAAAHAAAAIgAAABUAAAAnAAAAEAAAAAEAAAADAAAA
DwAAABQAAAABAAAABAAAAAEAAAAAAKoDAQAAAAAABgC4AusFBgBMA+sFBgAEAtgFDwBfBgAABgAx
Ah0FBgCbAh0FBgB8Ah0FBgAzAx0FBgDYAh0FBgDxAh0FBgBIAh0FBgBjAnADCgAMAwEBBgD4AMEE
CgCqBQEBDgCbBQEBCgBmBQEBCgBCBwEBBgAFB8EEBgDnAdgFBgC7BQsGBgBaBQgFEgC3AZQDEgAY
ApQDEgBkAfMEBgDMAesFBgB+BcEEBgCnBggFBgCNA8EEBgDDAMEEBgAvBcEEBgBJBcEEBgAiAcEE
BgDKAMEEBgDHBx0FAAAAAAEAAAAAAAEAAQABABAA6AQAABAAAQABAAEAEACOBQAAPQABAAMAAQAQ
ACQHAABJAAEAFgABABAA6wYAAE0AAwAaAAEAEACdBgAATQAEABsAAAAQABIGbgZNAAUAHAAAARAA
2wZuBmUABwAgAAYA6watAAYAnQaxAAEAMge1AAEAMge1ABEAzQS5ABEAPwG9ABEAfQDBAFAgAAAA
AMYApAfFAAEAkSEAAAAAhhjLBQYAAgCZIQAAAACGGMsFUAACAKQhAAAAAIYInQE/AAUAuSEAAAAA
hgiPBHIABQDCIQAAAACGCIUBPwAFANchAAAAAIYIcARyAAUA4CEAAAAAhgiNAD8ABQD1IQAAAACG
CJsAEAAFAP8hAAAAAIYIHgRyAAYACCIAAAAAhggzBMsABgAfIgAAAACGCKkAPwAHADQiAAAAAIYI
tgAQAAcAPiIAAAAAhghIBHIACABHIgAAAACGCFwEywAIAF4iAAAAAIYIXQDQAAkAbSIAAAAAhgj3
A8sACgCEIgAAAACGCD8A0AALAJMiAAAAAIYI0gPLAAwAqiIAAAAAhgC7B3IADQCyIgAAAACGAAwH
cgANALoiAAAAAIYYywUGAA0A2iIAAAAAxgCXB9YADQD/IgAAAADGAZAHxQARABIjAAAAAMYBpAfF
ABIAFCMAAAAAhhjLBeAAEwAjIwAAAACGGMsF4AAUADIjAAAAAIMYywUGABUAOiMAAAAAkwi3BeYA
FQBmIwAAAACTCCcBJQAVAG0jAAAAAJMIMwHrABUAdSMAAAAAlggYB/EAFgB8IwAAAACGGMsFBgAW
AIQjAAAAAJEY0QX2ABYAAAABAL8HAAABALAFAAACALYGAAADAHQFAAABAGoDAAABAGoDAAABAGoD
AAABAGoDAAABAGoDAAABAGoDAAABAGoDAAABAGoDAAABAAoAAAACAO4AAAADALAFAAAEAHQFAAAB
ALAFAAABAL8HAAABAEgHAAABAEgHAAABAGoDCQDLBQEAEQDLBQYAGQDLBQoAKQDLBRAAMQDLBRAA
OQDLBRAAQQDLBRAASQDLBRAAUQDLBRAAWQDLBRAAYQDLBRAAaQDLBQYAoQDLBQYAwQDLBRUA0QDL
BQYAsQBPASUAcQD3BioAcQDZBDcA6QDIBD8A6QDQB0MA8QB8AUkAeQDLBVAAeQCwBVoAeQC2Bl4A
gQCKA2IAeQCpBGcAeQC4BGwAeQCwBAEA+QDLBRAAeQC7B3IAeQAMB3IAkQDLBQYA6QDkBnYAkQDK
Bn4AmQDLBQYACQHcAIQACQHDB40AqQDLBZMAyQDLBQYALgALABYBLgATAB8BLgAbAD4BLgAjAEcB
LgArAHABLgAzAHABLgA7AHABLgBDAEcBLgBLAHYBLgBTAHABLgBbAI0BQwBjANcB4QB7ANcB4wBr
ANcBqQFzAD4ByQFzAD4BGwADAAEABwANAAgADwAAAKEB+gAAAJME/gAAAIkB+gAAAHQE/gAAAJ8A
+gAAADcE/gAAALoA+gAAAGAE/gAAAGEAAgEAAPsD/gAAAEMAAgEAANYD/gAAALsFBwEAAFwBDAEA
ABwHEQECAAQAAwACAAUABQACAAYABwACAAcACQACAAgACwABAAkACwACAAoADQABAAsADQACAAwA
DwABAA0ADwACAA4AEQABAA8AEQABABAAEwABABEAFQABABIAFwABABMAGQACAB0AGwACAB4AHQAB
AB8AHQACACAAHwAEgAAAAQAAAAAAAAAAAAAAAAASAAAABAAAAAAAAAAAAAAAmwA2AAAAAAAPAAAA
AAAAAAAAAACkAFIHAAAAAA8AAAAAAAAAAAAAAKQAbwcAAAAABAAAAAAAAAAAAAAAmwDBBAAAAAAA
AAAAAQAAABwGAAAAAAAAADxNb2R1bGU+AElucHV0SUQAU0NfZGIxYzVhNDhlMGZlNGI0OGFiOGE3
Y2VlMjUzY2UzOWEAbXNjb3JsaWIAc2V0X0xpY2Vuc2VDcmVhdGlvbkRhdGVQYXJzZWQAc2V0X0xp
Y2Vuc2VFeHBpcmF0aW9uRGF0ZVBhcnNlZABkZWZhdWx0SW5zdGFuY2UAZ2V0X0xvbmdpdHVkZQBz
ZXRfTG9uZ2l0dWRlAGdldF9MYXRpdHVkZQBzZXRfTGF0aXR1ZGUARG91YmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBnZXRfSW52YXJpYW50Q3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBUcnlQ
YXJzZQBnZXRfTGljZW5zZUNyZWF0aW9uRGF0ZQBnZXRfTGljZW5zZUV4cGlyYXRpb25EYXRlAEVk
aXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9u
VXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRy
aWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBU
YXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFz
c2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0
ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJ
U1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAR2V0U3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19kYjFjNWE0OGUwZmU0
YjQ4YWI4YTdjZWUyNTNjZTM5YS5kbGwAc2V0X0xpY2Vuc2VDcmVhdGlvbkRhdGVQYXJzZWRfSXNO
dWxsAHNldF9MaWNlbnNlRXhwaXJhdGlvbkRhdGVQYXJzZWRfSXNOdWxsAGdldF9Mb25naXR1ZGVf
SXNOdWxsAHNldF9Mb25naXR1ZGVfSXNOdWxsAGdldF9MYXRpdHVkZV9Jc051bGwAc2V0X0xhdGl0
dWRlX0lzTnVsbABnZXRfTGljZW5zZUNyZWF0aW9uRGF0ZV9Jc051bGwAZ2V0X0xpY2Vuc2VFeHBp
cmF0aW9uRGF0ZV9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AVHJpbQByZXNvdXJjZU1h
bgBvcF9HcmVhdGVyVGhhbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5H
bG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24A
U3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABJRm9y
bWF0UHJvdmlkZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRf
UmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1
bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2RiMWM1YTQ4ZTBmZTRi
NDhhYjhhN2NlZTI1M2NlMzlhLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dp
bmdNb2RlcwBTQ19kYjFjNWE0OGUwZmU0YjQ4YWI4YTdjZWUyNTNjZTM5YS5Qcm9wZXJ0aWVzAFZh
cmlhYmxlcwBEYXRlVGltZVN0eWxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4
ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAFRyeVBhcnNlRXhhY3QAT2JqZWN0AEVuZE9m
Um93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENv
bXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
UGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBO
ZXh0Um93AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQAAFU0ATQAvAGQAZAAvAHkAeQB5AHkAAAEA
EygAbgBvACAAZABhAHQAYQApAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBh
AG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4A
IABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBh
AGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwBkAGIAMQBjADUAYQA0ADgAZQAwAGYAZQA0AGIA
NAA4AGEAYgA4AGEANwBjAGUAZQAyADUAMwBjAGUAMwA5AGEALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAAIhaws/Q9RVOuiKx82oSqNAABCABAQgDIAABBSABARERBCAB
AQ4FIAEBEV0JBwUROQIROQ0NBAAAElkMAAUCDg4SbRFxEBE5BwACAhE5ETkDIAAOBQACAg4OBgAC
Ag4QDQkgAwESQR0IEkUDBhJBAwYdCAQgAQ4IBCABAggFIAIBCBwDIAACByACAg4RgIEFIAEdCAgI
AAESgIURgIkFIAASgI0HIAIBDhKAjQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSSQMGElUD
BhJZAwYSIAUgAQESDAQgAQECBSABARE5CSAEAQgOEkESRQUgAQESSQQAABJVBQABARJZBAAAEiAD
AAABAygADgMoAAIEKAAROQQIABJVBAgAElkECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfZGIxYzVhNDhlMGZlNGI0OGFiOGE3Y2VlMjUz
Y2UzOWEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAAC0NgAAAAAAAAAAAADONgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwDYA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AZABiADEAYwA1AGEANAA4AGUAMABmAGUANABiADQAOABhAGIAOABhADcAYwBlAGUAMgA1
ADMAYwBlADMAOQBhAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBkAGIAMQBjADUAYQA0
ADgAZQAwAGYAZQA0AGIANAA4AGEAYgA4AGEANwBjAGUAZQAyADUAMwBjAGUAMwA5AGEALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGQAYgAx
AGMANQBhADQAOABlADAAZgBlADQAYgA0ADgAYQBiADgAYQA3AGMAZQBlADIANQAzAGMAZQAzADkA
YQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBkAGIAMQBj
ADUAYQA0ADgAZQAwAGYAZQA0AGIANAA4AGEAYgA4AGEANwBjAGUAZQAyADUAMwBjAGUAMwA5AGEA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAOA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_db1c5a48e0fe4b48ab8a7cee253ce39a</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">38</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Stage license data\Handle dates and numbers.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage license data\Handle dates and numbers.Inputs[Input 0].Columns[LicenseExpirationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]" />
                    <inputColumn
                      refId="Package\Stage license data\Handle dates and numbers.Inputs[Input 0].Columns[LicenseCreationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]" />
                    <inputColumn
                      refId="Package\Stage license data\Handle dates and numbers.Inputs[Input 0].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Stage license data\Handle dates and numbers.Inputs[Input 0].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]"
                      usageType="readWrite" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage license data\Handle dates and numbers.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Stage license data\Handle dates and numbers.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage license data\Handle dates and numbers.Outputs[Output 0].Columns[LicenseExpirationDateParsed]"
                      dataType="dbDate"
                      lineageId="Package\Stage license data\Handle dates and numbers.Outputs[Output 0].Columns[LicenseExpirationDateParsed]"
                      name="LicenseExpirationDateParsed" />
                    <outputColumn
                      refId="Package\Stage license data\Handle dates and numbers.Outputs[Output 0].Columns[LicenseCreationDateParsed]"
                      dataType="dbDate"
                      lineageId="Package\Stage license data\Handle dates and numbers.Outputs[Output 0].Columns[LicenseCreationDateParsed]"
                      name="LicenseCreationDateParsed" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage license data\Handle strings"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Handle strings"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]}) == "" ? "(no data)" : [TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(AddressBuilding) == "" ? "(no data)" : TRIM(AddressBuilding)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]}) == "" ? "(no data)" : [TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(AddressStreetName) == "" ? "(no data)" : TRIM(AddressStreetName)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]}) == "" ? "(no data)" : [TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(SecondaryAddressStreetName) == "" ? "(no data)" : TRIM(SecondaryAddressStreetName)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]}) == "" ? "(no data)" : [TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(AddressCity) == "" ? "(no data)" : TRIM(AddressCity)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]}) == "" ? "(no data)" : [TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(AddressState) == "" ? "(no data)" : TRIM(AddressState)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]}) == "" ? "(no data)" : [TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(AddressZIP) == "" ? "(no data)" : TRIM(AddressZIP)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]}) == "" ? "(no data)" : [TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(AddressBorough) == "" ? "(no data)" : TRIM(AddressBorough)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]}) == "" ? "(no data)" : [TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(BoroughCode) == "" ? "(no data)" : TRIM(BoroughCode)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]}) == "" ? "(no data)" : [TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(CommunityBoard) == "" ? "(no data)" : TRIM(CommunityBoard)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]}) == "" ? "(no data)" : [TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(CouncilDistrict) == "" ? "(no data)" : TRIM(CouncilDistrict)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]}) == "" ? "(no data)" : [TRIM](#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(CensusTract) == "" ? "(no data)" : TRIM(CensusTract)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]} == "(no data)" &amp;&amp; #{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]} != "" ? #{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]} : #{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">BusinessName == "(no data)" &amp;&amp; BusinessName2 != "" ? BusinessName2 : BusinessName</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage license data\Handle strings.Inputs[Derived Column Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]} == "(no data)" &amp;&amp; #{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]} != "" ? "" : #{Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">BusinessName == "(no data)" &amp;&amp; BusinessName2 != "" ? "" : BusinessName2</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage license data\Handle strings.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage license data\Handle strings.Inputs[Derived Column Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage license data\Handle strings.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage license data\Handle strings.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage license data\Handle strings.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage license data\Handle strings.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage license data\Handle strings.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage license data\Handle strings.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage license data\Insert staged data to LicenseStage table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert staged data to LicenseStage table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage license data\Insert staged data to LicenseStage table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseNumber]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessType]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessType]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[AddressBuilding]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[AddressStreetName]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[SecondaryAddressStreetName]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[AddressCity]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[AddressState]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[AddressZIP]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[AddressBorough]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[BoroughCode]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[CommunityBoard]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[CouncilDistrict]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[CensusTract]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[LicenseExpirationDateParsed]"
                      cachedDataType="dbDate"
                      cachedName="LicenseExpirationDateParsed"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseExpirationDate]"
                      lineageId="Package\Stage license data\Handle dates and numbers.Outputs[Output 0].Columns[LicenseExpirationDateParsed]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[LicenseCreationDateParsed]"
                      cachedDataType="dbDate"
                      cachedName="LicenseCreationDateParsed"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseCreationDate]"
                      lineageId="Package\Stage license data\Handle dates and numbers.Outputs[Output 0].Columns[LicenseCreationDateParsed]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]" />
                    <inputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      externalMetadataColumnId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      lineageId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="LicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      name="BusinessType" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseExpirationDate]"
                      dataType="dbDate"
                      name="LicenseExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[LicenseCreationDate]"
                      dataType="dbDate"
                      name="LicenseCreationDate" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage license data\Insert staged data to LicenseStage table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage license data\Insert staged data to LicenseStage table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage license data\Insert staged data to LicenseStage table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage license data\Insert staged data to LicenseStage table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Stage license data.Paths[Derived Column Output]"
              endId="Package\Stage license data\Handle dates and numbers.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Stage license data\Handle strings.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage license data.Paths[OLE DB Source Output]"
              endId="Package\Stage license data\Handle strings.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Stage license data\Get selected columns from extracted license data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Stage license data.Paths[Output 0]"
              endId="Package\Stage license data\Insert staged data to LicenseStage table.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Stage license data\Handle dates and numbers.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Stage payment data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{36CA7CC9-E97D-42D6-96D4-67E6FFB634AA}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Stage payment data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Stage payment data\Get selected columns from extracted payment data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get selected columns from extracted payment data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[PaymentExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage payment data\Get selected columns from extracted payment data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      length="50"
                      lineageId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentAmount]"
                      length="50"
                      lineageId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      length="50"
                      lineageId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      name="TransactionType"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[SourceRowNumber]"
                      dataType="i4"
                      name="SourceRowNumber" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[RecordId]"
                      dataType="wstr"
                      length="50"
                      name="RecordId" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentAmount]"
                      dataType="wstr"
                      length="50"
                      name="PaymentAmount" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentDate]"
                      dataType="wstr"
                      length="50"
                      name="PaymentDate" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[PaymentAmount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[PaymentAmount]"
                      name="PaymentAmount" />
                    <outputColumn
                      refId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      name="TransactionType" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage payment data\Get selected columns from staged fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get selected columns from staged fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage payment data\Get selected columns from staged fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      length="50"
                      lineageId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      dataType="dbDate"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      dataType="cy"
                      name="FeeAmount" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage payment data\Handle numbers"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Handle numbers"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_08a70674794b418594566f667c6eed4c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_08a70674794b418594566f667c6eed4c")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

  /// <summary>
  /// This method is called once for every row that passes through the component from Input0.
  ///
  /// Example of reading a value from a column in the the row:
  ///  string zipCode = Row.ZipCode
  ///
  /// Example of writing a value to a column in the row:
  ///  Row.ZipCode = zipCode
  /// </summary>
  /// <param name="Row">The row that is currently passing through the component</param>
  public override void Input0_ProcessInputRow(Input0Buffer Row)
  {
    var paymentAmountValid = decimal.TryParse(Row.PaymentAmount, out var paymentAmountParsed);

    if (paymentAmountValid)
    {
      Row.PaymentAmountParsed = paymentAmountParsed;
    }
    else
    {
      Row.PaymentAmountParsed_IsNull = true;
    }
  }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String PaymentAmount
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool PaymentAmount_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Decimal PaymentAmountParsed
    {
        set
        {
            this[1] = value;
        }
    }
    public bool PaymentAmountParsed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_08a70674794b418594566f667c6eed4c.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{fb7d7074-e52c-4e62-bb31-22e981ba7782}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_08a70674794b418594566f667c6eed4c</RootNamespace>
    <AssemblyName>SC_08a70674794b418594566f667c6eed4c</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_08a70674794b418594566f667c6eed4c" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_08a70674794b418594566f667c6eed4c</msb:CodeName>
    <msb:DisplayName>SC_08a70674794b418594566f667c6eed4c</msb:DisplayName>
    <msb:ProjectId>{3D11BC1D-9955-4427-A04D-6CA254E4AB43}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_08a70674794b418594566f667c6eed4c.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_08a70674794b418594566f667c6eed4c.Properties.Settings.get_Default():SC_08a70674794b418594566f667c6eed4c.Properties.Sett" +
    "ings")]

namespace SC_08a70674794b418594566f667c6eed4c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_08a70674794b418594566f667c6eed4c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_08a70674794b418594566f667c6eed4c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_08a70674794b418594566f667c6eed4c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_08a70674794b418594566f667c6eed4c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_08a70674794b418594566f667c6eed4c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_08a70674794b418594566f667c6eed4c.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALJAuWAAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAACjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALgxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAEBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADs
MQAAAAAAAEgAAAACAAUAyCEAADgPAAABAAAAAAAAAAAxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAIAHwAAAAEAABEDbwYAAAYS
ACgSAAAKLAgDBm8IAAAGKgMXbwkAAAYqHgIoDAAABioqAgMEBSgTAAAKKlICexQAAAoCexUAAAoW
lG8WAAAKKiICFigXAAAKKjoCFwOMDgAAASgYAAAKKloDLAgCFygZAAAKKnIBAABwcxoAAAp6HgIo
GwAACioeAigcAAAKKn4CKB0AAAoCAnMQAAAGfQEAAAQCAnMRAAAGfQIAAAQqkgRyngAAcBpvHgAA
CiwVAgUCAygfAAAKDgRzBQAABm8OAAAGKkorBwIDbw8AAAYDbwoAAAYt8SoGKjoCKCAAAAoCA30D
AAAEKjoCKCAAAAoCA30EAAAEKh4CKCAAAAoqrn4FAAAELR5yrgAAcNAHAAACKCEAAApvIgAACnMj
AAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIoJAAACioucxcAAAaABwAABCpC
U0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAB4BQAAI34AAOQFAABoBgAAI1N0cmlu
Z3MAAAAATAwAACABAAAjVVMAbA0AABAAAAAjR1VJRAAAAHwNAAC8AQAAI0Jsb2IAAAAAAAAAAgAA
AVcVogEJAQAAAPoBMwAWAAABAAAAIAAAAAgAAAAHAAAAGAAAAA8AAAAkAAAAEAAAAAEAAAADAAAA
BwAAAAgAAAABAAAABAAAAAEAAAAAABYDAQAAAAAABgAFAo0EBgCZAo0EBgBRAXoEDwABBQAABgB+
Ac8DBgDoAc8DBgDJAc8DBgCAAs8DBgAlAs8DBgA+As8DBgCVAc8DBgCwAdQCCgBZApUABgD4AocD
CgBMBJUADgA9BJUACgAYBJUACgDHBZUABgCKBYcDBgA0AXoEBgBdBK0EBgAMBLoDEgAEAQADEgBl
AQADEgDjAKUDBgAZAY0EBgDhA4cDBgDxAocDBgD7A4cDBgC2AIcDBgBnAIcDBgBeBs8DAAAAAAEA
AAAAAAEAAQABABAAmgMAABAAAQABAAEAEAAwBAAAPQABAAUAAQAQAKkFAABJAAEADAABABAAfgUA
AE0AAwAQAAEAEAA/BQAATQAEABEAAAAQALQEEAVNAAUAEgAAARAAbgUQBWUABwAWAAYAfgWCAAYA
PwWGAAEAtwWKAAEAtwWKABEAjgOOABEA0wCSABEAVwCWAFAgAAAAAMYAtwIGAAEAWCAAAAAAxgDC
AgYAAQBgIAAAAADGADsGmgABAIsgAAAAAIYYbQQGAAIAkyAAAAAAhhhtBCgAAgCeIAAAAACGCNcF
oAAFALMgAAAAAIYIXQNKAAUAvCAAAAAAhgg/AKQABQDLIAAAAACGCD4DqgAGAOIgAAAAAIYAUgZK
AAcA6iAAAAAAhgCRBUoABwDyIAAAAACGGG0EBgAHABIhAAAAAMYALgavAAcANyEAAAAAxgEnBpoA
CwBKIQAAAADGATsGmgAMAEwhAAAAAIYYbQS5AA0AWyEAAAAAhhhtBLkADgBqIQAAAACDGG0EBgAP
AHIhAAAAAJMIWQS/AA8AniEAAAAAkwi7AMQADwClIQAAAACTCMcAyQAPAK0hAAAAAJYInQXPABAA
tCEAAAAAhhhtBAYAEAC8IQAAAACRGHME1AAQAAAAAQBWBgAAAQBSBAAAAgBJBQAAAwAmBAAAAQDO
AgAAAQDOAgAAAQAKAAAAAgCLAAAAAwBSBAAABAAmBAAAAQBSBAAAAQBWBgAAAQDNBQAAAQDNBQAA
AQDOAgkAbQQBABEAbQQGABkAbQQKACkAbQQQADEAbQQQADkAbQQQAEEAbQQQAEkAbQQQAFEAbQQQ
AFkAbQQQAGEAbQQQAGkAbQQGAKEAbQQGAMEAbQQVANEAbQQGAJEAtwIGAJEAwgIGAHEA+wAgAHkA
bQQoAHkAUgQyAHkASQU2AIEA7gI6AHkAbwM/AHkAfgNEAHkAdgMBANkAbQQQAHkAUgZKAHkAkQVK
AJEAbQQGAOEAdwVOAJEAXQVVAJkAbQQGAPEAeQBbAPEAWgZiAKkAbQRoAMkAbQQGAC4ACwD0AC4A
EwD9AC4AGwAcAS4AIwAlAS4AKwBOAS4AMwBOAS4AOwBOAS4AQwAlAS4ASwBUAS4AUwBOAS4AWwBr
AUMAYwC1AakAcwAcAckAcwAcAeEAewC1AeMAawC1ARsAAwABAAcABQAIAAcAAADbBdgAAABhA9wA
AABDAOAAAABCA9wAAABdBOUAAADbAOoAAAChBe8AAgAGAAMAAgAHAAUAAQAIAAcAAQAJAAkAAgAT
AAsAAgAUAA0AAQAVAA0AAgAWAA8ABIAAAAEAAAAAAAAAAAAAAAAAGwAAAAQAAAAAAAAAAAAAAHAA
EgAAAAAADwAAAAAAAAAAAAAAeQDpBQAAAAAPAAAAAAAAAAAAAAB5AAYGAAAAAAQAAAAAAAAAAAAA
AHAAhwMAAAAAAAAAAAEAAAC+BAAAAAAAAAA8TW9kdWxlPgBJbnB1dElEAG1zY29ybGliAFNDXzA4
YTcwNjc0Nzk0YjQxODU5NDU2NmY2NjdjNmVlZDRjAHNldF9QYXltZW50QW1vdW50UGFyc2VkAGRl
ZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5h
bWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAVHJ5UGFyc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBEZWNpbWFsAFN5c3Rl
bS5Db21wb25lbnRNb2RlbABTQ18wOGE3MDY3NDc5NGI0MTg1OTQ1NjZmNjY3YzZlZWQ0Yy5kbGwA
c2V0X1BheW1lbnRBbW91bnRQYXJzZWRfSXNOdWxsAGdldF9QYXltZW50QW1vdW50X0lzTnVsbABT
ZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRP
cGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1l
TWFwAE91dHB1dE1hcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfMDhhNzA2NzQ3OTRi
NDE4NTk0NTY2ZjY2N2M2ZWVkNGMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNDXzA4YTcwNjc0Nzk0YjQxODU5NDU2NmY2NjdjNmVlZDRjLlByb3BlcnRpZXMA
VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBF
cXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21w
b25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfUGF5bWVudEFtb3VudABN
aWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVI
b3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdl
dF9Bc3NlbWJseQAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8A
dAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2
AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAP
SQBuAHAAdQB0ACAAMAAAcVMAQwBfADAAOABhADcAMAA2ADcANAA3ADkANABiADQAMQA4ADUAOQA0
ADUANgA2AGYANgA2ADcAYwA2AGUAZQBkADQAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAviQHZ6V8+EGp5LvdJoiDEwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQER
XQQHARE5BwACAg4QETkJIAMBEkEdCBJFAwYSQQMGHQgEIAEOCAQgAQIIBSACAQgcAyAAAgYgAgIO
EXUFIAEdCAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMG
EkkDBhJVAwYSWQMGEiAFIAEBEgwDIAAOBSABARE5BCABAQIJIAQBCA4SQRJFBSABARJJBAAAElUE
AAASWQUAAQESWQQAABIgAwAAAQMoAA4DKAACBCgAETkECAASVQQIABJZBAgAEiAIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzA4YTcwNjc0Nzk0
YjQxODU5NDU2NmY2NjdjNmVlZDRjAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjEAAEkBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBG
cmFtZXdvcmsgNC43BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADgMQAAAAAAAAAAAAD6MQAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA7DEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwAwADgAYQA3ADAANgA3ADQANwA5ADQAYgA0ADEAOAA1ADkANAA1ADYANgBmADYANgA3
AGMANgBlAGUAZAA0AGMAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADAAOABhADcAMAA2
ADcANAA3ADkANABiADQAMQA4ADUAOQA0ADUANgA2AGYANgA2ADcAYwA2AGUAZQBkADQAYwAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMAA4
AGEANwAwADYANwA0ADcAOQA0AGIANAAxADgANQA5ADQANQA2ADYAZgA2ADYANwBjADYAZQBlAGQA
NABjAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADAAOABh
ADcAMAA2ADcANAA3ADkANABiADQAMQA4ADUAOQA0ADUANgA2AGYANgA2ADcAYwA2AGUAZQBkADQA
YwAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAADDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_08a70674794b418594566f667c6eed4c</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">F6</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Stage payment data\Handle numbers.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage payment data\Handle numbers.Inputs[Input 0].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      lineageId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[PaymentAmount]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage payment data\Handle numbers.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Stage payment data\Handle numbers.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage payment data\Handle numbers.Outputs[Output 0].Columns[PaymentAmountParsed]"
                      dataType="cy"
                      lineageId="Package\Stage payment data\Handle numbers.Outputs[Output 0].Columns[PaymentAmountParsed]"
                      name="PaymentAmountParsed" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage payment data\Handle strings"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Handle strings"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage payment data\Handle strings.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage payment data\Handle strings.Inputs[Derived Column Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      cachedSortKeyPosition="1"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[FeeSequenceId]}) == "" ? "(no data)" : [TRIM](#{Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[FeeSequenceId]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(FeeSequenceId) == "" ? "(no data)" : TRIM(FeeSequenceId)</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage payment data\Handle strings.Inputs[Derived Column Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[TransactionType]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[TransactionType]}) == "" ? "(no data)" : [TRIM](#{Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[TransactionType]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(TransactionType) == "" ? "(no data)" : TRIM(TransactionType)</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage payment data\Handle strings.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage payment data\Handle strings.Inputs[Derived Column Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage payment data\Handle strings.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage payment data\Handle strings.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage payment data\Handle strings.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage payment data\Handle strings.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage payment data\Handle strings.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage payment data\Handle strings.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage payment data\Insert staged data to PaymentStage table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert staged data to PaymentStage table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[PaymentStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage payment data\Insert staged data to PaymentStage table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage payment data\Insert staged data to PaymentStage table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage payment data\Insert staged data to PaymentStage table.Inputs[OLE DB Destination Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      externalMetadataColumnId="Package\Stage payment data\Insert staged data to PaymentStage table.Inputs[OLE DB Destination Input].ExternalColumns[TransactionType]"
                      lineageId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[TransactionType]" />
                    <inputColumn
                      refId="Package\Stage payment data\Insert staged data to PaymentStage table.Inputs[OLE DB Destination Input].Columns[PaymentAmountParsed]"
                      cachedDataType="cy"
                      cachedName="PaymentAmountParsed"
                      externalMetadataColumnId="Package\Stage payment data\Insert staged data to PaymentStage table.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                      lineageId="Package\Stage payment data\Handle numbers.Outputs[Output 0].Columns[PaymentAmountParsed]" />
                    <inputColumn
                      refId="Package\Stage payment data\Insert staged data to PaymentStage table.Inputs[OLE DB Destination Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Stage payment data\Insert staged data to PaymentStage table.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[FeeSequenceId]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Insert staged data to PaymentStage table.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Insert staged data to PaymentStage table.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                      dataType="cy"
                      name="PaymentAmount" />
                    <externalMetadataColumn
                      refId="Package\Stage payment data\Insert staged data to PaymentStage table.Inputs[OLE DB Destination Input].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage payment data\Insert staged data to PaymentStage table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Stage payment data\Insert staged data to PaymentStage table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage payment data\Insert staged data to PaymentStage table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage payment data\Insert staged data to PaymentStage table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage payment data\Insert staged data to PaymentStage table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage payment data\Insert staged data to PaymentStage table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join on FeeSequenceId and remove payments for undefined fees"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Inputs[Merge Join Left Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Stage payment data\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Inputs[Merge Join Left Input].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      lineageId="Package\Stage payment data\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[PaymentAmount]" />
                    <inputColumn
                      refId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Inputs[Merge Join Left Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Stage payment data\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[TransactionType]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Inputs[Merge Join Right Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Stage payment data\Sort fee data by FeeSequenceId.Outputs[Sort Output].Columns[FeeSequenceId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Inputs[Merge Join Left Input].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[PaymentAmount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[PaymentAmount]"
                      name="PaymentAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Inputs[Merge Join Left Input].Columns[PaymentAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output].Columns[TransactionType]"
                      name="TransactionType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Inputs[Merge Join Left Input].Columns[TransactionType]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage payment data\Sort fee data by FeeSequenceId"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort fee data by FeeSequenceId"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Stage payment data\Sort fee data by FeeSequenceId.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage payment data\Sort fee data by FeeSequenceId.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage payment data\Sort fee data by FeeSequenceId.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage payment data\Sort fee data by FeeSequenceId.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage payment data\Sort fee data by FeeSequenceId.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage payment data\Sort payment data by FeeSequenceId"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort payment data by FeeSequenceId"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Stage payment data\Sort payment data by FeeSequenceId.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage payment data\Sort payment data by FeeSequenceId.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage payment data\Sort payment data by FeeSequenceId.Inputs[Sort Input].Columns[PaymentAmount]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentAmount"
                      lineageId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Stage payment data\Sort payment data by FeeSequenceId.Inputs[Sort Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[TransactionType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage payment data\Sort payment data by FeeSequenceId.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage payment data\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage payment data\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Stage payment data\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[PaymentAmount]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage payment data\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[PaymentAmount]"
                      name="PaymentAmount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Stage payment data\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Stage payment data\Sort payment data by FeeSequenceId.Outputs[Sort Output].Columns[TransactionType]"
                      name="TransactionType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output].Columns[TransactionType]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Stage payment data.Paths[Derived Column Output]"
              endId="Package\Stage payment data\Handle numbers.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Stage payment data\Handle strings.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage payment data.Paths[Merge Join Output]"
              endId="Package\Stage payment data\Handle strings.Inputs[Derived Column Input]"
              name="Merge Join Output"
              startId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Outputs[Merge Join Output]" />
            <path
              refId="Package\Stage payment data.Paths[OLE DB Source Output]"
              endId="Package\Stage payment data\Sort fee data by FeeSequenceId.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Stage payment data\Get selected columns from staged fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Stage payment data.Paths[OLE DB Source Output1]"
              endId="Package\Stage payment data\Sort payment data by FeeSequenceId.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Stage payment data\Get selected columns from extracted payment data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Stage payment data.Paths[Output 0]"
              endId="Package\Stage payment data\Insert staged data to PaymentStage table.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Stage payment data\Handle numbers.Outputs[Output 0]" />
            <path
              refId="Package\Stage payment data.Paths[Sort Output]"
              endId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Stage payment data\Sort payment data by FeeSequenceId.Outputs[Sort Output]" />
            <path
              refId="Package\Stage payment data.Paths[Sort Output1]"
              endId="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Stage payment data\Sort fee data by FeeSequenceId.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Start new session"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B5601598-56B0-49B6-9477-4ECF8EE7502E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Start new session"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2AE594AF-1E0E-4046-88A5-B26D8D809332}"
          SQLTask:SqlStatementSource="INSERT INTO [DWLOG].[Sessions] ([SessionId], [StartTime])&#xA;VALUES (?, GETUTCDATE());" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::SessionId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="36" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Transform selected strings to Proper Case"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{818D5168-3A6F-4F9B-8EBC-7FBB221ED7B3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Transform selected strings to Proper Case"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2AE594AF-1E0E-4046-88A5-B26D8D809332}"
          SQLTask:SqlStatementSource="UPDATE [DW].[BusinessDim]&#xA;SET [BusinessName] = [DW].[TOPROPERCASE]([BusinessName]),&#xA;    [BusinessName2] = [DW].[TOPROPERCASE]([BusinessName2]);&#xA;&#xA;UPDATE [DW].[IndustryDim]&#xA;SET [Industry] = [DW].[TOPROPERCASE]([Industry]);&#xA;&#xA;UPDATE [DW].[FeeDim]&#xA;SET [RecordType] = [DW].[TOPROPERCASE]([RecordType]);&#xA;&#xA;UPDATE [DW].[TransactionTypeDim]&#xA;SET [TransactionType] = [DW].[TOPROPERCASE]([TransactionType]);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate staging tables, dimensions and fact tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8a37f0e7-4efa-4d68-8073-106c1679b216}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate staging tables, dimensions and fact tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2AE594AF-1E0E-4046-88A5-B26D8D809332}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [DWSTAGE].[LicenseExtract];&#xA;&#xA;TRUNCATE TABLE [DWSTAGE].[FeeExtract];&#xA;&#xA;TRUNCATE TABLE [DWSTAGE].[PaymentExtract];&#xA;&#xA;TRUNCATE TABLE [DWSTAGE].[LicenseStage];&#xA;&#xA;TRUNCATE TABLE [DWSTAGE].[FeeStage];&#xA;&#xA;TRUNCATE TABLE [DWSTAGE].[PaymentStage];&#xA;&#xA;TRUNCATE TABLE [DW].[LicenseFact];&#xA;&#xA;TRUNCATE TABLE [DW].[PaymentFact];&#xA;&#xA;DELETE FROM [DW].[FeeDim];&#xA;IF EXISTS &#xA;(&#xA;    SELECT * &#xA;    FROM sys.identity_columns &#xA;    WHERE object_id = OBJECT_ID('DW.FeeDim') &#xA;        AND last_value IS NOT NULL&#xA;)&#xA;DBCC CHECKIDENT ([DW.FeeDim], RESEED, 0);&#xA;&#xA;DELETE FROM [DW].[BusinessDim];&#xA;IF EXISTS &#xA;(&#xA;    SELECT * &#xA;    FROM sys.identity_columns &#xA;    WHERE object_id = OBJECT_ID('DW.BusinessDim') &#xA;        AND last_value IS NOT NULL&#xA;)&#xA;DBCC CHECKIDENT ([DW.BusinessDim], RESEED, 0);&#xA;&#xA;DELETE FROM [DW].[IndustryDim];&#xA;IF EXISTS &#xA;(&#xA;    SELECT * &#xA;    FROM sys.identity_columns &#xA;    WHERE object_id = OBJECT_ID('DW.IndustryDim') &#xA;        AND last_value IS NOT NULL&#xA;)&#xA;DBCC CHECKIDENT ([DW.IndustryDim], RESEED, 0);&#xA;&#xA;DELETE FROM [DW].[TimeDim];&#xA;&#xA;DELETE FROM [DW].[TransactionTypeDim];&#xA;IF EXISTS &#xA;(&#xA;    SELECT * &#xA;    FROM sys.identity_columns &#xA;    WHERE object_id = OBJECT_ID('DW.TransactionTypeDim') &#xA;        AND last_value IS NOT NULL&#xA;)&#xA;DBCC CHECKIDENT ([DW.TransactionTypeDim], RESEED, 0);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{FB48CB7C-01BB-437F-B1EF-1F1213B198ED}"
      DTS:From="Package\Generate session ID"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Start new session" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{83332D04-3F88-4E19-9D11-27E5E48E4BCD}"
      DTS:From="Package\Ensure DWSTAGE, DWLOG and DW schemas exist"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Ensure logging tables, staging tables, dimensions and fact tables exist" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{C46E79EB-F5C5-4C91-99C1-5FC14F0719DB}"
      DTS:From="Package\Ensure correctness of license data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\Normalize selected data in LicenseExtract table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{779C5651-066E-47C5-945D-063ADD048BF2}"
      DTS:From="Package\Ensure correctness of fee data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\Normalize selected data in FeeExtract table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 12]"
      DTS:CreationName=""
      DTS:DTSID="{BD4DD071-7EF4-40A0-81DA-B748685D3B73}"
      DTS:From="Package\Ensure TOPROPERCASE function exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 12"
      DTS:To="Package\Generate session ID" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 13]"
      DTS:CreationName=""
      DTS:DTSID="{9BD409B5-BB1A-4A2C-990E-9195F7186D67}"
      DTS:From="Package\Normalize selected data in LicenseExtract table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 13"
      DTS:To="Package\Stage license data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 14]"
      DTS:CreationName=""
      DTS:DTSID="{FC28308C-C184-4B52-992B-1847CCA6CD18}"
      DTS:From="Package\Ensure NORMALIZE function exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 14"
      DTS:To="Package\Generate session ID" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 15]"
      DTS:CreationName=""
      DTS:DTSID="{3BAF4402-156E-4D26-9B68-2A10B81B751C}"
      DTS:From="Package\Ensure correctness of payment data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 15"
      DTS:To="Package\Normalize selected data in PaymentExtract table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 16]"
      DTS:CreationName=""
      DTS:DTSID="{95D516E9-BC2E-4F7C-8798-25CE4212A014}"
      DTS:From="Package\Stage fee data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 16"
      DTS:To="Package\Stage payment data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 17]"
      DTS:CreationName=""
      DTS:DTSID="{DD1953A9-4EFF-449C-9CD6-E4777021BDB3}"
      DTS:From="Package\Stage license data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 17"
      DTS:To="Package\Create business dimension" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 18]"
      DTS:CreationName=""
      DTS:DTSID="{70619504-C6A7-47C7-8F00-F418F445350C}"
      DTS:From="Package\Stage fee data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 18"
      DTS:To="Package\Create business dimension" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 19]"
      DTS:CreationName=""
      DTS:DTSID="{397248D0-D0E9-4C18-B9F9-DB39CD24EE90}"
      DTS:From="Package\Stage license data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 19"
      DTS:To="Package\Create industry dimension" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{20F98D2F-E32A-48C4-8E7C-262FD3C0AB6C}"
      DTS:From="Package\Truncate staging tables, dimensions and fact tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Extract license data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 20]"
      DTS:CreationName=""
      DTS:DTSID="{5D25D455-7B3C-4448-8B56-CB666B99B745}"
      DTS:From="Package\Stage fee data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 20"
      DTS:To="Package\Create industry dimension" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 21]"
      DTS:CreationName=""
      DTS:DTSID="{4CA00C1E-0957-400D-BF79-993F3CF5D58B}"
      DTS:From="Package\Stage license data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 21"
      DTS:To="Package\Create time dimension" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 22]"
      DTS:CreationName=""
      DTS:DTSID="{208D9CCA-37C0-4403-A18B-B0552FADF61C}"
      DTS:From="Package\Stage fee data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 22"
      DTS:To="Package\Create time dimension" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 23]"
      DTS:CreationName=""
      DTS:DTSID="{E1FDC2B0-343C-445F-B6E6-742F129A2FCA}"
      DTS:From="Package\Stage payment data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 23"
      DTS:To="Package\Create transaction type dimension" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 24]"
      DTS:CreationName=""
      DTS:DTSID="{9942A32D-125B-44E5-92B6-6FDAC6808A07}"
      DTS:From="Package\Create industry dimension"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 24"
      DTS:To="Package\Create fee dimension" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 25]"
      DTS:CreationName=""
      DTS:DTSID="{8F076B76-FAC5-4D86-B62E-50A45EF02A8D}"
      DTS:From="Package\Create business dimension"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 25"
      DTS:To="Package\Create license fact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 26]"
      DTS:CreationName=""
      DTS:DTSID="{B5D2FC31-21EF-43F4-9A97-C59630433BDB}"
      DTS:From="Package\Create industry dimension"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 26"
      DTS:To="Package\Create license fact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 27]"
      DTS:CreationName=""
      DTS:DTSID="{B714AA78-FE4A-440A-96D6-3A7E821CDC59}"
      DTS:From="Package\Create time dimension"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 27"
      DTS:To="Package\Create license fact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 28]"
      DTS:CreationName=""
      DTS:DTSID="{21F1ADA2-9366-426D-BBA4-D64670525364}"
      DTS:From="Package\Create business dimension"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 28"
      DTS:To="Package\Create payment fact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 29]"
      DTS:CreationName=""
      DTS:DTSID="{A1CDE8A9-0787-430B-ABC4-04473A2C1944}"
      DTS:From="Package\Create fee dimension"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 29"
      DTS:To="Package\Create payment fact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{33A96024-0F1A-499F-B736-04B84CD311CC}"
      DTS:From="Package\Normalize selected data in FeeExtract table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Stage fee data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 30]"
      DTS:CreationName=""
      DTS:DTSID="{2BAAA748-0189-40AB-9E28-0B3EB3D56F7C}"
      DTS:From="Package\Create time dimension"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 30"
      DTS:To="Package\Create payment fact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 31]"
      DTS:CreationName=""
      DTS:DTSID="{3D4C4CF9-C61F-4047-8841-D2F716D702D8}"
      DTS:From="Package\Create transaction type dimension"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 31"
      DTS:To="Package\Create payment fact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 32]"
      DTS:CreationName=""
      DTS:DTSID="{A52DFDF4-80B7-42D0-BFFC-500FB9F6346A}"
      DTS:From="Package\Create license fact table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 32"
      DTS:To="Package\Transform selected strings to Proper Case" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 33]"
      DTS:CreationName=""
      DTS:DTSID="{D329EC2E-579A-4788-AA4E-E3B9574ACEF1}"
      DTS:From="Package\Create payment fact table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 33"
      DTS:To="Package\Transform selected strings to Proper Case" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 34]"
      DTS:CreationName=""
      DTS:DTSID="{1C71170D-F227-44ED-A730-F679019D2683}"
      DTS:From="Package\Start new session"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 34"
      DTS:To="Package\Truncate staging tables, dimensions and fact tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 35]"
      DTS:CreationName=""
      DTS:DTSID="{67C0F206-31C5-4F63-8856-0513463C8B3B}"
      DTS:From="Package\Transform selected strings to Proper Case"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 35"
      DTS:To="Package\Finish session" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 36]"
      DTS:CreationName=""
      DTS:DTSID="{479D3CFE-5C03-461C-B3F5-E999D9ABF341}"
      DTS:From="Package\Normalize selected data in PaymentExtract table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 36"
      DTS:To="Package\Stage payment data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{E85E01F7-8E17-4EAC-BB77-6DA837AAAD39}"
      DTS:From="Package\Ensure logging tables, staging tables, dimensions and fact tables exist"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Generate session ID" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{0E3430C5-43C4-40D3-8B9F-00B3DF8C5D1D}"
      DTS:From="Package\Truncate staging tables, dimensions and fact tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Extract fee data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{BF4218F1-40E0-4892-B122-2722F289C2E3}"
      DTS:From="Package\Truncate staging tables, dimensions and fact tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Extract payment data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{60F6AE70-D8B1-495C-8D14-F115B4BA60C9}"
      DTS:From="Package\Extract license data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Ensure correctness of license data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{462E026C-57BF-4D0B-BEB4-3928468FBCED}"
      DTS:From="Package\Extract fee data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Ensure correctness of fee data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{614B8395-1D3F-4B2E-BA69-1B92E03001FA}"
      DTS:From="Package\Extract payment data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Ensure correctness of payment data" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="153,42"
          Id="Package\Create business dimension"
          TopLeft="220,1131" />
        <NodeLayout
          Size="179,42"
          Id="Package\Create fee dimension"
          TopLeft="589,1256" />
        <NodeLayout
          Size="150,42"
          Id="Package\Create industry dimension"
          TopLeft="506,1129" />
        <NodeLayout
          Size="144,42"
          Id="Package\Create license fact table"
          TopLeft="235,1449" />
        <NodeLayout
          Size="153,42"
          Id="Package\Create payment fact table"
          TopLeft="771,1448" />
        <NodeLayout
          Size="135,42"
          Id="Package\Create time dimension"
          TopLeft="776,1132" />
        <NodeLayout
          Size="164,42"
          Id="Package\Create transaction type dimension"
          TopLeft="1078,1129" />
        <NodeLayout
          Size="172,42"
          Id="Package\Ensure correctness of fee data"
          TopLeft="754,735" />
        <NodeLayout
          Size="170,42"
          Id="Package\Ensure correctness of license data"
          TopLeft="427,732" />
        <NodeLayout
          Size="169,42"
          Id="Package\Ensure correctness of payment data"
          TopLeft="1078,733" />
        <NodeLayout
          Size="206,42"
          Id="Package\Ensure DWSTAGE, DWLOG and DW schemas exist"
          TopLeft="737,177" />
        <NodeLayout
          Size="256,42"
          Id="Package\Ensure logging tables, staging tables, dimensions and fact tables exist"
          TopLeft="712,249" />
        <NodeLayout
          Size="172,42"
          Id="Package\Ensure NORMALIZE function exists"
          TopLeft="1034,249" />
        <NodeLayout
          Size="192,42"
          Id="Package\Ensure TOPROPERCASE function exists"
          TopLeft="465,248" />
        <NodeLayout
          Size="155,42"
          Id="Package\Extract fee data"
          TopLeft="761,648" />
        <NodeLayout
          Size="134,42"
          Id="Package\Extract license data"
          TopLeft="450,646" />
        <NodeLayout
          Size="143,42"
          Id="Package\Extract payment data"
          TopLeft="1091,646" />
        <NodeLayout
          Size="143,42"
          Id="Package\Finish session"
          TopLeft="497,1662" />
        <NodeLayout
          Size="174,42"
          Id="Package\Generate session ID"
          TopLeft="753,351" />
        <NodeLayout
          Size="191,42"
          Id="Package\Normalize selected data in FeeExtract table"
          TopLeft="745,822" />
        <NodeLayout
          Size="191,42"
          Id="Package\Normalize selected data in LicenseExtract table"
          TopLeft="416,819" />
        <NodeLayout
          Size="191,42"
          Id="Package\Normalize selected data in PaymentExtract table"
          TopLeft="1066,824" />
        <NodeLayout
          Size="148,42"
          Id="Package\Stage fee data"
          TopLeft="770,910" />
        <NodeLayout
          Size="165,42"
          Id="Package\Stage license data"
          TopLeft="425,909" />
        <NodeLayout
          Size="174,42"
          Id="Package\Stage payment data"
          TopLeft="1075,959" />
        <NodeLayout
          Size="162,42"
          Id="Package\Start new session"
          TopLeft="757,441" />
        <NodeLayout
          Size="189,42"
          Id="Package\Transform selected strings to Proper Case"
          TopLeft="477,1569" />
        <NodeLayout
          Size="204,42"
          Id="Package\Truncate staging tables, dimensions and fact tables"
          TopLeft="737,530" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="839,393">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="840,219">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="511.75,774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="840.25,777">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 12]"
          TopLeft="561,290">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="237.5,61"
              Start="0,0"
              End="237.5,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.0528301886792" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.0528301886792"
                    Point2="0,40.0528301886792"
                    Point3="4,40.0528301886792" />
                  <mssgle:LineSegment
                    End="233.5,40.0528301886792" />
                  <mssgle:CubicBezierSegment
                    Point1="233.5,40.0528301886792"
                    Point2="237.5,40.0528301886792"
                    Point3="237.5,44.0528301886792" />
                  <mssgle:LineSegment
                    End="237.5,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 13]"
          TopLeft="509.5,861">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 14]"
          TopLeft="1120,291">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-238.5,60"
              Start="0,0"
              End="-238.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.3962264150943" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.3962264150943"
                    Point2="0,39.3962264150943"
                    Point3="-4,39.3962264150943" />
                  <mssgle:LineSegment
                    End="-234.5,39.3962264150943" />
                  <mssgle:CubicBezierSegment
                    Point1="-234.5,39.3962264150943"
                    Point2="-238.5,39.3962264150943"
                    Point3="-238.5,43.3962264150943" />
                  <mssgle:LineSegment
                    End="-238.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 15]"
          TopLeft="1162,775">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 16]"
          TopLeft="918,931">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="157,49"
              Start="0,0"
              End="149.5,49">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="74.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="74.5,0"
                    Point2="78.5,0"
                    Point3="78.5,4" />
                  <mssgle:LineSegment
                    End="78.5,45" />
                  <mssgle:CubicBezierSegment
                    Point1="78.5,45"
                    Point2="78.5,49"
                    Point3="82.5,49" />
                  <mssgle:LineSegment
                    End="149.5,49" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 17]"
          TopLeft="468.25,951">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-195.916666666667,180"
              Start="0,0"
              End="-195.916666666667,172.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,74.0937238768051" />
                  <mssgle:CubicBezierSegment
                    Point1="0,74.0937238768051"
                    Point2="0,78.0937238768051"
                    Point3="-4,78.0937238768051" />
                  <mssgle:LineSegment
                    End="-191.916666666667,78.0937238768051" />
                  <mssgle:CubicBezierSegment
                    Point1="-191.916666666667,78.0937238768051"
                    Point2="-195.916666666667,78.0937238768051"
                    Point3="-195.916666666667,82.0937238768051" />
                  <mssgle:LineSegment
                    End="-195.916666666667,172.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 18]"
          TopLeft="809,952">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-488.333333333333,179"
              Start="0,0"
              End="-488.333333333333,171.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,86.8928701655443" />
                  <mssgle:CubicBezierSegment
                    Point1="0,86.8928701655443"
                    Point2="0,90.8928701655443"
                    Point3="-4,90.8928701655443" />
                  <mssgle:LineSegment
                    End="-484.333333333333,90.8928701655443" />
                  <mssgle:CubicBezierSegment
                    Point1="-484.333333333333,90.8928701655443"
                    Point2="-488.333333333333,90.8928701655443"
                    Point3="-488.333333333333,94.8928701655443" />
                  <mssgle:LineSegment
                    End="-488.333333333333,171.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 19]"
          TopLeft="507.5,951">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49.8333333333334,178"
              Start="0,0"
              End="49.8333333333334,170.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,101.672823218997" />
                  <mssgle:CubicBezierSegment
                    Point1="0,101.672823218997"
                    Point2="0,105.672823218997"
                    Point3="4,105.672823218997" />
                  <mssgle:LineSegment
                    End="45.8333333333334,105.672823218997" />
                  <mssgle:CubicBezierSegment
                    Point1="45.8333333333334,105.672823218997"
                    Point2="49.8333333333334,105.672823218997"
                    Point3="49.8333333333334,109.672823218997" />
                  <mssgle:LineSegment
                    End="49.8333333333334,170.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="790,572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-273,74"
              Start="0,0"
              End="-273,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.3032258064516" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.3032258064516"
                    Point2="0,25.3032258064516"
                    Point3="-4,25.3032258064516" />
                  <mssgle:LineSegment
                    End="-269,25.3032258064516" />
                  <mssgle:CubicBezierSegment
                    Point1="-269,25.3032258064516"
                    Point2="-273,25.3032258064516"
                    Point3="-273,29.3032258064516" />
                  <mssgle:LineSegment
                    End="-273,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 20]"
          TopLeft="844,952">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-239.333333333333,177"
              Start="0,0"
              End="-239.333333333333,169.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,101.079155672823" />
                  <mssgle:CubicBezierSegment
                    Point1="0,101.079155672823"
                    Point2="0,105.079155672823"
                    Point3="-4,105.079155672823" />
                  <mssgle:LineSegment
                    End="-235.333333333333,105.079155672823" />
                  <mssgle:CubicBezierSegment
                    Point1="-235.333333333333,105.079155672823"
                    Point2="-239.333333333333,105.079155672823"
                    Point3="-239.333333333333,109.079155672823" />
                  <mssgle:LineSegment
                    End="-239.333333333333,169.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 21]"
          TopLeft="546.75,951">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="275.583333333333,181"
              Start="0,0"
              End="275.583333333333,173.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,74.3768424955965" />
                  <mssgle:CubicBezierSegment
                    Point1="0,74.3768424955965"
                    Point2="0,78.3768424955965"
                    Point3="4,78.3768424955965" />
                  <mssgle:LineSegment
                    End="271.583333333333,78.3768424955965" />
                  <mssgle:CubicBezierSegment
                    Point1="271.583333333333,78.3768424955965"
                    Point2="275.583333333333,78.3768424955965"
                    Point3="275.583333333333,82.3768424955965" />
                  <mssgle:LineSegment
                    End="275.583333333333,173.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 22]"
          TopLeft="873.333333333333,952">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,180"
              Start="0,0"
              End="0,172.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,172.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 23]"
          TopLeft="1161,1001">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,128"
              Start="0,0"
              End="0,120.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,120.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 24]"
          TopLeft="604.666666666667,1171">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="73.8333333333334,85"
              Start="0,0"
              End="73.8333333333334,77.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5382585751979" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.5382585751979"
                    Point2="0,34.5382585751979"
                    Point3="4,34.5382585751979" />
                  <mssgle:LineSegment
                    End="69.8333333333334,34.5382585751979" />
                  <mssgle:CubicBezierSegment
                    Point1="69.8333333333334,34.5382585751979"
                    Point2="73.8333333333334,34.5382585751979"
                    Point3="73.8333333333334,38.5382585751979" />
                  <mssgle:LineSegment
                    End="73.8333333333334,77.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 25]"
          TopLeft="272.666666666667,1173">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,276"
              Start="0,0"
              End="0,268.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,268.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 26]"
          TopLeft="557.333333333333,1171">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-250.333333333333,278"
              Start="0,0"
              End="-250.333333333333,270.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,108.960422163588" />
                  <mssgle:CubicBezierSegment
                    Point1="0,108.960422163588"
                    Point2="0,112.960422163588"
                    Point3="-4,112.960422163588" />
                  <mssgle:LineSegment
                    End="-246.333333333333,112.960422163588" />
                  <mssgle:CubicBezierSegment
                    Point1="-246.333333333333,112.960422163588"
                    Point2="-250.333333333333,112.960422163588"
                    Point3="-250.333333333333,116.960422163588" />
                  <mssgle:LineSegment
                    End="-250.333333333333,270.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 27]"
          TopLeft="822.333333333333,1174">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-481.333333333333,275"
              Start="0,0"
              End="-481.333333333333,267.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,151.465175394001" />
                  <mssgle:CubicBezierSegment
                    Point1="0,151.465175394001"
                    Point2="0,155.465175394001"
                    Point3="-4,155.465175394001" />
                  <mssgle:LineSegment
                    End="-477.333333333333,155.465175394001" />
                  <mssgle:CubicBezierSegment
                    Point1="-477.333333333333,155.465175394001"
                    Point2="-481.333333333333,155.465175394001"
                    Point3="-481.333333333333,159.465175394001" />
                  <mssgle:LineSegment
                    End="-481.333333333333,267.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 28]"
          TopLeft="320.666666666667,1173">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="483.333333333333,275"
              Start="0,0"
              End="483.333333333333,267.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,173.65234375" />
                  <mssgle:CubicBezierSegment
                    Point1="0,173.65234375"
                    Point2="0,177.65234375"
                    Point3="4,177.65234375" />
                  <mssgle:LineSegment
                    End="479.333333333333,177.65234375" />
                  <mssgle:CubicBezierSegment
                    Point1="479.333333333333,177.65234375"
                    Point2="483.333333333333,177.65234375"
                    Point3="483.333333333333,181.65234375" />
                  <mssgle:LineSegment
                    End="483.333333333333,267.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 29]"
          TopLeft="678.5,1298">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="154.5,150"
              Start="0,0"
              End="154.5,142.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,78.8519855595668" />
                  <mssgle:CubicBezierSegment
                    Point1="0,78.8519855595668"
                    Point2="0,82.8519855595668"
                    Point3="4,82.8519855595668" />
                  <mssgle:LineSegment
                    End="150.5,82.8519855595668" />
                  <mssgle:CubicBezierSegment
                    Point1="150.5,82.8519855595668"
                    Point2="154.5,82.8519855595668"
                    Point3="154.5,86.8519855595668" />
                  <mssgle:LineSegment
                    End="154.5,142.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="842.25,864">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 30]"
          TopLeft="863.333333333333,1174">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,274"
              Start="0,0"
              End="0,266.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,266.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 31]"
          TopLeft="1160,1171">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-269,277"
              Start="0,0"
              End="-269,269.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,189.520547945205" />
                  <mssgle:CubicBezierSegment
                    Point1="0,189.520547945205"
                    Point2="0,193.520547945205"
                    Point3="-4,193.520547945205" />
                  <mssgle:LineSegment
                    End="-265,193.520547945205" />
                  <mssgle:CubicBezierSegment
                    Point1="-265,193.520547945205"
                    Point2="-269,193.520547945205"
                    Point3="-269,197.520547945205" />
                  <mssgle:LineSegment
                    End="-269,269.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 32]"
          TopLeft="307,1491">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="234.333333333333,78"
              Start="0,0"
              End="234.333333333333,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.4071353620147" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.4071353620147"
                    Point2="0,46.4071353620147"
                    Point3="4,46.4071353620147" />
                  <mssgle:LineSegment
                    End="230.333333333333,46.4071353620147" />
                  <mssgle:CubicBezierSegment
                    Point1="230.333333333333,46.4071353620147"
                    Point2="234.333333333333,46.4071353620147"
                    Point3="234.333333333333,50.4071353620147" />
                  <mssgle:LineSegment
                    End="234.333333333333,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 33]"
          TopLeft="847.5,1490">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-245.833333333333,79"
              Start="0,0"
              End="-245.833333333333,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.0020986358867" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.0020986358867"
                    Point2="0,47.0020986358867"
                    Point3="-4,47.0020986358867" />
                  <mssgle:LineSegment
                    End="-241.833333333333,47.0020986358867" />
                  <mssgle:CubicBezierSegment
                    Point1="-241.833333333333,47.0020986358867"
                    Point2="-245.833333333333,47.0020986358867"
                    Point3="-245.833333333333,51.0020986358867" />
                  <mssgle:LineSegment
                    End="-245.833333333333,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 34]"
          TopLeft="838.5,483">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 35]"
          TopLeft="570,1611">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 36]"
          TopLeft="1161.75,866">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,93"
              Start="0,0"
              End="0,85.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,85.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="840,291">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="838.75,572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,76"
              Start="0,0"
              End="0,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="888,572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="274.5,74"
              Start="0,0"
              End="274.5,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.3032258064516" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.3032258064516"
                    Point2="0,25.3032258064516"
                    Point3="4,25.3032258064516" />
                  <mssgle:LineSegment
                    End="270.5,25.3032258064516" />
                  <mssgle:CubicBezierSegment
                    Point1="270.5,25.3032258064516"
                    Point2="274.5,25.3032258064516"
                    Point3="274.5,29.3032258064516" />
                  <mssgle:LineSegment
                    End="274.5,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="514.5,688">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="839.25,690">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="1162.5,688">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Create business dimension">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="228,42"
          Id="Package\Create business dimension\Get distinct businesses without addresses from staged fee data"
          TopLeft="587,90" />
        <NodeLayout
          Size="166,42"
          Id="Package\Create business dimension\Insert data to BusinessDim table"
          TopLeft="612,498" />
        <NodeLayout
          Size="183,42"
          Id="Package\Create business dimension\Sort by BusinessName and BusinessName2"
          TopLeft="604,392" />
        <NodeLayout
          Size="157,42"
          Id="Package\Create business dimension\Generate dummy business"
          TopLeft="840,170" />
        <NodeLayout
          Size="162,42"
          Id="Package\Create business dimension\Generate missing address columns"
          TopLeft="616,170" />
        <NodeLayout
          Size="271,42"
          Id="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data"
          TopLeft="285,90" />
        <NodeLayout
          Size="162,42"
          Id="Package\Create business dimension\(starting point for dummy business)"
          TopLeft="840,91" />
        <NodeLayout
          Size="144,42"
          Id="Package\Create business dimension\Unify business data"
          TopLeft="625,288" />
        <EdgeLayout
          Id="Package\Create business dimension.Paths[Union All Output 1]"
          TopLeft="696.25,330">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62"
              Start="0,0"
              End="0,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create business dimension.Paths[Sort Output]"
          TopLeft="695.25,434">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64"
              Start="0,0"
              End="0,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create business dimension.Paths[OLE DB Source Output2]"
          TopLeft="919.75,133">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create business dimension.Paths[OLE DB Source Output1]"
          TopLeft="420.5,132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="242.5,156"
              Start="0,0"
              End="242.5,148.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,98.1090909090909" />
                  <mssgle:CubicBezierSegment
                    Point1="0,98.1090909090909"
                    Point2="0,102.109090909091"
                    Point3="4,102.109090909091" />
                  <mssgle:LineSegment
                    End="238.5,102.109090909091" />
                  <mssgle:CubicBezierSegment
                    Point1="238.5,102.109090909091"
                    Point2="242.5,102.109090909091"
                    Point3="242.5,106.109090909091" />
                  <mssgle:LineSegment
                    End="242.5,148.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create business dimension.Paths[OLE DB Source Output]"
          TopLeft="699,132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create business dimension.Paths[Derived Column Output1]"
          TopLeft="918.5,212">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-187.5,76"
              Start="0,0"
              End="-187.5,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.7454545454546" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.7454545454546"
                    Point2="0,49.7454545454546"
                    Point3="-4,49.7454545454546" />
                  <mssgle:LineSegment
                    End="-183.5,49.7454545454546" />
                  <mssgle:CubicBezierSegment
                    Point1="-183.5,49.7454545454546"
                    Point2="-187.5,49.7454545454546"
                    Point3="-187.5,53.7454545454546" />
                  <mssgle:LineSegment
                    End="-187.5,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create business dimension.Paths[Derived Column Output]"
          TopLeft="697,212">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,76"
              Start="0,0"
              End="0,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Create business dimension\Get distinct businesses without addresses from staged fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create business dimension\Insert data to BusinessDim table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create business dimension\Get distinct businesses with most recent addresses from staged license data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create business dimension\(starting point for dummy business)">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Create fee dimension">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="98,42"
          Id="Package\Create fee dimension\Sort"
          TopLeft="634,443" />
        <NodeLayout
          Size="143,42"
          Id="Package\Create fee dimension\Insert data to FeeDim table"
          TopLeft="610,542" />
        <NodeLayout
          Size="143,42"
          Id="Package\Create fee dimension\Load industry dimension"
          TopLeft="744,86" />
        <NodeLayout
          Size="140,42"
          Id="Package\Create fee dimension\Sort fee data by Industry"
          TopLeft="478,223" />
        <NodeLayout
          Size="130,42"
          Id="Package\Create fee dimension\Join on Industry"
          TopLeft="619,338" />
        <NodeLayout
          Size="142,42"
          Id="Package\Create fee dimension\Sort alphabetically"
          TopLeft="747,223" />
        <NodeLayout
          Size="327,42"
          Id="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data"
          TopLeft="385,86" />
        <EdgeLayout
          Id="Package\Create fee dimension.Paths[Sort Output2]"
          TopLeft="682.25,485">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create fee dimension.Paths[Sort Output1]"
          TopLeft="818,265">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-113.666666666667,73"
              Start="0,0"
              End="-113.666666666667,65.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.2674772036474" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.2674772036474"
                    Point2="0,43.2674772036474"
                    Point3="-4,43.2674772036474" />
                  <mssgle:LineSegment
                    End="-109.666666666667,43.2674772036474" />
                  <mssgle:CubicBezierSegment
                    Point1="-109.666666666667,43.2674772036474"
                    Point2="-113.666666666667,43.2674772036474"
                    Point3="-113.666666666667,47.2674772036474" />
                  <mssgle:LineSegment
                    End="-113.666666666667,65.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create fee dimension.Paths[Sort Output]"
          TopLeft="548,265">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="115.666666666667,73"
              Start="0,0"
              End="115.666666666667,65.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.2674772036474" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.2674772036474"
                    Point2="0,43.2674772036474"
                    Point3="4,43.2674772036474" />
                  <mssgle:LineSegment
                    End="111.666666666667,43.2674772036474" />
                  <mssgle:CubicBezierSegment
                    Point1="111.666666666667,43.2674772036474"
                    Point2="115.666666666667,43.2674772036474"
                    Point3="115.666666666667,47.2674772036474" />
                  <mssgle:LineSegment
                    End="115.666666666667,65.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create fee dimension.Paths[OLE DB Source Output1]"
          TopLeft="816.75,128">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,95"
              Start="0,0"
              End="0,87.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,87.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create fee dimension.Paths[OLE DB Source Output]"
          TopLeft="548.25,128">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,95"
              Start="0,0"
              End="0,87.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,87.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create fee dimension.Paths[Merge Join Output]"
          TopLeft="683.5,380">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63"
              Start="0,0"
              End="0,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Create fee dimension\Insert data to FeeDim table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create fee dimension\Load industry dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create fee dimension\Get distinct combinations of Industry, RecordType, FeeType and FeeDescription from staged fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Create industry dimension">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="177,42"
          Id="Package\Create industry dimension\Sort by Industry and remove duplicates"
          TopLeft="570,348" />
        <NodeLayout
          Size="165,42"
          Id="Package\Create industry dimension\Insert data to IndustryDim table"
          TopLeft="574,444" />
        <NodeLayout
          Size="194,42"
          Id="Package\Create industry dimension\Get distinct industries from staged license data"
          TopLeft="453,92" />
        <NodeLayout
          Size="181,42"
          Id="Package\Create industry dimension\Get distinct industries from staged fee data"
          TopLeft="675,93" />
        <NodeLayout
          Size="142,42"
          Id="Package\Create industry dimension\Unify industry data"
          TopLeft="588,241" />
        <EdgeLayout
          Id="Package\Create industry dimension.Paths[Union All Output 1]"
          TopLeft="658.75,283">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create industry dimension.Paths[Sort Output]"
          TopLeft="657.5,390">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create industry dimension.Paths[OLE DB Source Output1]"
          TopLeft="765.5,135">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-84.1666666666666,106"
              Start="0,0"
              End="-84.1666666666666,98.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.891364902507" />
                  <mssgle:CubicBezierSegment
                    Point1="0,58.891364902507"
                    Point2="0,62.891364902507"
                    Point3="-4,62.891364902507" />
                  <mssgle:LineSegment
                    End="-80.1666666666666,62.891364902507" />
                  <mssgle:CubicBezierSegment
                    Point1="-80.1666666666666,62.891364902507"
                    Point2="-84.1666666666666,62.891364902507"
                    Point3="-84.1666666666666,66.891364902507" />
                  <mssgle:LineSegment
                    End="-84.1666666666666,98.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create industry dimension.Paths[OLE DB Source Output]"
          TopLeft="550,134">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="86.6666666666666,107"
              Start="0,0"
              End="86.6666666666666,99.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.4846796657382" />
                  <mssgle:CubicBezierSegment
                    Point1="0,59.4846796657382"
                    Point2="0,63.4846796657382"
                    Point3="4,63.4846796657382" />
                  <mssgle:LineSegment
                    End="82.6666666666666,63.4846796657382" />
                  <mssgle:CubicBezierSegment
                    Point1="82.6666666666666,63.4846796657382"
                    Point2="86.6666666666666,63.4846796657382"
                    Point3="86.6666666666666,67.4846796657382" />
                  <mssgle:LineSegment
                    End="86.6666666666666,99.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Create industry dimension\Get distinct industries from staged license data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create industry dimension\Insert data to IndustryDim table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create industry dimension\Get distinct industries from staged fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Create license fact table">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="136,42"
          Id="Package\Create license fact table\Get industry dimension"
          TopLeft="768,55" />
        <NodeLayout
          Size="130,42"
          Id="Package\Create license fact table\Sort by Industry"
          TopLeft="581,272" />
        <NodeLayout
          Size="160,42"
          Id="Package\Create license fact table\Insert data to LicenseFact table"
          TopLeft="755,492" />
        <NodeLayout
          Size="167,42"
          Id="Package\Create license fact table\Sort business data by business names"
          TopLeft="453,165" />
        <NodeLayout
          Size="171,42"
          Id="Package\Create license fact table\Sort license data by business names"
          TopLeft="236,163" />
        <NodeLayout
          Size="145,42"
          Id="Package\Create license fact table\Load business dimension"
          TopLeft="465,54" />
        <NodeLayout
          Size="153,42"
          Id="Package\Create license fact table\Join on business names"
          TopLeft="354,271" />
        <NodeLayout
          Size="143,42"
          Id="Package\Create license fact table\Sort alphabetically"
          TopLeft="765,166" />
        <NodeLayout
          Size="159,42"
          Id="Package\Create license fact table\Calculate license duration"
          TopLeft="757,386" />
        <NodeLayout
          Size="130,42"
          Id="Package\Create license fact table\Join on Industry"
          TopLeft="770,275" />
        <NodeLayout
          Size="198,42"
          Id="Package\Create license fact table\Get selected columns from staged license data"
          TopLeft="225,54" />
        <EdgeLayout
          Id="Package\Create license fact table.Paths[OLE DB Source Output2]"
          TopLeft="537,96">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,69"
              Start="0,0"
              End="0,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create license fact table.Paths[OLE DB Source Output1]"
          TopLeft="322.75,96">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67"
              Start="0,0"
              End="0,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create license fact table.Paths[OLE DB Source Output]"
          TopLeft="836.25,97">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,69"
              Start="0,0"
              End="0,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create license fact table.Paths[Merge Join Output1]"
          TopLeft="835.75,317">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,69"
              Start="0,0"
              End="0,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create license fact table.Paths[Merge Join Output]"
          TopLeft="507,292.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="74,0"
              Start="0,0"
              End="66.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="66.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create license fact table.Paths[Derived Column Output]"
          TopLeft="835.75,428">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64"
              Start="0,0"
              End="0,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create license fact table.Paths[Sort Output3]"
          TopLeft="711,294.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59,0"
              Start="0,0"
              End="51.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="51.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create license fact table.Paths[Sort Output2]"
          TopLeft="835.75,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67"
              Start="0,0"
              End="0,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create license fact table.Paths[Sort Output1]"
          TopLeft="321.5,205">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84.8333333333333,66"
              Start="0,0"
              End="84.8333333333333,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.1901681759379" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.1901681759379"
                    Point2="0,39.1901681759379"
                    Point3="4,39.1901681759379" />
                  <mssgle:LineSegment
                    End="80.8333333333333,39.1901681759379" />
                  <mssgle:CubicBezierSegment
                    Point1="80.8333333333333,39.1901681759379"
                    Point2="84.8333333333333,39.1901681759379"
                    Point3="84.8333333333333,43.1901681759379" />
                  <mssgle:LineSegment
                    End="84.8333333333333,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create license fact table.Paths[Sort Output]"
          TopLeft="536.5,207">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-81.8333333333334,64"
              Start="0,0"
              End="-81.8333333333334,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.0025873221216" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.0025873221216"
                    Point2="0,38.0025873221216"
                    Point3="-4,38.0025873221216" />
                  <mssgle:LineSegment
                    End="-77.8333333333334,38.0025873221216" />
                  <mssgle:CubicBezierSegment
                    Point1="-77.8333333333334,38.0025873221216"
                    Point2="-81.8333333333334,38.0025873221216"
                    Point3="-81.8333333333334,42.0025873221216" />
                  <mssgle:LineSegment
                    End="-81.8333333333334,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Create license fact table\Get industry dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create license fact table\Insert data to LicenseFact table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create license fact table\Load business dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create license fact table\Get selected columns from staged license data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Create payment fact table">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="141,42"
          Id="Package\Create payment fact table\Sort fee data by fee details"
          TopLeft="590,300" />
        <NodeLayout
          Size="157,42"
          Id="Package\Create payment fact table\Sort industry data by Industry"
          TopLeft="356,204" />
        <NodeLayout
          Size="143,42"
          Id="Package\Create payment fact table\Load industry dimension"
          TopLeft="364,120" />
        <NodeLayout
          Size="197,42"
          Id="Package\Create payment fact table\Sort transaction type data by TransactionType"
          TopLeft="1044,489" />
        <NodeLayout
          Size="166,42"
          Id="Package\Create payment fact table\Insert data to PaymentFact table"
          TopLeft="1051,681" />
        <NodeLayout
          Size="154,42"
          Id="Package\Create payment fact table\Sort fee data by business names"
          TopLeft="185,93" />
        <NodeLayout
          Size="151,42"
          Id="Package\Create payment fact table\Sort data by FeeSequenceId"
          TopLeft="585,491" />
        <NodeLayout
          Size="154,42"
          Id="Package\Create payment fact table\Join data on business names"
          TopLeft="94,203" />
        <NodeLayout
          Size="136,42"
          Id="Package\Create payment fact table\Join data on fee details"
          TopLeft="592,394" />
        <NodeLayout
          Size="167,42"
          Id="Package\Create payment fact table\Sort business data by business names"
          TopLeft="0,93" />
        <NodeLayout
          Size="166,42"
          Id="Package\Create payment fact table\Sort payment data by FeeSequenceId"
          TopLeft="821,395" />
        <NodeLayout
          Size="151,42"
          Id="Package\Create payment fact table\Join data on FeeSequenceId"
          TopLeft="829,490" />
        <NodeLayout
          Size="157,42"
          Id="Package\Create payment fact table\Load transaction type dimension"
          TopLeft="1064,396" />
        <NodeLayout
          Size="136,42"
          Id="Package\Create payment fact table\Sort data by fee details"
          TopLeft="368,392" />
        <NodeLayout
          Size="135,42"
          Id="Package\Create payment fact table\Sort data by Industry"
          TopLeft="105,295" />
        <NodeLayout
          Size="145,42"
          Id="Package\Create payment fact table\Load business dimension"
          TopLeft="9,1" />
        <NodeLayout
          Size="131,42"
          Id="Package\Create payment fact table\Join data on industry"
          TopLeft="370,296" />
        <NodeLayout
          Size="158,42"
          Id="Package\Create payment fact table\Join data on TransactionType"
          TopLeft="1058,585" />
        <NodeLayout
          Size="205,42"
          Id="Package\Create payment fact table\Get selected columns from staged payment data"
          TopLeft="805,303" />
        <NodeLayout
          Size="156,42"
          Id="Package\Create payment fact table\Sort data by TransactionType"
          TopLeft="827,584" />
        <NodeLayout
          Size="130,42"
          Id="Package\Create payment fact table\Load fee dimension"
          TopLeft="598,205" />
        <NodeLayout
          Size="179,42"
          Id="Package\Create payment fact table\Get selected columns from staged fee data"
          TopLeft="175,0" />
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Sort Output9]"
          TopLeft="904.25,437">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Sort Output8]"
          TopLeft="504,414">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="88,0"
              Start="0,0"
              End="80.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="80.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Sort Output7]"
          TopLeft="1139.75,531">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Sort Output6]"
          TopLeft="435,246">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Sort Output5]"
          TopLeft="240,316.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="130,0"
              Start="0,0"
              End="122.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="122.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Sort Output4]"
          TopLeft="262,135">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-66.6666666666667,68"
              Start="0,0"
              End="-66.6666666666667,60.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.3804627249357" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.3804627249357"
                    Point2="0,40.3804627249357"
                    Point3="-4,40.3804627249357" />
                  <mssgle:LineSegment
                    End="-62.6666666666667,40.3804627249357" />
                  <mssgle:CubicBezierSegment
                    Point1="-62.6666666666667,40.3804627249357"
                    Point2="-66.6666666666667,40.3804627249357"
                    Point3="-66.6666666666667,44.3804627249357" />
                  <mssgle:LineSegment
                    End="-66.6666666666667,60.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Sort Output3]"
          TopLeft="983,605.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Sort Output2]"
          TopLeft="736,511.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,0"
              Start="0,0"
              End="85.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="85.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Sort Output1]"
          TopLeft="660.25,342">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Sort Output]"
          TopLeft="83.5,135">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="63.1666666666667,68"
              Start="0,0"
              End="63.1666666666667,60.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.3804627249357" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.3804627249357"
                    Point2="0,40.3804627249357"
                    Point3="4,40.3804627249357" />
                  <mssgle:LineSegment
                    End="59.1666666666667,40.3804627249357" />
                  <mssgle:CubicBezierSegment
                    Point1="59.1666666666667,40.3804627249357"
                    Point2="63.1666666666667,40.3804627249357"
                    Point3="63.1666666666667,44.3804627249357" />
                  <mssgle:LineSegment
                    End="63.1666666666667,60.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[OLE DB Source Output5]"
          TopLeft="263.25,42">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[OLE DB Source Output4]"
          TopLeft="435,162">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[OLE DB Source Output3]"
          TopLeft="82.5,43">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[OLE DB Source Output2]"
          TopLeft="1142.5,438">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[OLE DB Source Output1]"
          TopLeft="661.75,247">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[OLE DB Source Output]"
          TopLeft="905.75,345">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Merge Join Output3]"
          TopLeft="435.75,338">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Merge Join Output2]"
          TopLeft="904.75,532">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Merge Join Output1]"
          TopLeft="171.75,245">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Merge Join Output]"
          TopLeft="1135.5,627">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create payment fact table.Paths[Merge Join Output4]"
          TopLeft="660.25,436">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Create payment fact table\Load industry dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create payment fact table\Insert data to PaymentFact table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create payment fact table\Load transaction type dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create payment fact table\Load business dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create payment fact table\Get selected columns from staged payment data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create payment fact table\Load fee dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create payment fact table\Get selected columns from staged fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Create time dimension">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="153,42"
          Id="Package\Create time dimension\Get dates from staged fee data"
          TopLeft="684,100" />
        <NodeLayout
          Size="132,42"
          Id="Package\Create time dimension\Unify dates"
          TopLeft="599,228" />
        <NodeLayout
          Size="164,42"
          Id="Package\Create time dimension\Sort dates and remove duplicates"
          TopLeft="580,312" />
        <NodeLayout
          Size="160,42"
          Id="Package\Create time dimension\Derive date parts"
          TopLeft="582,403" />
        <NodeLayout
          Size="148,42"
          Id="Package\Create time dimension\Insert data to TimeDim table"
          TopLeft="584,495" />
        <NodeLayout
          Size="170,42"
          Id="Package\Create time dimension\Get dates from staged license data"
          TopLeft="486,101" />
        <EdgeLayout
          Id="Package\Create time dimension.Paths[Union All Output 1]"
          TopLeft="663.5,270">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create time dimension.Paths[Sort Output]"
          TopLeft="662,354">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create time dimension.Paths[OLE DB Source Output1]"
          TopLeft="760.5,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-74.8333333333334,86"
              Start="0,0"
              End="-74.8333333333334,78.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.9820359281437" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46.9820359281437"
                    Point2="0,50.9820359281437"
                    Point3="-4,50.9820359281437" />
                  <mssgle:LineSegment
                    End="-70.8333333333334,50.9820359281437" />
                  <mssgle:CubicBezierSegment
                    Point1="-70.8333333333334,50.9820359281437"
                    Point2="-74.8333333333334,50.9820359281437"
                    Point3="-74.8333333333334,54.9820359281437" />
                  <mssgle:LineSegment
                    End="-74.8333333333334,78.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create time dimension.Paths[OLE DB Source Output]"
          TopLeft="571,143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="73.3333333333334,85"
              Start="0,0"
              End="73.3333333333334,77.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.3892215568862" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46.3892215568862"
                    Point2="0,50.3892215568862"
                    Point3="4,50.3892215568862" />
                  <mssgle:LineSegment
                    End="69.3333333333334,50.3892215568862" />
                  <mssgle:CubicBezierSegment
                    Point1="69.3333333333334,50.3892215568862"
                    Point2="73.3333333333334,50.3892215568862"
                    Point3="73.3333333333334,54.3892215568862" />
                  <mssgle:LineSegment
                    End="73.3333333333334,77.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create time dimension.Paths[Derived Column Output]"
          TopLeft="660,445">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Create time dimension\Get dates from staged fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create time dimension\Insert data to TimeDim table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create time dimension\Get dates from staged license data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Create transaction type dimension">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="201,42"
          Id="Package\Create transaction type dimension\Insert data to TransactionTypeDim table"
          TopLeft="550,269" />
        <NodeLayout
          Size="256,42"
          Id="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data"
          TopLeft="520,101" />
        <EdgeLayout
          Id="Package\Create transaction type dimension.Paths[OLE DB Source Output]"
          TopLeft="649.25,143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,126"
              Start="0,0"
              End="0,118.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,118.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Create transaction type dimension\Get distinct and sorted TransactionTypes from payment data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create transaction type dimension\Insert data to TransactionTypeDim table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Ensure correctness of fee data">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="202,42"
          Id="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table"
          TopLeft="1231,797" />
        <NodeLayout
          Size="120,42"
          Id="Package\Ensure correctness of fee data\Multicast"
          TopLeft="1157,691" />
        <NodeLayout
          Size="134,42"
          Id="Package\Ensure correctness of fee data\Log missing FeeAmount"
          TopLeft="573,245" />
        <NodeLayout
          Size="135,42"
          Id="Package\Ensure correctness of fee data\Log invalid FeeAmount"
          TopLeft="1063,332" />
        <NodeLayout
          Size="176,42"
          Id="Package\Ensure correctness of fee data\Delete rows from FeeExtract table"
          TopLeft="998,900" />
        <NodeLayout
          Size="162,42"
          Id="Package\Ensure correctness of fee data\Include SessionId"
          TopLeft="1142,604" />
        <NodeLayout
          Size="130,42"
          Id="Package\Ensure correctness of fee data\Parse FeeDate"
          TopLeft="1442,86" />
        <NodeLayout
          Size="138,42"
          Id="Package\Ensure correctness of fee data\Log missing FeeDate"
          TopLeft="716,229" />
        <NodeLayout
          Size="130,42"
          Id="Package\Ensure correctness of fee data\Log invalid FeeDate"
          TopLeft="1444,388" />
        <NodeLayout
          Size="192,42"
          Id="Package\Ensure correctness of fee data\Get selected columns from extracted fee data"
          TopLeft="107,84" />
        <NodeLayout
          Size="115,42"
          Id="Package\Ensure correctness of fee data\Union 2"
          TopLeft="887,83" />
        <NodeLayout
          Size="115,42"
          Id="Package\Ensure correctness of fee data\Union 3"
          TopLeft="1271,86" />
        <NodeLayout
          Size="115,42"
          Id="Package\Ensure correctness of fee data\Union 1"
          TopLeft="528,338" />
        <NodeLayout
          Size="135,42"
          Id="Package\Ensure correctness of fee data\Parse FeeAmount"
          TopLeft="1067,84" />
        <NodeLayout
          Size="130,42"
          Id="Package\Ensure correctness of fee data\Multicast 1"
          TopLeft="872,384" />
        <NodeLayout
          Size="153,42"
          Id="Package\Ensure correctness of fee data\Log missing FeeSequenceId"
          TopLeft="408,214" />
        <NodeLayout
          Size="148,42"
          Id="Package\Ensure correctness of fee data\Log missing BusinessName"
          TopLeft="251,190" />
        <NodeLayout
          Size="130,42"
          Id="Package\Ensure correctness of fee data\Multicast 2"
          TopLeft="1262,387" />
        <NodeLayout
          Size="175,42"
          Id="Package\Ensure correctness of fee data\Get logs with High severity"
          TopLeft="1001,795" />
        <NodeLayout
          Size="125,42"
          Id="Package\Ensure correctness of fee data\Unify logs"
          TopLeft="1162,519" />
        <NodeLayout
          Size="148,42"
          Id="Package\Ensure correctness of fee data\Check for missing values"
          TopLeft="515,82" />
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Union All Output 13]"
          TopLeft="1386,107">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="56,0"
              Start="0,0"
              End="48.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="48.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Union All Output 12]"
          TopLeft="643,359">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="229,46"
              Start="0,0"
              End="221.5,46">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="110.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="110.5,0"
                    Point2="114.5,0"
                    Point3="114.5,4" />
                  <mssgle:LineSegment
                    End="114.5,42" />
                  <mssgle:CubicBezierSegment
                    Point1="114.5,42"
                    Point2="114.5,46"
                    Point3="118.5,46" />
                  <mssgle:LineSegment
                    End="221.5,46" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Union All Output 11]"
          TopLeft="1223.75,561">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Union All Output 1]"
          TopLeft="1002,104.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65,0"
              Start="0,0"
              End="57.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="57.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[OLE DB Source Output]"
          TopLeft="299,104">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="216,0"
              Start="0,0"
              End="208.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="208.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Multicast Output 22]"
          TopLeft="940.75,384">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-259"
              Start="0,0"
              End="0,-251.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-251.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Multicast Output 21]"
          TopLeft="1235.66666666667,733">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96.3333333333333,64"
              Start="0,0"
              End="96.3333333333333,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.1052631578947" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.1052631578947"
                    Point2="0,26.1052631578947"
                    Point3="4,26.1052631578947" />
                  <mssgle:LineSegment
                    End="92.3333333333333,26.1052631578947" />
                  <mssgle:CubicBezierSegment
                    Point1="92.3333333333333,26.1052631578947"
                    Point2="96.3333333333333,26.1052631578947"
                    Point3="96.3333333333333,30.1052631578947" />
                  <mssgle:LineSegment
                    End="96.3333333333333,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Multicast Output 2]"
          TopLeft="1327,429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-102.5,90"
              Start="0,0"
              End="-102.5,82.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41"
                    Point2="0,45"
                    Point3="-4,45" />
                  <mssgle:LineSegment
                    End="-98.5,45" />
                  <mssgle:CubicBezierSegment
                    Point1="-98.5,45"
                    Point2="-102.5,45"
                    Point3="-102.5,49" />
                  <mssgle:LineSegment
                    End="-102.5,82.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Multicast Output 12]"
          TopLeft="937,426">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="258.25,93"
              Start="0,0"
              End="258.25,85.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.7049608355091" />
                  <mssgle:CubicBezierSegment
                    Point1="0,56.7049608355091"
                    Point2="0,60.7049608355091"
                    Point3="4,60.7049608355091" />
                  <mssgle:LineSegment
                    End="254.25,60.7049608355091" />
                  <mssgle:CubicBezierSegment
                    Point1="254.25,60.7049608355091"
                    Point2="258.25,60.7049608355091"
                    Point3="258.25,64.7049608355091" />
                  <mssgle:LineSegment
                    End="258.25,85.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Multicast Output 11]"
          TopLeft="1217,733">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-128.5,62"
              Start="0,0"
              End="-128.5,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27"
                    Point2="0,31"
                    Point3="-4,31" />
                  <mssgle:LineSegment
                    End="-124.5,31" />
                  <mssgle:CubicBezierSegment
                    Point1="-124.5,31"
                    Point2="-128.5,31"
                    Point3="-128.5,35" />
                  <mssgle:LineSegment
                    End="-128.5,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Multicast Output 1]"
          TopLeft="1327.75,387">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-259"
              Start="0,0"
              End="0,-251.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-251.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[High severity]"
          TopLeft="1087.25,837">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63"
              Start="0,0"
              End="0,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-29.34193359375,21.91845703125,58.6838671875,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[FeeSequenceId is empty]"
          TopLeft="575,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-90.5,90"
              Start="0,0"
              End="-90.5,82.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.2985074626866" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.2985074626866"
                    Point2="0,40.2985074626866"
                    Point3="-4,40.2985074626866" />
                  <mssgle:LineSegment
                    End="-86.5,40.2985074626866" />
                  <mssgle:CubicBezierSegment
                    Point1="-86.5,40.2985074626866"
                    Point2="-90.5,40.2985074626866"
                    Point3="-90.5,44.2985074626866" />
                  <mssgle:LineSegment
                    End="-90.5,82.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-102.37798828125,45.2985074626866,114.2559765625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[FeeDate is empty]"
          TopLeft="631,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="154,105"
              Start="0,0"
              End="154,97.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.6981132075472" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.6981132075472"
                    Point2="0,31.6981132075472"
                    Point3="4,31.6981132075472" />
                  <mssgle:LineSegment
                    End="150,31.6981132075472" />
                  <mssgle:CubicBezierSegment
                    Point1="150,31.6981132075472"
                    Point2="154,31.6981132075472"
                    Point3="154,35.6981132075472" />
                  <mssgle:LineSegment
                    End="154,97.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="35.51201171875,36.6981132075472,82.9759765625,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[FeeAmount is empty]"
          TopLeft="603,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37,121"
              Start="0,0"
              End="37,113.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.1791044776119" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.1791044776119"
                    Point2="0,54.1791044776119"
                    Point3="4,54.1791044776119" />
                  <mssgle:LineSegment
                    End="33,54.1791044776119" />
                  <mssgle:CubicBezierSegment
                    Point1="33,54.1791044776119"
                    Point2="37,54.1791044776119"
                    Point3="37,58.1791044776119" />
                  <mssgle:LineSegment
                    End="37,113.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-29.83798828125,59.1791044776119,96.6759765625,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Derived Column Output7]"
          TopLeft="1202,106">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="69,0"
              Start="0,0"
              End="61.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="61.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Derived Column Output6]"
          TopLeft="1198,353">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="64,55"
              Start="0,0"
              End="56.5,55">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28,0" />
                  <mssgle:CubicBezierSegment
                    Point1="28,0"
                    Point2="32,0"
                    Point3="32,4" />
                  <mssgle:LineSegment
                    End="32,51" />
                  <mssgle:CubicBezierSegment
                    Point1="32,51"
                    Point2="32,55"
                    Point3="36,55" />
                  <mssgle:LineSegment
                    End="56.5,55" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Derived Column Output5]"
          TopLeft="1509,430">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-255.25,89"
              Start="0,0"
              End="-255.25,81.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.0939947780679" />
                  <mssgle:CubicBezierSegment
                    Point1="0,54.0939947780679"
                    Point2="0,58.0939947780679"
                    Point3="-4,58.0939947780679" />
                  <mssgle:LineSegment
                    End="-251.25,58.0939947780679" />
                  <mssgle:CubicBezierSegment
                    Point1="-251.25,58.0939947780679"
                    Point2="-255.25,58.0939947780679"
                    Point3="-255.25,62.0939947780679" />
                  <mssgle:LineSegment
                    End="-255.25,81.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Derived Column Output4]"
          TopLeft="1220,646">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Derived Column Output3]"
          TopLeft="785,271">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-167.4,67"
              Start="0,0"
              End="-167.4,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.4716525934861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.4716525934861"
                    Point2="0,46.4716525934861"
                    Point3="-4,46.4716525934861" />
                  <mssgle:LineSegment
                    End="-163.4,46.4716525934861" />
                  <mssgle:CubicBezierSegment
                    Point1="-163.4,46.4716525934861"
                    Point2="-167.4,46.4716525934861"
                    Point3="-167.4,50.4716525934861" />
                  <mssgle:LineSegment
                    End="-167.4,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Derived Column Output2]"
          TopLeft="640,287">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-43.8,51"
              Start="0,0"
              End="-43.8,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.1160115052733" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.1160115052733"
                    Point2="0,28.1160115052733"
                    Point3="-4,28.1160115052733" />
                  <mssgle:LineSegment
                    End="-39.8,28.1160115052733" />
                  <mssgle:CubicBezierSegment
                    Point1="-39.8,28.1160115052733"
                    Point2="-43.8,28.1160115052733"
                    Point3="-43.8,32.1160115052733" />
                  <mssgle:LineSegment
                    End="-43.8,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Derived Column Output1]"
          TopLeft="484.5,256">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="90.3,82"
              Start="0,0"
              End="90.3,74.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.2061361457335" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.2061361457335"
                    Point2="0,45.2061361457335"
                    Point3="4,45.2061361457335" />
                  <mssgle:LineSegment
                    End="86.3,45.2061361457335" />
                  <mssgle:CubicBezierSegment
                    Point1="86.3,45.2061361457335"
                    Point2="90.3,45.2061361457335"
                    Point3="90.3,49.2061361457335" />
                  <mssgle:LineSegment
                    End="90.3,74.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Derived Column Output]"
          TopLeft="325,232">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="228.4,106"
              Start="0,0"
              End="228.4,98.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.5223160434258" />
                  <mssgle:CubicBezierSegment
                    Point1="0,69.5223160434258"
                    Point2="0,73.5223160434258"
                    Point3="4,73.5223160434258" />
                  <mssgle:LineSegment
                    End="224.4,73.5223160434258" />
                  <mssgle:CubicBezierSegment
                    Point1="224.4,73.5223160434258"
                    Point2="228.4,73.5223160434258"
                    Point3="228.4,77.5223160434258" />
                  <mssgle:LineSegment
                    End="228.4,98.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Derived Column Error Output1]"
          TopLeft="1132.5,126">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,206"
              Start="0,0"
              End="0,198.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,198.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-64.96138671875,93.4453125,129.9227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Derived Column Error Output]"
          TopLeft="1508,128">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,260"
              Start="0,0"
              End="0,252.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,252.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-64.96138671875,120.4453125,129.9227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[Default]"
          TopLeft="663,103.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="224,0"
              Start="0,0"
              End="216.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="216.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="91.78361328125,5,32.9327734375,9.7978515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of fee data.Paths[BusinessName is empty]"
          TopLeft="547,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-222,66"
              Start="0,0"
              End="-222,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.9245283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.9245283018868"
                    Point2="0,19.9245283018868"
                    Point3="-4,19.9245283018868" />
                  <mssgle:LineSegment
                    End="-218,19.9245283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="-218,19.9245283018868"
                    Point2="-222,19.9245283018868"
                    Point3="-222,23.9245283018868" />
                  <mssgle:LineSegment
                    End="-222,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-166.08798828125,24.9245283018868,110.1759765625,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Ensure correctness of fee data\Insert logs to DataCorrectnessInfo table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Ensure correctness of fee data\Get selected columns from extracted fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Ensure correctness of license data">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="130,42"
          Id="Package\Ensure correctness of license data\Log invalid Longitude"
          TopLeft="1870,334" />
        <NodeLayout
          Size="183,42"
          Id="Package\Ensure correctness of license data\Parse LicenseExpirationDate"
          TopLeft="1458,78" />
        <NodeLayout
          Size="115,42"
          Id="Package\Ensure correctness of license data\Union 2"
          TopLeft="835,79" />
        <NodeLayout
          Size="174,42"
          Id="Package\Ensure correctness of license data\Log missing LicenseCreationDate"
          TopLeft="344,195" />
        <NodeLayout
          Size="176,42"
          Id="Package\Ensure correctness of license data\Parse LicenseCreationDate"
          TopLeft="1034,80" />
        <NodeLayout
          Size="130,42"
          Id="Package\Ensure correctness of license data\Log invalid Latitude"
          TopLeft="2246,398" />
        <NodeLayout
          Size="130,42"
          Id="Package\Ensure correctness of license data\Parse Latitude"
          TopLeft="2248,79" />
        <NodeLayout
          Size="183,42"
          Id="Package\Ensure correctness of license data\Log invalid LicenseExpirationDate"
          TopLeft="1456,333" />
        <NodeLayout
          Size="202,42"
          Id="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table"
          TopLeft="1598,838" />
        <NodeLayout
          Size="130,42"
          Id="Package\Ensure correctness of license data\Multicast 4"
          TopLeft="2062,398" />
        <NodeLayout
          Size="115,42"
          Id="Package\Ensure correctness of license data\Union 5"
          TopLeft="2073,78" />
        <NodeLayout
          Size="207,42"
          Id="Package\Ensure correctness of license data\Get selected columns from extracted license data"
          TopLeft="61,84" />
        <NodeLayout
          Size="130,42"
          Id="Package\Ensure correctness of license data\Multicast 3"
          TopLeft="1704,395" />
        <NodeLayout
          Size="136,42"
          Id="Package\Ensure correctness of license data\Log missing Latitude"
          TopLeft="691,212" />
        <NodeLayout
          Size="162,42"
          Id="Package\Ensure correctness of license data\Include SessionId"
          TopLeft="1479,642" />
        <NodeLayout
          Size="115,42"
          Id="Package\Ensure correctness of license data\Union 3"
          TopLeft="1272,79" />
        <NodeLayout
          Size="130,42"
          Id="Package\Ensure correctness of license data\Multicast 2"
          TopLeft="1268,388" />
        <NodeLayout
          Size="175,42"
          Id="Package\Ensure correctness of license data\Get logs with High severity"
          TopLeft="1368,836" />
        <NodeLayout
          Size="120,42"
          Id="Package\Ensure correctness of license data\Multicast"
          TopLeft="1499,732" />
        <NodeLayout
          Size="115,42"
          Id="Package\Ensure correctness of license data\Union 4"
          TopLeft="1707,79" />
        <NodeLayout
          Size="177,42"
          Id="Package\Ensure correctness of license data\Log invalid LicenseCreationDate"
          TopLeft="1028,329" />
        <NodeLayout
          Size="176,42"
          Id="Package\Ensure correctness of license data\Delete rows from LicenseExtract table"
          TopLeft="1365,941" />
        <NodeLayout
          Size="147,42"
          Id="Package\Ensure correctness of license data\Log missing BusinessName"
          TopLeft="189,171" />
        <NodeLayout
          Size="130,42"
          Id="Package\Ensure correctness of license data\Multicast 1"
          TopLeft="831,384" />
        <NodeLayout
          Size="145,42"
          Id="Package\Ensure correctness of license data\Unify log data"
          TopLeft="1488,556" />
        <NodeLayout
          Size="135,42"
          Id="Package\Ensure correctness of license data\Log missing Longitude"
          TopLeft="539,224" />
        <NodeLayout
          Size="115,42"
          Id="Package\Ensure correctness of license data\Union 1"
          TopLeft="473,335" />
        <NodeLayout
          Size="130,42"
          Id="Package\Ensure correctness of license data\Parse Longitude"
          TopLeft="1875,78" />
        <NodeLayout
          Size="148,42"
          Id="Package\Ensure correctness of license data\Check for missing values"
          TopLeft="474,82" />
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Output6]"
          TopLeft="1639,354">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65,62"
              Start="0,0"
              End="57.5,62">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="28.5,0"
                    Point2="32.5,0"
                    Point3="32.5,4" />
                  <mssgle:LineSegment
                    End="32.5,58" />
                  <mssgle:CubicBezierSegment
                    Point1="32.5,58"
                    Point2="32.5,62"
                    Point3="36.5,62" />
                  <mssgle:LineSegment
                    End="57.5,62" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Output5]"
          TopLeft="2311,440">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-704.833333333333,116"
              Start="0,0"
              End="-704.833333333333,108.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.6644295302014" />
                  <mssgle:CubicBezierSegment
                    Point1="0,80.6644295302014"
                    Point2="0,84.6644295302014"
                    Point3="-4,84.6644295302014" />
                  <mssgle:LineSegment
                    End="-700.833333333333,84.6644295302014" />
                  <mssgle:CubicBezierSegment
                    Point1="-700.833333333333,84.6644295302014"
                    Point2="-704.833333333333,84.6644295302014"
                    Point3="-704.833333333333,88.6644295302014" />
                  <mssgle:LineSegment
                    End="-704.833333333333,108.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Output4]"
          TopLeft="1205,350">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="63,59"
              Start="0,0"
              End="55.5,59">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="27.5,0"
                    Point2="31.5,0"
                    Point3="31.5,4" />
                  <mssgle:LineSegment
                    End="31.5,55" />
                  <mssgle:CubicBezierSegment
                    Point1="31.5,55"
                    Point2="31.5,59"
                    Point3="35.5,59" />
                  <mssgle:LineSegment
                    End="55.5,59" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Output3]"
          TopLeft="1210,100.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62,0"
              Start="0,0"
              End="54.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="54.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Output2]"
          TopLeft="431,237">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="88.8,98"
              Start="0,0"
              End="88.8,90.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.0268456375839" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.0268456375839"
                    Point2="0,54.0268456375839"
                    Point3="4,54.0268456375839" />
                  <mssgle:LineSegment
                    End="84.8,54.0268456375839" />
                  <mssgle:CubicBezierSegment
                    Point1="84.8,54.0268456375839"
                    Point2="88.8,54.0268456375839"
                    Point3="88.8,58.0268456375839" />
                  <mssgle:LineSegment
                    End="88.8,90.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Output1]"
          TopLeft="606.5,266">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-65.3,69"
              Start="0,0"
              End="-65.3,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.039309683605" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.039309683605"
                    Point2="0,38.039309683605"
                    Point3="-4,38.039309683605" />
                  <mssgle:LineSegment
                    End="-61.3,38.039309683605" />
                  <mssgle:CubicBezierSegment
                    Point1="-61.3,38.039309683605"
                    Point2="-65.3,38.039309683605"
                    Point3="-65.3,42.039309683605" />
                  <mssgle:LineSegment
                    End="-65.3,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Output]"
          TopLeft="759,254">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-196.4,81"
              Start="0,0"
              End="-196.4,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.1821471652594" />
                  <mssgle:CubicBezierSegment
                    Point1="0,52.1821471652594"
                    Point2="0,56.1821471652594"
                    Point3="-4,56.1821471652594" />
                  <mssgle:LineSegment
                    End="-192.4,56.1821471652594" />
                  <mssgle:CubicBezierSegment
                    Point1="-192.4,56.1821471652594"
                    Point2="-196.4,56.1821471652594"
                    Point3="-196.4,60.1821471652594" />
                  <mssgle:LineSegment
                    End="-196.4,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Error Output3]"
          TopLeft="1937.5,120">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,214"
              Start="0,0"
              End="0,206.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,206.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-64.96138671875,97.4453125,129.9227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Error Output2]"
          TopLeft="2312,121">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,277"
              Start="0,0"
              End="0,269.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,269.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-64.96138671875,128.9453125,129.9227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Error Output1]"
          TopLeft="1548.5,120">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,213"
              Start="0,0"
              End="0,205.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,205.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-64.96138671875,96.9453125,129.9227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Error Output]"
          TopLeft="1119.25,122">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,207"
              Start="0,0"
              End="0,199.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,199.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-64.96138671875,93.9453125,129.9227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Default]"
          TopLeft="622,101.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="213,0"
              Start="0,0"
              End="205.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="205.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="86.28361328125,5,32.9327734375,9.7978515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[BusinessName is empty]"
          TopLeft="506,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-243.5,47"
              Start="0,0"
              End="-243.5,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.188679245283" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.188679245283"
                    Point2="0,14.188679245283"
                    Point3="-4,14.188679245283" />
                  <mssgle:LineSegment
                    End="-239.5,14.188679245283" />
                  <mssgle:CubicBezierSegment
                    Point1="-239.5,14.188679245283"
                    Point2="-243.5,14.188679245283"
                    Point3="-243.5,18.188679245283" />
                  <mssgle:LineSegment
                    End="-243.5,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-176.83798828125,19.188679245283,110.1759765625,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Union All Output 15]"
          TopLeft="588,356">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="243,49"
              Start="0,0"
              End="235.5,49">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="117.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="117.5,0"
                    Point2="121.5,0"
                    Point3="121.5,4" />
                  <mssgle:LineSegment
                    End="121.5,45" />
                  <mssgle:CubicBezierSegment
                    Point1="121.5,45"
                    Point2="121.5,49"
                    Point3="125.5,49" />
                  <mssgle:LineSegment
                    End="235.5,49" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Union All Output 14]"
          TopLeft="1387,99.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="71,0"
              Start="0,0"
              End="63.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="63.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Union All Output 13]"
          TopLeft="1822,99.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="53,0"
              Start="0,0"
              End="45.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="45.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Union All Output 12]"
          TopLeft="2188,99.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="60,0"
              Start="0,0"
              End="52.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="52.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Union All Output 11]"
          TopLeft="1560.25,598">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Union All Output 1]"
          TopLeft="950,100.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84,0"
              Start="0,0"
              End="76.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="76.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[OLE DB Source Output]"
          TopLeft="268,104">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="206,0"
              Start="0,0"
              End="198.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="198.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Multicast Output 3]"
          TopLeft="1540.33333333333,774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-84.8333333333333,62"
              Start="0,0"
              End="-84.8333333333333,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.2894736842105" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.2894736842105"
                    Point2="0,25.2894736842105"
                    Point3="-4,25.2894736842105" />
                  <mssgle:LineSegment
                    End="-80.8333333333333,25.2894736842105" />
                  <mssgle:CubicBezierSegment
                    Point1="-80.8333333333333,25.2894736842105"
                    Point2="-84.8333333333333,25.2894736842105"
                    Point3="-84.8333333333333,29.2894736842105" />
                  <mssgle:LineSegment
                    End="-84.8333333333333,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Multicast Output 24]"
          TopLeft="1769,437">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-208.5,119"
              Start="0,0"
              End="-208.5,111.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.5"
                    Point2="0,59.5"
                    Point3="-4,59.5" />
                  <mssgle:LineSegment
                    End="-204.5,59.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-204.5,59.5"
                    Point2="-208.5,59.5"
                    Point3="-208.5,63.5" />
                  <mssgle:LineSegment
                    End="-208.5,111.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Multicast Output 23]"
          TopLeft="2127,440">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-543.666666666667,116"
              Start="0,0"
              End="-543.666666666667,108.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.8403819918144" />
                  <mssgle:CubicBezierSegment
                    Point1="0,64.8403819918144"
                    Point2="0,68.8403819918144"
                    Point3="-4,68.8403819918144" />
                  <mssgle:LineSegment
                    End="-539.666666666667,68.8403819918144" />
                  <mssgle:CubicBezierSegment
                    Point1="-539.666666666667,68.8403819918144"
                    Point2="-543.666666666667,68.8403819918144"
                    Point3="-543.666666666667,72.8403819918144" />
                  <mssgle:LineSegment
                    End="-543.666666666667,108.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Multicast Output 22]"
          TopLeft="1333,430">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="204.666666666667,126"
              Start="0,0"
              End="204.666666666667,118.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.7748976807639" />
                  <mssgle:CubicBezierSegment
                    Point1="0,70.7748976807639"
                    Point2="0,74.7748976807639"
                    Point3="4,74.7748976807639" />
                  <mssgle:LineSegment
                    End="200.666666666667,74.7748976807639" />
                  <mssgle:CubicBezierSegment
                    Point1="200.666666666667,74.7748976807639"
                    Point2="204.666666666667,74.7748976807639"
                    Point3="204.666666666667,78.7748976807639" />
                  <mssgle:LineSegment
                    End="204.666666666667,118.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Multicast Output 21]"
          TopLeft="896,426">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="618.833333333333,130"
              Start="0,0"
              End="618.833333333333,122.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,90.8825503355705" />
                  <mssgle:CubicBezierSegment
                    Point1="0,90.8825503355705"
                    Point2="0,94.8825503355705"
                    Point3="4,94.8825503355705" />
                  <mssgle:LineSegment
                    End="614.833333333333,94.8825503355705" />
                  <mssgle:CubicBezierSegment
                    Point1="614.833333333333,94.8825503355705"
                    Point2="618.833333333333,94.8825503355705"
                    Point3="618.833333333333,98.8825503355705" />
                  <mssgle:LineSegment
                    End="618.833333333333,122.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Multicast Output 2]"
          TopLeft="1577.66666666667,774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="121.333333333333,64"
              Start="0,0"
              End="121.333333333333,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.1052631578947" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.1052631578947"
                    Point2="0,26.1052631578947"
                    Point3="4,26.1052631578947" />
                  <mssgle:LineSegment
                    End="117.333333333333,26.1052631578947" />
                  <mssgle:CubicBezierSegment
                    Point1="117.333333333333,26.1052631578947"
                    Point2="121.333333333333,26.1052631578947"
                    Point3="121.333333333333,30.1052631578947" />
                  <mssgle:LineSegment
                    End="121.333333333333,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Multicast Output 13]"
          TopLeft="1331.25,388">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-267"
              Start="0,0"
              End="0,-259.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-259.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Multicast Output 12]"
          TopLeft="894.25,384">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-263"
              Start="0,0"
              End="0,-255.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-255.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Multicast Output 11]"
          TopLeft="2128.75,398">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-278"
              Start="0,0"
              End="0,-270.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-270.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Multicast Output 1]"
          TopLeft="1766.75,395">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-274"
              Start="0,0"
              End="0,-266.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-266.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Longitude is missing, but Latitude exists]"
          TopLeft="562,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="44.5,100"
              Start="0,0"
              End="44.5,92.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.7761194029851" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.7761194029851"
                    Point2="0,44.7761194029851"
                    Point3="4,44.7761194029851" />
                  <mssgle:LineSegment
                    End="40.5,44.7761194029851" />
                  <mssgle:CubicBezierSegment
                    Point1="40.5,44.7761194029851"
                    Point2="44.5,44.7761194029851"
                    Point3="44.5,48.7761194029851" />
                  <mssgle:LineSegment
                    End="44.5,92.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-66.657578125,49.7761194029851,177.81515625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[LicenseCreationDate is empty]"
          TopLeft="534,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-103,71"
              Start="0,0"
              End="-103,63.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.7910447761194" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.7910447761194"
                    Point2="0,31.7910447761194"
                    Point3="-4,31.7910447761194" />
                  <mssgle:LineSegment
                    End="-99,31.7910447761194" />
                  <mssgle:CubicBezierSegment
                    Point1="-99,31.7910447761194"
                    Point2="-103,31.7910447761194"
                    Point3="-103,35.7910447761194" />
                  <mssgle:LineSegment
                    End="-103,63.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-119.72298828125,36.7910447761194,136.4459765625,11.4677734375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Latitude is missing, but Longitude exists]"
          TopLeft="590,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="169,88"
              Start="0,0"
              End="169,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5660377358491" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5660377358491"
                    Point2="0,26.5660377358491"
                    Point3="4,26.5660377358491" />
                  <mssgle:LineSegment
                    End="165,26.5660377358491" />
                  <mssgle:CubicBezierSegment
                    Point1="165,26.5660377358491"
                    Point2="169,26.5660377358491"
                    Point3="169,30.5660377358491" />
                  <mssgle:LineSegment
                    End="169,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-4.407578125,31.5660377358491,177.81515625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[High severity]"
          TopLeft="1454.25,878">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63"
              Start="0,0"
              End="0,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-29.34193359375,21.91845703125,58.6838671875,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Output11]"
          TopLeft="262.5,213">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="235.9,122"
              Start="0,0"
              End="235.9,114.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.6200241254524" />
                  <mssgle:CubicBezierSegment
                    Point1="0,80.6200241254524"
                    Point2="0,84.6200241254524"
                    Point3="4,84.6200241254524" />
                  <mssgle:LineSegment
                    End="231.9,84.6200241254524" />
                  <mssgle:CubicBezierSegment
                    Point1="231.9,84.6200241254524"
                    Point2="235.9,84.6200241254524"
                    Point3="235.9,88.6200241254524" />
                  <mssgle:LineSegment
                    End="235.9,114.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Output10]"
          TopLeft="2005,99">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="68,0"
              Start="0,0"
              End="60.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="60.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Output9]"
          TopLeft="1641,99.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="66,0"
              Start="0,0"
              End="58.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="58.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Output8]"
          TopLeft="2000,355">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62,64"
              Start="0,0"
              End="54.5,64">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27,0" />
                  <mssgle:CubicBezierSegment
                    Point1="27,0"
                    Point2="31,0"
                    Point3="31,4" />
                  <mssgle:LineSegment
                    End="31,60" />
                  <mssgle:CubicBezierSegment
                    Point1="31,60"
                    Point2="31,64"
                    Point3="35,64" />
                  <mssgle:LineSegment
                    End="54.5,64" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of license data.Paths[Derived Column Output7]"
          TopLeft="1559.5,684">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Ensure correctness of license data\Insert logs to DataCorrectnessInfo table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Ensure correctness of license data\Get selected columns from extracted license data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Ensure correctness of payment data">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="153,42"
          Id="Package\Ensure correctness of payment data\Log missing FeeSequenceId"
          TopLeft="346,237" />
        <NodeLayout
          Size="175,42"
          Id="Package\Ensure correctness of payment data\Get logs with High severity"
          TopLeft="686,764" />
        <NodeLayout
          Size="145,42"
          Id="Package\Ensure correctness of payment data\Unify log data"
          TopLeft="812,483" />
        <NodeLayout
          Size="115,42"
          Id="Package\Ensure correctness of payment data\Union 2"
          TopLeft="729,89" />
        <NodeLayout
          Size="158,42"
          Id="Package\Ensure correctness of payment data\Log missing PaymentAmount"
          TopLeft="531,237" />
        <NodeLayout
          Size="157,42"
          Id="Package\Ensure correctness of payment data\Parse PaymentAmount"
          TopLeft="907,92" />
        <NodeLayout
          Size="176,42"
          Id="Package\Ensure correctness of payment data\Delete rows from PaymentExtract table"
          TopLeft="681,871" />
        <NodeLayout
          Size="130,42"
          Id="Package\Ensure correctness of payment data\Multicast 1"
          TopLeft="720,379" />
        <NodeLayout
          Size="202,42"
          Id="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table"
          TopLeft="916,766" />
        <NodeLayout
          Size="115,42"
          Id="Package\Ensure correctness of payment data\Union 1"
          TopLeft="461,326" />
        <NodeLayout
          Size="120,42"
          Id="Package\Ensure correctness of payment data\Multicast"
          TopLeft="817,660" />
        <NodeLayout
          Size="157,42"
          Id="Package\Ensure correctness of payment data\Log invalid PaymentAmount"
          TopLeft="910,378" />
        <NodeLayout
          Size="204,42"
          Id="Package\Ensure correctness of payment data\Get selected columns from extracted payment data"
          TopLeft="129,89" />
        <NodeLayout
          Size="162,42"
          Id="Package\Ensure correctness of payment data\Include SessionId"
          TopLeft="800,570" />
        <NodeLayout
          Size="195,42"
          Id="Package\Ensure correctness of payment data\Check for missing values"
          TopLeft="417,88" />
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[Union All Output 12]"
          TopLeft="882.75,525">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[Union All Output 11]"
          TopLeft="844,111.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="63,0"
              Start="0,0"
              End="55.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="55.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[Union All Output 1]"
          TopLeft="576,347">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="144,53"
              Start="0,0"
              End="136.5,53">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="68,0" />
                  <mssgle:CubicBezierSegment
                    Point1="68,0"
                    Point2="72,0"
                    Point3="72,4" />
                  <mssgle:LineSegment
                    End="72,49" />
                  <mssgle:CubicBezierSegment
                    Point1="72,49"
                    Point2="72,53"
                    Point3="76,53" />
                  <mssgle:LineSegment
                    End="136.5,53" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[PaymentAmount is missing]"
          TopLeft="545.666666666667,130">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="64.3333333333334,107"
              Start="0,0"
              End="64.3333333333334,99.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.3224821973551" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.3224821973551"
                    Point2="0,43.3224821973551"
                    Point3="4,43.3224821973551" />
                  <mssgle:LineSegment
                    End="60.3333333333334,43.3224821973551" />
                  <mssgle:CubicBezierSegment
                    Point1="60.3333333333334,43.3224821973551"
                    Point2="64.3333333333334,43.3224821973551"
                    Point3="64.3333333333334,47.3224821973551" />
                  <mssgle:LineSegment
                    End="64.3333333333334,99.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-27.4663216145833,48.3224821973551,119.2659765625,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[OLE DB Source Output]"
          TopLeft="333,109.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84,0"
              Start="0,0"
              End="76.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="76.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[Multicast Output 3]"
          TopLeft="858.333333333333,702">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-84.8333333333333,62"
              Start="0,0"
              End="-84.8333333333333,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.2894736842105" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.2894736842105"
                    Point2="0,25.2894736842105"
                    Point3="-4,25.2894736842105" />
                  <mssgle:LineSegment
                    End="-80.8333333333333,25.2894736842105" />
                  <mssgle:CubicBezierSegment
                    Point1="-80.8333333333333,25.2894736842105"
                    Point2="-84.8333333333333,25.2894736842105"
                    Point3="-84.8333333333333,29.2894736842105" />
                  <mssgle:LineSegment
                    End="-84.8333333333333,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[Multicast Output 21]"
          TopLeft="785,421">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="76.6666666666666,62"
              Start="0,0"
              End="76.6666666666666,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.7939972714871" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.7939972714871"
                    Point2="0,36.7939972714871"
                    Point3="4,36.7939972714871" />
                  <mssgle:LineSegment
                    End="72.6666666666666,36.7939972714871" />
                  <mssgle:CubicBezierSegment
                    Point1="72.6666666666666,36.7939972714871"
                    Point2="76.6666666666666,36.7939972714871"
                    Point3="76.6666666666666,40.7939972714871" />
                  <mssgle:LineSegment
                    End="76.6666666666666,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[Multicast Output 2]"
          TopLeft="895.666666666667,702">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="121.333333333333,64"
              Start="0,0"
              End="121.333333333333,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.1052631578947" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.1052631578947"
                    Point2="0,26.1052631578947"
                    Point3="4,26.1052631578947" />
                  <mssgle:LineSegment
                    End="117.333333333333,26.1052631578947" />
                  <mssgle:CubicBezierSegment
                    Point1="117.333333333333,26.1052631578947"
                    Point2="121.333333333333,26.1052631578947"
                    Point3="121.333333333333,30.1052631578947" />
                  <mssgle:LineSegment
                    End="121.333333333333,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[Multicast Output 1]"
          TopLeft="785.75,379">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-248"
              Start="0,0"
              End="0,-240.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-240.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[High severity]"
          TopLeft="771.25,806">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-29.34193359375,22.91845703125,58.6838671875,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[FeeSequenceId is missing]"
          TopLeft="483.333333333333,130">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-60.8333333333333,107"
              Start="0,0"
              End="-60.8333333333333,99.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.322482197355" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.322482197355"
                    Point2="0,43.322482197355"
                    Point3="-4,43.322482197355" />
                  <mssgle:LineSegment
                    End="-56.8333333333333,43.322482197355" />
                  <mssgle:CubicBezierSegment
                    Point1="-56.8333333333333,43.322482197355"
                    Point2="-60.8333333333333,43.322482197355"
                    Point3="-60.8333333333333,47.322482197355" />
                  <mssgle:LineSegment
                    End="-60.8333333333333,99.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-87.5446549479167,48.322482197355,114.2559765625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[Derived Column Output3]"
          TopLeft="988.5,420">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-81.1666666666666,63"
              Start="0,0"
              End="-81.1666666666666,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.387448840382" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.387448840382"
                    Point2="0,37.387448840382"
                    Point3="-4,37.387448840382" />
                  <mssgle:LineSegment
                    End="-77.1666666666666,37.387448840382" />
                  <mssgle:CubicBezierSegment
                    Point1="-77.1666666666666,37.387448840382"
                    Point2="-81.1666666666666,37.387448840382"
                    Point3="-81.1666666666666,41.387448840382" />
                  <mssgle:LineSegment
                    End="-81.1666666666666,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[Derived Column Output2]"
          TopLeft="422.5,279">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="78.1666666666667,47"
              Start="0,0"
              End="78.1666666666667,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8130360205832" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.8130360205832"
                    Point2="0,27.8130360205832"
                    Point3="4,27.8130360205832" />
                  <mssgle:LineSegment
                    End="74.1666666666667,27.8130360205832" />
                  <mssgle:CubicBezierSegment
                    Point1="74.1666666666667,27.8130360205832"
                    Point2="78.1666666666667,27.8130360205832"
                    Point3="78.1666666666667,31.8130360205832" />
                  <mssgle:LineSegment
                    End="78.1666666666667,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[Derived Column Output1]"
          TopLeft="879,612">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[Derived Column Output]"
          TopLeft="610,279">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-73.6666666666666,47"
              Start="0,0"
              End="-73.6666666666666,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8130360205832" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.8130360205832"
                    Point2="0,27.8130360205832"
                    Point3="-4,27.8130360205832" />
                  <mssgle:LineSegment
                    End="-69.6666666666666,27.8130360205832" />
                  <mssgle:CubicBezierSegment
                    Point1="-69.6666666666666,27.8130360205832"
                    Point2="-73.6666666666666,27.8130360205832"
                    Point3="-73.6666666666666,31.8130360205832" />
                  <mssgle:LineSegment
                    End="-73.6666666666666,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[Derived Column Error Output]"
          TopLeft="987,134">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,244"
              Start="0,0"
              End="0,236.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,236.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-64.96138671875,112.4453125,129.9227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Ensure correctness of payment data.Paths[Default]"
          TopLeft="612,109.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="117,0"
              Start="0,0"
              End="109.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="109.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="38.28361328125,5,32.9327734375,9.7978515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Ensure correctness of payment data\Insert logs to DataCorrectnessInfo table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Ensure correctness of payment data\Get selected columns from extracted payment data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Extract fee data">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="203,42"
          Id="Package\Extract fee data\Insert error info to DataExtractionErrors table"
          TopLeft="690,448" />
        <NodeLayout
          Size="169,42"
          Id="Package\Extract fee data\Insert raw fee data to database"
          TopLeft="475,357" />
        <NodeLayout
          Size="130,42"
          Id="Package\Extract fee data\Derive error info"
          TopLeft="728,258" />
        <NodeLayout
          Size="157,42"
          Id="Package\Extract fee data\Generate source row number"
          TopLeft="483,258" />
        <NodeLayout
          Size="130,42"
          Id="Package\Extract fee data\Generate error info"
          TopLeft="727,355" />
        <NodeLayout
          Size="156,42"
          Id="Package\Extract fee data\Extract fee data from dataset"
          TopLeft="604,142" />
        <EdgeLayout
          Id="Package\Extract fee data.Paths[Output 01]"
          TopLeft="791.75,397">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract fee data.Paths[Output 0]"
          TopLeft="560.5,300">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract fee data.Paths[Flat File Source Output]"
          TopLeft="657.333333333333,184">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-95.8333333333334,74"
              Start="0,0"
              End="-95.8333333333334,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.0507614213198" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.0507614213198"
                    Point2="0,30.0507614213198"
                    Point3="-4,30.0507614213198" />
                  <mssgle:LineSegment
                    End="-91.8333333333334,30.0507614213198" />
                  <mssgle:CubicBezierSegment
                    Point1="-91.8333333333334,30.0507614213198"
                    Point2="-95.8333333333334,30.0507614213198"
                    Point3="-95.8333333333334,34.0507614213198" />
                  <mssgle:LineSegment
                    End="-95.8333333333334,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract fee data.Paths[Flat File Source Error Output]"
          TopLeft="706.666666666667,184">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="86.3333333333334,74"
              Start="0,0"
              End="86.3333333333334,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.0507614213198" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.0507614213198"
                    Point2="0,30.0507614213198"
                    Point3="4,30.0507614213198" />
                  <mssgle:LineSegment
                    End="82.3333333333334,30.0507614213198" />
                  <mssgle:CubicBezierSegment
                    Point1="82.3333333333334,30.0507614213198"
                    Point2="86.3333333333334,30.0507614213198"
                    Point3="86.3333333333334,34.0507614213198" />
                  <mssgle:LineSegment
                    End="86.3333333333334,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.4597200520833,35.0507614213198,127.2527734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract fee data.Paths[Derived Column Output]"
          TopLeft="792.5,300">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Extract fee data\Insert error info to DataExtractionErrors table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Extract fee data\Insert raw fee data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Extract license data">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="154,42"
          Id="Package\Extract license data\Get license data from dataset"
          TopLeft="563,116" />
        <NodeLayout
          Size="203,42"
          Id="Package\Extract license data\Insert error info to DataExtractionErrors table"
          TopLeft="653,436" />
        <NodeLayout
          Size="178,42"
          Id="Package\Extract license data\Insert license data to LicenseExtract table"
          TopLeft="419,345" />
        <NodeLayout
          Size="130,42"
          Id="Package\Extract license data\Derive error info"
          TopLeft="691,246" />
        <NodeLayout
          Size="156,42"
          Id="Package\Extract license data\Generate source row number"
          TopLeft="429,246" />
        <NodeLayout
          Size="130,42"
          Id="Package\Extract license data\Generate error info"
          TopLeft="690,343" />
        <EdgeLayout
          Id="Package\Extract license data.Paths[Derived Column Output]"
          TopLeft="755.5,288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract license data.Paths[Output 01]"
          TopLeft="754.75,385">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract license data.Paths[Output 0]"
          TopLeft="507.5,288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract license data.Paths[Flat File Source Output]"
          TopLeft="615.666666666667,158">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-108.666666666667,88"
              Start="0,0"
              End="-108.666666666667,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7429305912596" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7429305912596"
                    Point2="0,35.7429305912596"
                    Point3="-4,35.7429305912596" />
                  <mssgle:LineSegment
                    End="-104.666666666667,35.7429305912596" />
                  <mssgle:CubicBezierSegment
                    Point1="-104.666666666667,35.7429305912596"
                    Point2="-108.666666666667,35.7429305912596"
                    Point3="-108.666666666667,39.7429305912596" />
                  <mssgle:LineSegment
                    End="-108.666666666667,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract license data.Paths[Flat File Source Error Output]"
          TopLeft="664.333333333333,158">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="91.6666666666666,88"
              Start="0,0"
              End="91.6666666666666,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7429305912596" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7429305912596"
                    Point2="0,35.7429305912596"
                    Point3="4,35.7429305912596" />
                  <mssgle:LineSegment
                    End="87.6666666666666,35.7429305912596" />
                  <mssgle:CubicBezierSegment
                    Point1="87.6666666666666,35.7429305912596"
                    Point2="91.6666666666666,35.7429305912596"
                    Point3="91.6666666666666,39.7429305912596" />
                  <mssgle:LineSegment
                    End="91.6666666666666,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-17.7930533854167,40.7429305912596,127.2527734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Extract license data\Insert error info to DataExtractionErrors table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Extract license data\Insert license data to LicenseExtract table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Extract payment data">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="203,42"
          Id="Package\Extract payment data\Insert error info to DataExtractionErrors table"
          TopLeft="675,448" />
        <NodeLayout
          Size="171,42"
          Id="Package\Extract payment data\Insert raw payment data to database"
          TopLeft="458,353" />
        <NodeLayout
          Size="162,42"
          Id="Package\Extract payment data\Get payment data from dataset"
          TopLeft="586,131" />
        <NodeLayout
          Size="130,42"
          Id="Package\Extract payment data\Derive error info"
          TopLeft="713,258" />
        <NodeLayout
          Size="157,42"
          Id="Package\Extract payment data\Generate source row number"
          TopLeft="464,256" />
        <NodeLayout
          Size="130,42"
          Id="Package\Extract payment data\Generate error info"
          TopLeft="712,355" />
        <EdgeLayout
          Id="Package\Extract payment data.Paths[Output 01]"
          TopLeft="776.75,397">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract payment data.Paths[Output 0]"
          TopLeft="543,298">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract payment data.Paths[Flat File Source Output]"
          TopLeft="641.333333333333,173">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-98.8333333333334,83"
              Start="0,0"
              End="-98.8333333333334,75.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.6870415647922" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.6870415647922"
                    Point2="0,33.6870415647922"
                    Point3="-4,33.6870415647922" />
                  <mssgle:LineSegment
                    End="-94.8333333333334,33.6870415647922" />
                  <mssgle:CubicBezierSegment
                    Point1="-94.8333333333334,33.6870415647922"
                    Point2="-98.8333333333334,33.6870415647922"
                    Point3="-98.8333333333334,37.6870415647922" />
                  <mssgle:LineSegment
                    End="-98.8333333333334,75.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract payment data.Paths[Flat File Source Error Output]"
          TopLeft="692.666666666667,173">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="85.3333333333334,85"
              Start="0,0"
              End="85.3333333333334,77.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.4987775061125" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.4987775061125"
                    Point2="0,34.4987775061125"
                    Point3="4,34.4987775061125" />
                  <mssgle:LineSegment
                    End="81.3333333333334,34.4987775061125" />
                  <mssgle:CubicBezierSegment
                    Point1="81.3333333333334,34.4987775061125"
                    Point2="85.3333333333334,34.4987775061125"
                    Point3="85.3333333333334,38.4987775061125" />
                  <mssgle:LineSegment
                    End="85.3333333333334,77.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.9597200520833,39.4987775061125,127.2527734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract payment data.Paths[Derived Column Output]"
          TopLeft="777.5,300">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Extract payment data\Insert error info to DataExtractionErrors table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Extract payment data\Insert raw payment data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Stage fee data">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="206,42"
          Id="Package\Stage fee data\Handle dates and numbers"
          TopLeft="504,307" />
        <NodeLayout
          Size="165,42"
          Id="Package\Stage fee data\Insert staged data to FeeStage table"
          TopLeft="522,428" />
        <NodeLayout
          Size="192,42"
          Id="Package\Stage fee data\Get selected columns from extracted fee data"
          TopLeft="512,74" />
        <NodeLayout
          Size="146,42"
          Id="Package\Stage fee data\Handle strings"
          TopLeft="533,189" />
        <EdgeLayout
          Id="Package\Stage fee data.Paths[Output 0]"
          TopLeft="605.75,349">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,79"
              Start="0,0"
              End="0,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage fee data.Paths[OLE DB Source Output]"
          TopLeft="607,116">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,73"
              Start="0,0"
              End="0,65.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage fee data.Paths[Derived Column Output]"
          TopLeft="606.5,231">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,76"
              Start="0,0"
              End="0,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Stage fee data\Insert staged data to FeeStage table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage fee data\Get selected columns from extracted fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Stage license data">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="146,42"
          Id="Package\Stage license data\Handle strings"
          TopLeft="524,181" />
        <NodeLayout
          Size="178,42"
          Id="Package\Stage license data\Insert staged data to LicenseStage table"
          TopLeft="509,423" />
        <NodeLayout
          Size="205,42"
          Id="Package\Stage license data\Get selected columns from extracted license data"
          TopLeft="496,64" />
        <NodeLayout
          Size="206,42"
          Id="Package\Stage license data\Handle dates and numbers"
          TopLeft="494,304" />
        <EdgeLayout
          Id="Package\Stage license data.Paths[Output 0]"
          TopLeft="597.5,346">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,77"
              Start="0,0"
              End="0,69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage license data.Paths[OLE DB Source Output]"
          TopLeft="597.75,106">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,75"
              Start="0,0"
              End="0,67.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage license data.Paths[Derived Column Output]"
          TopLeft="597,223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,81"
              Start="0,0"
              End="0,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Stage license data\Insert staged data to LicenseStage table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage license data\Get selected columns from extracted license data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Stage payment data">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="156,42"
          Id="Package\Stage payment data\Handle numbers"
          TopLeft="529,528" />
        <NodeLayout
          Size="155,42"
          Id="Package\Stage payment data\Sort fee data by FeeSequenceId"
          TopLeft="656,181" />
        <NodeLayout
          Size="386,42"
          Id="Package\Stage payment data\Join on FeeSequenceId and remove payments for undefined fees"
          TopLeft="412,324" />
        <NodeLayout
          Size="146,42"
          Id="Package\Stage payment data\Handle strings"
          TopLeft="533,425" />
        <NodeLayout
          Size="178,42"
          Id="Package\Stage payment data\Insert staged data to PaymentStage table"
          TopLeft="517,642" />
        <NodeLayout
          Size="166,42"
          Id="Package\Stage payment data\Sort payment data by FeeSequenceId"
          TopLeft="395,183" />
        <NodeLayout
          Size="204,42"
          Id="Package\Stage payment data\Get selected columns from extracted payment data"
          TopLeft="376,57" />
        <NodeLayout
          Size="179,42"
          Id="Package\Stage payment data\Get selected columns from staged fee data"
          TopLeft="646,58" />
        <EdgeLayout
          Id="Package\Stage payment data.Paths[Sort Output1]"
          TopLeft="733.5,223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-65.5,101"
              Start="0,0"
              End="-65.5,93.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.3498452012384" />
                  <mssgle:CubicBezierSegment
                    Point1="0,56.3498452012384"
                    Point2="0,60.3498452012384"
                    Point3="-4,60.3498452012384" />
                  <mssgle:LineSegment
                    End="-61.5,60.3498452012384" />
                  <mssgle:CubicBezierSegment
                    Point1="-61.5,60.3498452012384"
                    Point2="-65.5,60.3498452012384"
                    Point3="-65.5,64.3498452012384" />
                  <mssgle:LineSegment
                    End="-65.5,93.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage payment data.Paths[Sort Output]"
          TopLeft="478,225">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="64,99"
              Start="0,0"
              End="64,91.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.1547987616099" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.1547987616099"
                    Point2="0,59.1547987616099"
                    Point3="4,59.1547987616099" />
                  <mssgle:LineSegment
                    End="60,59.1547987616099" />
                  <mssgle:CubicBezierSegment
                    Point1="60,59.1547987616099"
                    Point2="64,59.1547987616099"
                    Point3="64,63.1547987616099" />
                  <mssgle:LineSegment
                    End="64,91.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage payment data.Paths[Output 0]"
          TopLeft="606.5,570">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72"
              Start="0,0"
              End="0,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage payment data.Paths[OLE DB Source Output1]"
          TopLeft="478,99">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage payment data.Paths[OLE DB Source Output]"
          TopLeft="734.5,100">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,81"
              Start="0,0"
              End="0,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage payment data.Paths[Merge Join Output]"
          TopLeft="605.5,366">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage payment data.Paths[Derived Column Output]"
          TopLeft="606.5,467">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61"
              Start="0,0"
              End="0,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Stage payment data\Insert staged data to PaymentStage table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage payment data\Get selected columns from extracted payment data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage payment data\Get selected columns from staged fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>