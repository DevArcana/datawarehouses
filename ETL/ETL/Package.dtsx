<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/20/2021 10:49:21 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-I1M49NG"
  DTS:CreatorName="DESKTOP-I1M49NG\Student 246777"
  DTS:DTSID="{066C30A0-F194-4E3E-8C4E-88D2708B6DAE}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.152"
  DTS:LocaleID="2057"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="89"
  DTS:VersionGUID="{A55D9E37-A9DC-4440-8853-AD9B611C0DDA}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Fees]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{69311B76-C2FA-4978-A060-F45869002636}"
      DTS:ObjectName="Fees">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\Repos\datawarehouses\datasets\DCA_Fines_and_Fees.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="RECORD ID"
              DTS:DTSID="{40AC16B7-9448-4538-B6BA-E77065073D42}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="RECORD TYPE"
              DTS:DTSID="{8FD31409-A915-4A0A-9554-1B40D0F88523}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="300"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="BUSINESS NAME"
              DTS:DTSID="{9651E6E9-3810-43B4-93A4-8C959B748DE9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="BUSINESS NAME2"
              DTS:DTSID="{60D09FA2-FB1D-44CD-AFF9-29145D718DF5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="INDUSTRY"
              DTS:DTSID="{DC7B6A8A-5323-4D61-A0F8-4231DFB26945}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE SEQUENCE ID"
              DTS:DTSID="{65A829A4-17ED-4E4C-AE26-12D40BF1E9D4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE TYPE"
              DTS:DTSID="{0AD3F32A-9F35-4AFE-85D2-C26A5455E2CE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE DESCRIPTION"
              DTS:DTSID="{9EC5A295-30A1-4E9E-BF01-97A6BDD52719}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="18"
              DTS:DataScale="2"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE AMOUNT"
              DTS:DTSID="{93A7E77F-9C35-4660-A249-331C9ABBA038}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE DATE"
              DTS:DTSID="{DE3792DF-649E-42E4-9C15-761207CC5EC8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE STATUS"
              DTS:DTSID="{9DAE1F76-2633-4C35-9BB1-B4E93491E8C1}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Fees - errors]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{A725B883-D666-44FF-AE80-419082DED2BD}"
      DTS:ObjectName="Fees - errors">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\Repos\datawarehouses\datasets\errors\Fees - errors.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="302"
              DTS:TextQualified="True"
              DTS:ObjectName="Flat File Source Error Output Column"
              DTS:DTSID="{89F32155-2D83-4C29-8883-4974D4B8FB05}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{E6065E22-F120-49BF-9776-074509FC0719}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{D8DF2257-1D84-4740-83F1-CBE11B11CB60}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Licenses]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{EF9162DA-BED7-4C94-9A7C-1293CD2DEADB}"
      DTS:ObjectName="Licenses">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\Repos\datawarehouses\datasets\Legally_Operating_Businesses.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DCA License Number"
              DTS:DTSID="{E3B14B44-6224-4EED-BFCC-215B55B2EE7D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="License Type"
              DTS:DTSID="{7881B3B7-88C3-4799-8E6A-8FC854FE1DC6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="License Expiration Date"
              DTS:DTSID="{BD985E48-8284-4B97-85DA-37CACD8F0D5F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="License Status"
              DTS:DTSID="{F2278F89-AFC8-48E0-A405-D56D29D65F92}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="License Creation Date"
              DTS:DTSID="{A8635391-1FDF-430D-8176-74623B3913E1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Industry"
              DTS:DTSID="{E2696BD6-30D7-435C-8810-8B4E8BC00DE1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="300"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Business Name"
              DTS:DTSID="{CA84B4BE-ABB5-443F-8D07-AA0D67353E7E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Business Name 2"
              DTS:DTSID="{489AEB7D-5CF7-4357-9FFD-BF56AC155AE4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address Building"
              DTS:DTSID="{F68C6C41-63ED-4C32-9D9A-AFBD06F2AF08}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="75"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address Street Name"
              DTS:DTSID="{43B1BFD8-0369-4838-A1B8-9B6AC19190EE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="75"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Secondary Address Street Name"
              DTS:DTSID="{B82447A1-3491-41BF-B422-98D5A271A5AE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address City"
              DTS:DTSID="{9C58CE5F-91C2-4211-AAA8-39613181E3B9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address State"
              DTS:DTSID="{0C667D70-7F93-4301-A2D1-9F476205FF6F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address ZIP"
              DTS:DTSID="{95A74B71-6C4D-4C6E-8B7B-CA385895968B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Contact Phone Number"
              DTS:DTSID="{BBD3B984-C8B7-4E7D-AA3B-AFEAACD11C67}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address Borough"
              DTS:DTSID="{8D085646-F11E-4047-B1AA-A968FA3FF395}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Borough Code"
              DTS:DTSID="{66D867DF-B92A-4770-9646-5C2064323019}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Community Board"
              DTS:DTSID="{F8F93042-2D39-4870-8777-7BA80A5350D4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Council District"
              DTS:DTSID="{64A5F6A8-2A4D-4956-AEAA-DCDDE42E8574}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="BIN"
              DTS:DTSID="{8E86A915-1830-40C9-AE74-C7E4083AF31F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="BBL"
              DTS:DTSID="{B37547EA-A4DF-4A34-862B-31B48190C2F2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="NTA"
              DTS:DTSID="{43EB6ED8-BA0E-448D-9748-497A55AE5ACB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Census Tract"
              DTS:DTSID="{9D0370FB-998D-4D03-8144-30F4B90EA51C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="300"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Detail"
              DTS:DTSID="{A51E4383-C5F9-4B44-A9B1-1F1274FF495E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Longitude"
              DTS:DTSID="{42E9FDE3-6C75-45DE-9263-9A143690EF64}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Latitude"
              DTS:DTSID="{C8E9A9E8-4E58-4AD5-85CA-839070DB2A85}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Location"
              DTS:DTSID="{C4000EA0-315F-4CEC-AF07-7913DDC61D22}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Licenses - errors]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{7969E795-3F83-41DB-816D-30A4CCE6F464}"
      DTS:ObjectName="Licenses - errors">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\Repos\datawarehouses\datasets\errors\Licenses - errors.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="302"
              DTS:TextQualified="True"
              DTS:ObjectName="Flat File Source Error Output Column"
              DTS:DTSID="{25E31138-F193-45B9-838B-9829177EF5EF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{4488224D-D059-46BA-ABF1-9DBABE0E2FD5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{391E9114-3653-4BED-874A-42EAAE6BFD29}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.Miniproject]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
      DTS:ObjectName="LocalHost.Miniproject">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=Miniproject;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Payments]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{0760D50B-BAB1-4D0E-8062-50A85CD0002F}"
      DTS:ObjectName="Payments">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\Repos\datawarehouses\datasets\Payments_Received_for_DCA_Fines_and_Fees.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="RECORD ID"
              DTS:DTSID="{64B1F8AC-50CA-4449-B577-94E5AD1BCE63}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="RECORD DYPE"
              DTS:DTSID="{AE8922B1-758D-4DB9-814F-49E7A814D560}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="300"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="BUSINESS NAME"
              DTS:DTSID="{3F1399D8-6B9E-4D4C-B756-C6139E414B25}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="BUSINESS NAME2"
              DTS:DTSID="{190F7E28-C4DA-4562-8867-DE57FDD9EB05}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="INDUSTRY"
              DTS:DTSID="{9DBD92F5-17B8-4B91-BA14-F4A4009FF1BA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE SEQUENCE ID"
              DTS:DTSID="{AD5A8F3E-C06C-4EB0-A445-7A4C7BC34AED}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE TYPE"
              DTS:DTSID="{8FB9B310-59ED-4BF4-A874-CFC2148CFFF6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FEE DESCRIPTION"
              DTS:DTSID="{37B9F01F-7796-4828-BA6A-1A200D278816}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="18"
              DTS:DataScale="2"
              DTS:TextQualified="True"
              DTS:ObjectName="PAYMENT AMOUNT"
              DTS:DTSID="{748BBB81-7730-449D-B1E0-E741F3C5D5F7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="PAYMENT DATE"
              DTS:DTSID="{F03C8539-0BD4-4F7E-97D4-6F2F24B079F9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="TRANSACTION TYPE"
              DTS:DTSID="{E0DD882D-321F-48BE-8DAC-86885D2C3E03}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Payments - errors]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{61039487-E337-4254-A4B3-BD93E355190A}"
      DTS:ObjectName="Payments - errors">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\Repos\datawarehouses\datasets\errors\New Text Document.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="302"
              DTS:TextQualified="True"
              DTS:ObjectName="Flat File Source Error Output Column"
              DTS:DTSID="{72391954-DBD2-439F-AC06-C2852D364B6C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{9535923C-5918-4B57-B51C-69E2C35888A8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{637EE302-37ED-43C5-9BA0-11764BC6F03F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C73F0A37-9FE6-4BD7-BE82-67DB031BEF86}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EarliestDate">
      <DTS:VariableValue
        DTS:DataType="7">5/25/2021 11:02:55 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D3E50EA7-2827-4134-81CE-224EB034251E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LatestDate">
      <DTS:VariableValue
        DTS:DataType="7">5/25/2021 11:03:05 PM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete data from dimensions and fact tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{ecbbf739-b4e6-4934-ba70-200fb00e9004}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete data from dimensions and fact tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [DW].[LicenseFact];&#xA;&#xA;TRUNCATE TABLE [DW].[PaymentFact];&#xA;&#xA;DELETE FROM [DW].[FeeDim];&#xA;DBCC CHECKIDENT ([DW.FeeDim], RESEED, 0);&#xA;&#xA;DELETE FROM [DW].[BusinessDim];&#xA;DBCC CHECKIDENT ([DW.BusinessDim], RESEED, 0);&#xA;&#xA;DELETE FROM [DW].[IndustryDim];&#xA;DBCC CHECKIDENT ([DW.IndustryDim], RESEED, 0);&#xA;&#xA;DELETE FROM [DW].[TimeDim];&#xA;&#xA;DELETE FROM [DW].[TransactionTypeDim];&#xA;DBCC CHECKIDENT ([DW.TransactionTypeDim], RESEED, 0);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure dimensions and fact tables exist"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{963D46BE-BCD8-49C0-8BFF-1B16D0909EB2}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure dimensions and fact tables exist"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'BusinessDim' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[BusinessDim] (&#xA;    [BusinessId] int IDENTITY(1,1),&#xA;    [BusinessType] nvarchar(50),&#xA;    [BusinessName] nvarchar(300),&#xA;    [BusinessName2] nvarchar(100),&#xA;    [AddressBuilding] nvarchar(50),&#xA;    [AddressStreetName] nvarchar(75),&#xA;    [SecondaryAddressStreetName] nvarchar(75),&#xA;    [AddressCity] nvarchar(50),&#xA;    [AddressState] nvarchar(50),&#xA;    [AddressZip] nvarchar(50),&#xA;    [AddressBorough] nvarchar(50),&#xA;    [BoroughCode] nvarchar(50),&#xA;    [CommunityBoard] nvarchar(50),&#xA;    [CouncilDistrict] nvarchar(50),&#xA;    [CensusTract] nvarchar(50),&#xA;    [Longitude] nvarchar(50),&#xA;    [Latitude] nvarchar(50),&#xA;    CONSTRAINT [PK_BusinessDim] PRIMARY KEY ([BusinessId])&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'IndustryDim' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[IndustryDim] (&#xA;    [IndustryId] int IDENTITY(1,1),&#xA;&#x9;[Industry] nvarchar(50),&#xA;    CONSTRAINT [PK_IndustryDim] PRIMARY KEY ([IndustryId])&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'FeeDim' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[FeeDim] (&#xA;    [FeeId] int IDENTITY(1,1),&#xA;    [IndustryId] int,&#xA;    [RecordType] nvarchar(50),&#xA;    [FeeType] nvarchar(50),&#xA;    [FeeDescription] nvarchar(100),&#xA;    CONSTRAINT [PK_FeeDim] PRIMARY KEY ([FeeId]),&#xA;    CONSTRAINT [FK_FeeDim_ToIndustryDim] FOREIGN KEY ([IndustryId]) REFERENCES [DW].[IndustryDim]([IndustryId])&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'TimeDim' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[TimeDim] (&#xA;    [Date] date,&#xA;    [Day] int,&#xA;    [DayName] nvarchar(9),&#xA;    [Weekday] int,&#xA;    [Week] int,&#xA;    [Month] int,&#xA;    [MonthName] nvarchar(9),&#xA;    [Quarter] int,&#xA;    [Year] int,&#xA;    CONSTRAINT [PK_TimeDim] PRIMARY KEY ([Date])&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'TransactionTypeDim' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[TransactionTypeDim] (&#xA;    [TransactionTypeId] int IDENTITY(1,1),&#xA;    [TransactionType] nvarchar(50),&#xA;    CONSTRAINT [PK_TransactionTypeDim] PRIMARY KEY ([TransactionTypeId])&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'LicenseFact' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[LicenseFact] (&#xA;    [CreationDate] date,&#xA;    [ExpirationDate] date,&#xA;    [BusinessId] int,&#xA;    [IndustryId] int,&#xA;    [LicenseNumber] nvarchar(50),&#xA;    [DurationInDays] int,&#xA;    CONSTRAINT [FK_LicenseFact_ToTimeDim_CreationDate] FOREIGN KEY ([CreationDate]) REFERENCES [DW].[TimeDim]([Date]),&#xA;    CONSTRAINT [FK_LicenseFact_ToTimeDim_ExpirationDate] FOREIGN KEY ([ExpirationDate]) REFERENCES [DW].[TimeDim]([Date]),&#xA;    CONSTRAINT [FK_LicenseFact_ToBusinessDim] FOREIGN KEY ([BusinessId]) REFERENCES [DW].[BusinessDim]([BusinessId]),&#xA;    CONSTRAINT [FK_LicenseFact_ToIndustryDim] FOREIGN KEY ([IndustryId]) REFERENCES [DW].[IndustryDim]([IndustryId])&#xA;)&#xA;GO&#xA;&#xA;IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'PaymentFact' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DW].[PaymentFact] (&#xA;    [PaymentDate] date,&#xA;    [FeeId] int,&#xA;    [BusinessId] int,&#xA;    [TransactionTypeId] int,&#xA;    [FeeSequenceId] int,&#xA;    [FeeAmount] numeric(18,2),&#xA;    [PaymentAmount] numeric(18,2),&#xA;    CONSTRAINT [FK_PaymentFact_ToTimeDim] FOREIGN KEY ([PaymentDate]) REFERENCES [DW].[TimeDim]([Date]),&#xA;    CONSTRAINT [FK_PaymentFact_ToFeeDim] FOREIGN KEY ([FeeId]) REFERENCES [DW].[FeeDim]([FeeId]),&#xA;    CONSTRAINT [FK_PaymentFact_ToBusinessDim] FOREIGN KEY ([BusinessId]) REFERENCES [DW].[BusinessDim]([BusinessId]),&#xA;    CONSTRAINT [FK_PaymentFact_ToTransactionTypeDim] FOREIGN KEY ([TransactionTypeId]) REFERENCES [DW].[TransactionTypeDim]([TransactionTypeId])&#xA;)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure DW schema exists"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{a24a340a-f9ca-4a51-8f43-97e08ec040e6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure DW schema exists"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT *&#xA;    FROM [sys].[schemas]&#xA;    WHERE [name] = N'DW'&#xA;)&#xA;EXEC('CREATE SCHEMA [DW]');" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure DWSTAGE schema exists"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{A2A0B74C-0604-4D34-819E-34853D882441}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure DWSTAGE schema exists"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT *&#xA;    FROM [sys].[schemas]&#xA;    WHERE [name] = N'DWSTAGE'&#xA;)&#xA;EXEC('CREATE SCHEMA [DWSTAGE]');" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure FeeExtract table exists"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8AC9A673-1721-464E-8715-695857CD0DD3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure FeeExtract table exists"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'FeeExtract' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWSTAGE].[FeeExtract] (&#xA;    [RecordId] nvarchar(50),&#xA;    [RecordType] nvarchar(50),&#xA;    [BusinessName] nvarchar(300),&#xA;    [BusinessName2] nvarchar(100),&#xA;    [Industry] nvarchar(50),&#xA;    [FeeSequenceId] int,&#xA;    [FeeType] nvarchar(50),&#xA;    [FeeDescription] nvarchar(100),&#xA;    [FeeAmount] numeric(18,2),&#xA;    [FeeDate] date,&#xA;    [FeeStatus] nvarchar(50)&#xA;)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure FeeStage table exists"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{fe2a8fef-2b9e-4bf6-a156-0c514a80f02f}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure FeeStage table exists"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'FeeStage' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWSTAGE].[FeeStage] (&#xA;    [FeeSequenceId] int,&#xA;    [BusinessName] nvarchar(300),&#xA;    [BusinessName2] nvarchar(100),&#xA;    [FeeDate] date,&#xA;    [RecordType] nvarchar(50),&#xA;    [Industry] nvarchar(50),&#xA;    [FeeType] nvarchar(50),&#xA;    [FeeDescription] nvarchar(100),&#xA;    [FeeAmount] numeric(18,2)&#xA;)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure LicenseExtract table exists"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{ee8ce060-d6e9-43fb-8e2b-55e52c9fbb83}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure LicenseExtract table exists"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'LicenseExtract' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWSTAGE].[LicenseExtract] (&#xA;    [DCALicenseNumber] nvarchar(50),&#xA;    [LicenseType] nvarchar(50),&#xA;    [LicenseExpirationDate] datetime,&#xA;    [LicenseStatus] nvarchar(50),&#xA;    [LicenseCreationDate] datetime,&#xA;    [Industry] nvarchar(50),&#xA;    [BusinessName] nvarchar(300),&#xA;    [BusinessName2] nvarchar(100),&#xA;    [AddressBuilding] nvarchar(50),&#xA;    [AddressStreetName] nvarchar(75),&#xA;    [SecondaryAddressStreetName] nvarchar(75),&#xA;    [AddressCity] nvarchar(50),&#xA;    [AddressState] nvarchar(50),&#xA;    [AddressZIP] nvarchar(50),&#xA;    [ContactPhoneNumber] nvarchar(50),&#xA;    [AddressBorough] nvarchar(50),&#xA;    [BoroughCode] nvarchar(50),&#xA;    [CommunityBoard] nvarchar(50),&#xA;    [CouncilDistrict] nvarchar(50),&#xA;    [BIN] nvarchar(50),&#xA;    [BBL] nvarchar(50),&#xA;    [NTA] nvarchar(50),&#xA;    [CensusTract] nvarchar(50),&#xA;    [Detail] nvarchar(300),&#xA;    [Longitude] nvarchar(50),&#xA;    [Latitude] nvarchar(50),&#xA;    [Location] nvarchar(50)&#xA;)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure LicenseStage table exists"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{62fcbdcf-f6cc-49c3-bcdc-cffcbd202722}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure LicenseStage table exists"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'LicenseStage' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWSTAGE].[LicenseStage] (&#xA;    [DCALicenseNumber] nvarchar(50),&#xA;    [LicenseCreationDate] date,&#xA;    [LicenseExpirationDate] date,&#xA;    [LicenseType] nvarchar(50),&#xA;    [BusinessName] nvarchar(300),&#xA;    [BusinessName2] nvarchar(100),&#xA;    [Industry] nvarchar(50),&#xA;    [AddressBuilding] nvarchar(50),&#xA;    [AddressStreetName] nvarchar(75),&#xA;    [SecondaryAddressStreetName] nvarchar(75),&#xA;    [AddressCity] nvarchar(50),&#xA;    [AddressState] nvarchar(50),&#xA;    [AddressZIP] nvarchar(50),&#xA;    [AddressBorough] nvarchar(50),&#xA;    [BoroughCode] nvarchar(50),&#xA;    [CommunityBoard] nvarchar(50),&#xA;    [CouncilDistrict] nvarchar(50),&#xA;    [CensusTract] nvarchar(50),&#xA;    [Longitude] nvarchar(50),&#xA;    [Latitude] nvarchar(50)&#xA;)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure needed functions exist"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{A21254CF-05AF-4585-B1C3-75DD786FDF19}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure needed functions exist"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="CREATE OR ALTER FUNCTION TOPROPERCASE(@str AS NVARCHAR(MAX)) RETURNS NVARCHAR(MAX)&#xA;AS&#xA;BEGIN&#xA;    DECLARE @reset BIT;&#xA;    DECLARE @output NVARCHAR(MAX);&#xA;    DECLARE @i INT;&#xA;    DECLARE @c CHAR(1);&#xA;&#xA;    IF @str IS NULL&#xA;        RETURN NULL;&#xA;&#xA;    SELECT @reset = 1, @i = 1, @output = '';&#xA;&#xA;    WHILE (@i &lt;= LEN(@str))&#xA;        SELECT @c = SUBSTRING(@str, @i, 1),&#xA;               @output = @output + CASE WHEN @reset = 1 THEN UPPER(@c) ELSE LOWER(@c) END,&#xA;               @reset = CASE WHEN @c LIKE '[a-zA-Z]' THEN 0 ELSE 1 END,&#xA;               @i = @i + 1&#xA;    RETURN @output;&#xA;END;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure PaymentExtract table exists"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{c472e50e-b97a-4569-9516-4c1aec3b87dd}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure PaymentExtract table exists"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="5">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'PaymentExtract' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWSTAGE].[PaymentExtract] (&#xA;    [RecordId] nvarchar(50),&#xA;    [RecordType] nvarchar(50),&#xA;    [BusinessName] nvarchar(300),&#xA;    [BusinessName2] nvarchar(100),&#xA;    [Industry] nvarchar(50),&#xA;    [FeeSequenceId] int,&#xA;    [FeeType] nvarchar(50),&#xA;    [FeeDescription] nvarchar(100),&#xA;    [PaymentAmount] numeric(18,2),&#xA;    [PaymentDate] nvarchar(50),&#xA;    [TransactionType] nvarchar(50)&#xA;)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ensure PaymentStage table exists"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3caef23e-e770-4abe-a25c-9ec00e446a55}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ensure PaymentStage table exists"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="6">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM sysobjects&#xA;    WHERE name = 'PaymentStage' AND xtype = 'U'&#xA;)&#xA;CREATE TABLE [DWSTAGE].[PaymentStage] (&#xA;    [FeeSequenceId] int,&#xA;    [PaymentAmount] numeric(18,2),&#xA;    [TransactionType] nvarchar(50)&#xA;)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Normalize data in FeeExtract table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{23004F77-127E-4D52-B528-8F6795B0E96F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Normalize data in FeeExtract table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="DELETE FROM [DWSTAGE].[FeeExtract]&#xA;WHERE [BusinessName] = '';&#xA;&#xA;UPDATE [DWSTAGE].[FeeExtract]&#xA;SET [BusinessName] = UPPER([BusinessName]), [BusinessName2] = UPPER([BusinessName2]), [Industry] = UPPER([Industry]);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Normalize data in LicenseExtract table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{FA74437C-1C1D-483D-A371-409E80B55F7E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Normalize data in LicenseExtract table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="DELETE FROM [DWSTAGE].[LicenseExtract]&#xA;WHERE [BusinessName] = '';&#xA;&#xA;UPDATE [DWSTAGE].[LicenseExtract]&#xA;SET [BusinessName] = UPPER([BusinessName]), [BusinessName2] = UPPER([BusinessName2]), [Industry] = UPPER([Industry]);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Normalize data in PaymentExtract table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B5C84DEA-AF81-4068-9352-03E4A42BA41F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Normalize data in PaymentExtract table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="5">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="DELETE FROM [DWSTAGE].[PaymentExtract]&#xA;WHERE [BusinessName] = '';&#xA;&#xA;UPDATE [DWSTAGE].[PaymentExtract]&#xA;SET [BusinessName] = UPPER([BusinessName]), [BusinessName2] = UPPER([BusinessName2]);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate BusinessDim table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{B27E2140-78C8-4A5B-8849-D77C71048FC7}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate BusinessDim table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate BusinessDim table\Get staged and filtered license data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get staged and filtered license data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT *
FROM (
    SELECT [LicenseType] AS [BusinessType], 
	       [BusinessName], 
		   [BusinessName2], 
		   [AddressBuilding], 
		   [AddressStreetName], 
		   [SecondaryAddressStreetName], 
		   [AddressCity], 
		   [AddressState], 
		   [AddressZip], 
		   [AddressBorough], 
		   [BoroughCode], 
		   [CommunityBoard], 
		   [CouncilDistrict], 
		   [CensusTract], 
		   [Longitude], 
		   [Latitude], 
		   ROW_NUMBER() OVER (PARTITION BY [BusinessName], [BusinessName2] ORDER BY [LicenseCreationDate] DESC) AS [RowNumber]
    FROM [DWSTAGE].[LicenseExtract]
) [T]
WHERE [RowNumber] = 1;</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate BusinessDim table\Get staged and filtered license data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[BusinessType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessType]"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[BusinessType]"
                      name="BusinessType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]"
                      name="AddressBuilding"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      length="75"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]"
                      name="AddressStreetName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      length="75"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressCity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressCity]"
                      name="AddressCity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressState]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressState]"
                      name="AddressState"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressZip]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZip]"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressZip]"
                      name="AddressZip"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressBorough]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressBorough]"
                      name="AddressBorough"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[BoroughCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[BoroughCode]"
                      name="BoroughCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]"
                      name="CommunityBoard"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[CensusTract]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[CensusTract]"
                      name="CensusTract"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[Longitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[Longitude]"
                      name="Longitude"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[Latitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[Latitude]"
                      name="Latitude"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      name="BusinessType" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZip]"
                      dataType="wstr"
                      length="50"
                      name="AddressZip" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].ExternalColumns[RowNumber]"
                      dataType="i8"
                      name="RowNumber" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[BusinessType]"
                      name="BusinessType" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[AddressBuilding]"
                      name="AddressBuilding" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[AddressStreetName]"
                      name="AddressStreetName" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[AddressCity]"
                      name="AddressCity" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[AddressState]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[AddressState]"
                      name="AddressState" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[AddressZip]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[AddressZip]"
                      name="AddressZip" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[AddressBorough]"
                      name="AddressBorough" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[BoroughCode]"
                      name="BoroughCode" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[CommunityBoard]"
                      name="CommunityBoard" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[CensusTract]"
                      name="CensusTract" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[Longitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[Latitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate BusinessDim table\Insert business data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert business data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[BusinessDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate BusinessDim table\Insert business data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressBuilding]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressStreetName]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[SecondaryAddressStreetName]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressCity]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressCity]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressState]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressState]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressBorough]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressBorough]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[BoroughCode]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[BoroughCode]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[CommunityBoard]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[CouncilDistrict]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[CensusTract]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[CensusTract]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[Longitude]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[Latitude]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[BusinessType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BusinessType"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessType]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[BusinessType]" />
                    <inputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].Columns[AddressZip]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZip"
                      externalMetadataColumnId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressZip]"
                      lineageId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output].Columns[AddressZip]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessId]"
                      dataType="i4"
                      name="BusinessId" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      name="BusinessType" />
                    <externalMetadataColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressZip]"
                      dataType="wstr"
                      length="50"
                      name="AddressZip" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate BusinessDim table\Insert business data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate BusinessDim table\Insert business data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate BusinessDim table\Insert business data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate BusinessDim table\Insert business data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate BusinessDim table.Paths[OLE DB Source Output]"
              endId="Package\Populate BusinessDim table\Insert business data to database.Inputs[OLE DB Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Populate BusinessDim table\Get staged and filtered license data.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate FeeDim table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{96c8dad1-67de-479a-b1b5-4b28450b53bd}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate FeeDim table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate FeeDim table\Get industry dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get industry dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[IndustryDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate FeeDim table\Get industry dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      lineageId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      name="IndustryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      name="IndustryId" />
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate FeeDim table\Get staged fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get staged fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate FeeDim table\Get staged fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      name="RecordType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      name="FeeType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      length="100"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      dataType="numeric"
                      name="FeeAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      dataType="dbDate"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      name="RecordType" />
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      name="FeeType" />
                    <outputColumn
                      refId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      name="FeeDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate FeeDim table\Insert fee data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert fee data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[FeeDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate FeeDim table\Insert fee data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      lineageId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      cachedSortKeyPosition="3"
                      externalMetadataColumnId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      lineageId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[IndustryId]"
                      lineageId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output].Columns[IndustryId]" />
                    <inputColumn
                      refId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      cachedSortKeyPosition="4"
                      externalMetadataColumnId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      lineageId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output].Columns[FeeDescription]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeId]"
                      dataType="i4"
                      name="FeeId" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate FeeDim table\Insert fee data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Insert fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate FeeDim table\Insert fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate FeeDim table\Insert fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate FeeDim table\Insert fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate FeeDim table\Join by industry"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join by industry"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Left Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Left Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Left Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Left Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output].Columns[FeeDescription]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Right Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate FeeDim table\Sort industries.Outputs[Sort Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Right Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Populate FeeDim table\Sort industries.Outputs[Sort Output].Columns[IndustryId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[IndustryId]"
                      name="IndustryId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Right Input].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Left Input].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Left Input].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Left Input].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate FeeDim table\Sort and remove duplicates"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort and remove duplicates"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate FeeDim table\Sort and remove duplicates.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate FeeDim table\Sort and remove duplicates.Inputs[Sort Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[IndustryId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeDim table\Sort and remove duplicates.Inputs[Sort Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[RecordType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeDim table\Sort and remove duplicates.Inputs[Sort Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[FeeType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeDim table\Sort and remove duplicates.Inputs[Sort Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output].Columns[IndustryId]"
                      name="IndustryId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output].Columns[RecordType]"
                      name="RecordType"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output].Columns[FeeType]"
                      name="FeeType"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate FeeDim table\Sort fee data and remove duplicates"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort fee data and remove duplicates"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Inputs[Sort Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Inputs[Sort Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Inputs[Sort Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate FeeDim table\Sort industries"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort industries"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate FeeDim table\Sort industries.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate FeeDim table\Sort industries.Inputs[Sort Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeDim table\Sort industries.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate FeeDim table\Sort industries.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Sort industries.Outputs[Sort Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Populate FeeDim table\Sort industries.Outputs[Sort Output].Columns[IndustryId]"
                      name="IndustryId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeDim table\Sort industries.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeDim table\Sort industries.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate FeeDim table.Paths[Merge Join Output]"
              endId="Package\Populate FeeDim table\Sort and remove duplicates.Inputs[Sort Input]"
              name="Merge Join Output"
              startId="Package\Populate FeeDim table\Join by industry.Outputs[Merge Join Output]" />
            <path
              refId="Package\Populate FeeDim table.Paths[OLE DB Source Output]"
              endId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate FeeDim table\Get staged fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate FeeDim table.Paths[OLE DB Source Output1]"
              endId="Package\Populate FeeDim table\Sort industries.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate FeeDim table\Get industry dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate FeeDim table.Paths[Sort Output]"
              endId="Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Populate FeeDim table\Sort industries.Outputs[Sort Output]" />
            <path
              refId="Package\Populate FeeDim table.Paths[Sort Output1]"
              endId="Package\Populate FeeDim table\Join by industry.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Populate FeeDim table\Sort fee data and remove duplicates.Outputs[Sort Output]" />
            <path
              refId="Package\Populate FeeDim table.Paths[Sort Output2]"
              endId="Package\Populate FeeDim table\Insert fee data to database.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\Populate FeeDim table\Sort and remove duplicates.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate FeeExtract table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{5519E0CF-2B53-400C-8FF4-970B63AB6361}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate FeeExtract table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate FeeExtract table\Extract fee data from dataset"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="2057"
              name="Extract fee data from dataset"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate FeeExtract table\Extract fee data from dataset.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Fees]"
                  connectionManagerRefId="Package.ConnectionManagers[Fees]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[RecordId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD ID]"
                      length="50"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[RecordId]"
                      name="RecordId"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[RecordType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD TYPE]"
                      length="50"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[RecordType]"
                      name="RecordType"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME]"
                      length="300"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME2]"
                      length="100"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[INDUSTRY]"
                      length="50"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE SEQUENCE ID]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE TYPE]"
                      length="50"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeType]"
                      name="FeeType"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE DESCRIPTION]"
                      length="100"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeAmount]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE AMOUNT]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE DATE]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeDate]"
                      name="FeeDate"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeStatus]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE STATUS]"
                      length="50"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeStatus]"
                      name="FeeStatus"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD ID]"
                      dataType="wstr"
                      length="50"
                      name="RECORD ID" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD TYPE]"
                      dataType="wstr"
                      length="50"
                      name="RECORD TYPE" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME]"
                      dataType="wstr"
                      length="300"
                      name="BUSINESS NAME" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME2]"
                      dataType="wstr"
                      length="100"
                      name="BUSINESS NAME2" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[INDUSTRY]"
                      dataType="wstr"
                      length="50"
                      name="INDUSTRY" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE SEQUENCE ID]"
                      dataType="i4"
                      name="FEE SEQUENCE ID" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE TYPE]"
                      dataType="wstr"
                      length="50"
                      name="FEE TYPE" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE DESCRIPTION]"
                      dataType="wstr"
                      length="100"
                      name="FEE DESCRIPTION" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE AMOUNT]"
                      dataType="numeric"
                      name="FEE AMOUNT"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE DATE]"
                      dataType="dbDate"
                      name="FEE DATE" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE STATUS]"
                      dataType="wstr"
                      length="50"
                      name="FEE STATUS" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="65001"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate FeeExtract table\Insert raw fee data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert raw fee data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate FeeExtract table\Insert raw fee data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeAmount]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDate]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[RecordId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordId"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordId]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[RecordId]" />
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[FeeStatus]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeStatus"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeStatus]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeStatus]" />
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output].Columns[FeeSequenceId]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeAmount]"
                      dataType="numeric"
                      name="FeeAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDate]"
                      dataType="dbDate"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordId]"
                      dataType="wstr"
                      length="50"
                      name="RecordId" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeStatus]"
                      dataType="wstr"
                      length="50"
                      name="FeeStatus" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate FeeExtract table\Insert raw fee data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate FeeExtract table\Insert raw fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate FeeExtract table\Insert raw fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate FeeExtract table\Insert raw fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate FeeExtract table\Redirect errors"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="2057"
              name="Redirect errors"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate FeeExtract table\Redirect errors.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Fees - errors]"
                  connectionManagerRefId="Package.ConnectionManagers[Fees - errors]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate FeeExtract table\Redirect errors.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Redirect errors.Inputs[Flat File Destination Input].Columns[Flat File Source Error Output Column]"
                      cachedCodepage="65001"
                      cachedDataType="text"
                      cachedName="Flat File Source Error Output Column"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[Flat File Source Error Output Column]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Redirect errors.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Populate FeeExtract table\Redirect errors.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Populate FeeExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[Flat File Source Error Output Column]"
                      codePage="65001"
                      dataType="text"
                      name="Flat File Source Error Output Column" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate FeeExtract table.Paths[Flat File Source Error Output]"
              endId="Package\Populate FeeExtract table\Redirect errors.Inputs[Flat File Destination Input]"
              name="Flat File Source Error Output"
              startId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Error Output]" />
            <path
              refId="Package\Populate FeeExtract table.Paths[Flat File Source Output]"
              endId="Package\Populate FeeExtract table\Insert raw fee data to database.Inputs[OLE DB Destination Input]"
              name="Flat File Source Output"
              startId="Package\Populate FeeExtract table\Extract fee data from dataset.Outputs[Flat File Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate FeeStage table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{15387848-fb09-49b5-b8f6-abb847574112}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate FeeStage table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate FeeStage table\Get extracted fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get extracted fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate FeeStage table\Get extracted fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      length="50"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      name="RecordType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      length="50"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      name="FeeType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]"
                      name="FeeDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      length="100"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordId]"
                      dataType="wstr"
                      length="50"
                      name="RecordId" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      dataType="numeric"
                      name="FeeAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      dataType="dbDate"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeStatus]"
                      dataType="wstr"
                      length="50"
                      name="FeeStatus" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      name="RecordType" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      name="FeeType" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeDate]"
                      name="FeeDate" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      name="FeeDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate FeeStage table\Get extracted license data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get extracted license data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate FeeStage table\Get extracted license data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="DCALicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      name="LicenseType" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      dataType="dbDate"
                      name="LicenseExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseStatus]"
                      dataType="wstr"
                      length="50"
                      name="LicenseStatus" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      dataType="dbDate"
                      name="LicenseCreationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[ContactPhoneNumber]"
                      dataType="wstr"
                      length="50"
                      name="ContactPhoneNumber" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BIN]"
                      dataType="wstr"
                      length="50"
                      name="BIN" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BBL]"
                      dataType="wstr"
                      length="50"
                      name="BBL" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[NTA]"
                      dataType="wstr"
                      length="50"
                      name="NTA" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Detail]"
                      dataType="wstr"
                      length="300"
                      name="Detail" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Location]"
                      dataType="wstr"
                      length="50"
                      name="Location" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate FeeStage table\Insert fee data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert fee data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate FeeStage table\Insert fee data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      externalMetadataColumnId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      externalMetadataColumnId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      externalMetadataColumnId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      externalMetadataColumnId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeAmount]"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      externalMetadataColumnId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDate]"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      externalMetadataColumnId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      externalMetadataColumnId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeDescription]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeAmount]"
                      dataType="numeric"
                      name="FeeAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDate]"
                      dataType="dbDate"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate FeeStage table\Insert fee data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate FeeStage table\Insert fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate FeeStage table\Insert fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate FeeStage table\Insert fee data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate FeeStage table\Remove fees for undefined businesses"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Remove fees for undefined businesses"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">2</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[Industry]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Right Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate FeeStage table\Sort license data.Outputs[Sort Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Right Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Populate FeeStage table\Sort license data.Outputs[Sort Output].Columns[BusinessName2]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[BusinessName]"
                      name="BusinessName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[BusinessName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[BusinessName2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output].Columns[Industry]"
                      name="Industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate FeeStage table\Sort fee data"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort fee data"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate FeeStage table\Sort fee data.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Inputs[Sort Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Inputs[Sort Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Inputs[Sort Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Inputs[Sort Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Inputs[Sort Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Inputs[Sort Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Inputs[Sort Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[Industry]"
                      name="Industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[BusinessName]"
                      name="BusinessName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate FeeStage table\Sort license data"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort license data"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate FeeStage table\Sort license data.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Sort license data.Inputs[Sort Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate FeeStage table\Sort license data.Inputs[Sort Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate FeeStage table\Sort license data.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Sort license data.Outputs[Sort Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate FeeStage table\Sort license data.Outputs[Sort Output].Columns[BusinessName]"
                      name="BusinessName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate FeeStage table\Sort license data.Outputs[Sort Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate FeeStage table\Sort license data.Outputs[Sort Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate FeeStage table.Paths[Merge Join Output]"
              endId="Package\Populate FeeStage table\Insert fee data to database.Inputs[OLE DB Destination Input]"
              name="Merge Join Output"
              startId="Package\Populate FeeStage table\Remove fees for undefined businesses.Outputs[Merge Join Output]" />
            <path
              refId="Package\Populate FeeStage table.Paths[OLE DB Source Output]"
              endId="Package\Populate FeeStage table\Sort fee data.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate FeeStage table\Get extracted fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate FeeStage table.Paths[OLE DB Source Output1]"
              endId="Package\Populate FeeStage table\Sort license data.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate FeeStage table\Get extracted license data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate FeeStage table.Paths[Sort Output]"
              endId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Populate FeeStage table\Sort fee data.Outputs[Sort Output]" />
            <path
              refId="Package\Populate FeeStage table.Paths[Sort Output1]"
              endId="Package\Populate FeeStage table\Remove fees for undefined businesses.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Populate FeeStage table\Sort license data.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate IndustryDim table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{A8785140-3444-4462-8E40-9EF36AE3FCB3}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate IndustryDim table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate IndustryDim table\Extract staged fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Extract staged fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate IndustryDim table\Extract staged fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      dataType="dbDate"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      dataType="numeric"
                      name="FeeAmount"
                      precision="18"
                      scale="2" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate IndustryDim table\Extract staged license data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Extract staged license data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate IndustryDim table\Extract staged license data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="DCALicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      dataType="dbDate"
                      name="LicenseCreationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      dataType="dbDate"
                      name="LicenseExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      name="LicenseType" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate IndustryDim table\Insert industry data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert industry data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[IndustryDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate IndustryDim table\Insert industry data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate IndustryDim table\Insert industry data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate IndustryDim table\Insert industry data to database.Inputs[OLE DB Destination Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Populate IndustryDim table\Insert industry data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      lineageId="Package\Populate IndustryDim table\Sort and remove duplicates 3.Outputs[Sort Output].Columns[Industry]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Insert industry data to database.Inputs[OLE DB Destination Input].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                    <externalMetadataColumn
                      refId="Package\Populate IndustryDim table\Insert industry data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate IndustryDim table\Insert industry data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate IndustryDim table\Insert industry data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Insert industry data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate IndustryDim table\Insert industry data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Insert industry data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate IndustryDim table\Insert industry data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate IndustryDim table\Merge"
              componentClassID="Microsoft.Merge"
              contactInfo="Merge;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple sorted data flows into one sorted data flow. Unlike the Merge Join, all rows flow to the output. For example, combine two sorted lists of customers into a single sorted list. If sorting is not important, use the Union All transformation. "
              name="Merge"
              version="1">
              <inputs>
                <input
                  refId="Package\Populate IndustryDim table\Merge.Inputs[Merge Input 1]"
                  name="Merge Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate IndustryDim table\Merge.Inputs[Merge Input 1].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate IndustryDim table\Sort and remove duplicates 1.Outputs[Sort Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate IndustryDim table\Merge.Outputs[Merge Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate IndustryDim table\Merge.Inputs[Merge Input 2]"
                  name="Merge Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate IndustryDim table\Merge.Inputs[Merge Input 2].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate IndustryDim table\Sort and remove duplicates 2.Outputs[Sort Output].Columns[Industry]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate IndustryDim table\Merge.Outputs[Merge Output 1].Columns[Industry]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate IndustryDim table\Merge.Outputs[Merge Output 1]"
                  isSorted="true"
                  name="Merge Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Merge.Outputs[Merge Output 1].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate IndustryDim table\Merge.Outputs[Merge Output 1].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate IndustryDim table\Sort and remove duplicates 1"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort and remove duplicates 1"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate IndustryDim table\Sort and remove duplicates 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate IndustryDim table\Sort and remove duplicates 1.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate IndustryDim table\Sort and remove duplicates 1.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Sort and remove duplicates 1.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate IndustryDim table\Sort and remove duplicates 1.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate IndustryDim table\Sort and remove duplicates 2"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort and remove duplicates 2"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate IndustryDim table\Sort and remove duplicates 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate IndustryDim table\Sort and remove duplicates 2.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate IndustryDim table\Sort and remove duplicates 2.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Sort and remove duplicates 2.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate IndustryDim table\Sort and remove duplicates 2.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate IndustryDim table\Sort and remove duplicates 3"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort and remove duplicates 3"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate IndustryDim table\Sort and remove duplicates 3.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate IndustryDim table\Sort and remove duplicates 3.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate IndustryDim table\Merge.Outputs[Merge Output 1].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate IndustryDim table\Sort and remove duplicates 3.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate IndustryDim table\Sort and remove duplicates 3.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate IndustryDim table\Sort and remove duplicates 3.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate IndustryDim table\Merge.Outputs[Merge Output 1].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate IndustryDim table.Paths[Merge Output 1]"
              endId="Package\Populate IndustryDim table\Sort and remove duplicates 3.Inputs[Sort Input]"
              name="Merge Output 1"
              startId="Package\Populate IndustryDim table\Merge.Outputs[Merge Output 1]" />
            <path
              refId="Package\Populate IndustryDim table.Paths[OLE DB Source Output]"
              endId="Package\Populate IndustryDim table\Sort and remove duplicates 2.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate IndustryDim table\Extract staged fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate IndustryDim table.Paths[OLE DB Source Output1]"
              endId="Package\Populate IndustryDim table\Sort and remove duplicates 1.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate IndustryDim table\Extract staged license data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate IndustryDim table.Paths[Sort Output]"
              endId="Package\Populate IndustryDim table\Merge.Inputs[Merge Input 1]"
              name="Sort Output"
              startId="Package\Populate IndustryDim table\Sort and remove duplicates 1.Outputs[Sort Output]" />
            <path
              refId="Package\Populate IndustryDim table.Paths[Sort Output1]"
              endId="Package\Populate IndustryDim table\Merge.Inputs[Merge Input 2]"
              name="Sort Output"
              startId="Package\Populate IndustryDim table\Sort and remove duplicates 2.Outputs[Sort Output]" />
            <path
              refId="Package\Populate IndustryDim table.Paths[Sort Output2]"
              endId="Package\Populate IndustryDim table\Insert industry data to database.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\Populate IndustryDim table\Sort and remove duplicates 3.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate LicenseExtract table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{903a1c39-ceab-4b1e-bb0d-de684ba1f4f5}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate LicenseExtract table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate LicenseExtract table\Convert strings to dates"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Convert strings to dates"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Populate LicenseExtract table\Convert strings to dates.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Convert strings to dates.Inputs[Derived Column Input].Columns[LicenseExpirationDateStr]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseExpirationDateStr"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseExpirationDateStr]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Convert strings to dates.Inputs[Derived Column Input].Columns[LicenseCreationDateStr]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseCreationDateStr"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseCreationDateStr]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Populate LicenseExtract table\Convert strings to dates.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseCreationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseCreationDateStr]} == "" ? NULL(DT_DBDATE) : (DT_DBDATE)#{Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseCreationDateStr]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LicenseCreationDateStr == "" ? NULL(DT_DBDATE) : (DT_DBDATE)LicenseCreationDateStr</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseExpirationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseExpirationDateStr]} == "" ? NULL(DT_DBDATE) : (DT_DBDATE)#{Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseExpirationDateStr]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LicenseExpirationDateStr == "" ? NULL(DT_DBDATE) : (DT_DBDATE)LicenseExpirationDateStr</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Populate LicenseExtract table\Convert strings to dates.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseExtract table\Get license data from dataset"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="2057"
              name="Get license data from dataset"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate LicenseExtract table\Get license data from dataset.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Licenses]"
                  connectionManagerRefId="Package.ConnectionManagers[Licenses]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[DCALicenseNumber]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[DCA License Number]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[DCALicenseNumber]"
                      name="DCALicenseNumber"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Type]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseType]"
                      name="LicenseType"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseExpirationDateStr]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Expiration Date]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseExpirationDateStr]"
                      name="LicenseExpirationDateStr"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseStatus]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Status]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseStatus]"
                      name="LicenseStatus"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseCreationDateStr]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Creation Date]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseCreationDateStr]"
                      name="LicenseCreationDateStr"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Business Name]"
                      length="300"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Business Name 2]"
                      length="100"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address Building]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressBuilding]"
                      name="AddressBuilding"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address Street Name]"
                      length="75"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressStreetName]"
                      name="AddressStreetName"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Secondary Address Street Name]"
                      length="75"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressCity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address City]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressCity]"
                      name="AddressCity"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressState]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address State]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressState]"
                      name="AddressState"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressZIP]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address ZIP]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressZIP]"
                      name="AddressZIP"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[ContactPhoneNumber]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Contact Phone Number]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[ContactPhoneNumber]"
                      name="ContactPhoneNumber"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressBorough]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address Borough]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressBorough]"
                      name="AddressBorough"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BoroughCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Borough Code]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BoroughCode]"
                      name="BoroughCode"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Community Board]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[CommunityBoard]"
                      name="CommunityBoard"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Council District]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BIN]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[BIN]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BIN]"
                      name="BIN"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BBL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[BBL]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BBL]"
                      name="BBL"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[NTA]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[NTA]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[NTA]"
                      name="NTA"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[CensusTract]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Census Tract]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[CensusTract]"
                      name="CensusTract"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Detail]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Detail]"
                      length="300"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Detail]"
                      name="Detail"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Longitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Longitude]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Longitude]"
                      name="Longitude"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Latitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Latitude]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Latitude]"
                      name="Latitude"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Location]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Location]"
                      length="50"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Location]"
                      name="Location"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[DCA License Number]"
                      dataType="wstr"
                      length="50"
                      name="DCA License Number" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Type]"
                      dataType="wstr"
                      length="50"
                      name="License Type" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Expiration Date]"
                      dataType="wstr"
                      length="50"
                      name="License Expiration Date" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Status]"
                      dataType="wstr"
                      length="50"
                      name="License Status" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[License Creation Date]"
                      dataType="wstr"
                      length="50"
                      name="License Creation Date" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Business Name]"
                      dataType="wstr"
                      length="300"
                      name="Business Name" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Business Name 2]"
                      dataType="wstr"
                      length="100"
                      name="Business Name 2" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address Building]"
                      dataType="wstr"
                      length="50"
                      name="Address Building" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address Street Name]"
                      dataType="wstr"
                      length="75"
                      name="Address Street Name" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Secondary Address Street Name]"
                      dataType="wstr"
                      length="75"
                      name="Secondary Address Street Name" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address City]"
                      dataType="wstr"
                      length="50"
                      name="Address City" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address State]"
                      dataType="wstr"
                      length="50"
                      name="Address State" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address ZIP]"
                      dataType="wstr"
                      length="50"
                      name="Address ZIP" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Contact Phone Number]"
                      dataType="wstr"
                      length="50"
                      name="Contact Phone Number" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Address Borough]"
                      dataType="wstr"
                      length="50"
                      name="Address Borough" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Borough Code]"
                      dataType="wstr"
                      length="50"
                      name="Borough Code" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Community Board]"
                      dataType="wstr"
                      length="50"
                      name="Community Board" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Council District]"
                      dataType="wstr"
                      length="50"
                      name="Council District" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[BIN]"
                      dataType="wstr"
                      length="50"
                      name="BIN" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[BBL]"
                      dataType="wstr"
                      length="50"
                      name="BBL" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[NTA]"
                      dataType="wstr"
                      length="50"
                      name="NTA" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Census Tract]"
                      dataType="wstr"
                      length="50"
                      name="Census Tract" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Detail]"
                      dataType="wstr"
                      length="300"
                      name="Detail" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].ExternalColumns[Location]"
                      dataType="wstr"
                      length="50"
                      name="Location" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="65001"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseExtract table\Insert raw license data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert raw license data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate LicenseExtract table\Insert raw license data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[DCALicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DCALicenseNumber"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[DCALicenseNumber]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[DCALicenseNumber]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[LicenseType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseType"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseType]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseType]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[LicenseStatus]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseStatus"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseStatus]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[LicenseStatus]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressBuilding]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressBuilding]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressStreetName]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressStreetName]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[SecondaryAddressStreetName]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[SecondaryAddressStreetName]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressCity]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressCity]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressState]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressState]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressZIP]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressZIP]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[ContactPhoneNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ContactPhoneNumber"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[ContactPhoneNumber]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[ContactPhoneNumber]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressBorough]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[AddressBorough]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BoroughCode]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BoroughCode]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CommunityBoard]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[CommunityBoard]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CouncilDistrict]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[CouncilDistrict]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[BIN]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BIN"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BIN]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BIN]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[BBL]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BBL"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BBL]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[BBL]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[NTA]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="NTA"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[NTA]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[NTA]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CensusTract]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[CensusTract]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[Detail]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="Detail"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Detail]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Detail]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Longitude]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Latitude]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[Location]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Location"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Location]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output].Columns[Location]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[LicenseExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="LicenseExpirationDate"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseExpirationDate]"
                      lineageId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseExpirationDate]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].Columns[LicenseCreationDate]"
                      cachedDataType="dbDate"
                      cachedName="LicenseCreationDate"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseCreationDate]"
                      lineageId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseCreationDate]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="DCALicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      name="LicenseType" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseExpirationDate]"
                      dataType="dbDate"
                      name="LicenseExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseStatus]"
                      dataType="wstr"
                      length="50"
                      name="LicenseStatus" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseCreationDate]"
                      dataType="dbDate"
                      name="LicenseCreationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[ContactPhoneNumber]"
                      dataType="wstr"
                      length="50"
                      name="ContactPhoneNumber" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BIN]"
                      dataType="wstr"
                      length="50"
                      name="BIN" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BBL]"
                      dataType="wstr"
                      length="50"
                      name="BBL" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[NTA]"
                      dataType="wstr"
                      length="50"
                      name="NTA" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Detail]"
                      dataType="wstr"
                      length="300"
                      name="Detail" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Location]"
                      dataType="wstr"
                      length="50"
                      name="Location" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate LicenseExtract table\Insert raw license data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseExtract table\Insert raw license data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Insert raw license data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseExtract table\Insert raw license data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseExtract table\Redirect errors"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="2057"
              name="Redirect errors"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate LicenseExtract table\Redirect errors.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Licenses - errors]"
                  connectionManagerRefId="Package.ConnectionManagers[Licenses - errors]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate LicenseExtract table\Redirect errors.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Redirect errors.Inputs[Flat File Destination Input].Columns[Flat File Source Error Output Column]"
                      cachedCodepage="65001"
                      cachedDataType="text"
                      cachedName="Flat File Source Error Output Column"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[Flat File Source Error Output Column]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Redirect errors.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Redirect errors.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Populate LicenseExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[Flat File Source Error Output Column]"
                      codePage="65001"
                      dataType="text"
                      name="Flat File Source Error Output Column" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Populate LicenseExtract table\Verify date correctness"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Verify date correctness"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Populate LicenseExtract table\Verify date correctness.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Verify date correctness.Inputs[Derived Column Input].Columns[LicenseCreationDate]"
                      cachedDataType="dbDate"
                      cachedName="LicenseCreationDate"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseCreationDate]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">![ISNULL](#{Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseExpirationDate]}) &amp;&amp; #{Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseExpirationDate]} &lt; #{Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseCreationDate]} ? #{Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseExpirationDate]} : #{Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseCreationDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">!ISNULL(LicenseExpirationDate) &amp;&amp; LicenseExpirationDate &lt; LicenseCreationDate ? LicenseExpirationDate : LicenseCreationDate</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseExtract table\Verify date correctness.Inputs[Derived Column Input].Columns[LicenseExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="LicenseExpirationDate"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseExpirationDate]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">![ISNULL](#{Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseExpirationDate]}) &amp;&amp; #{Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseExpirationDate]} &lt; #{Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseCreationDate]} ? #{Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseCreationDate]} : #{Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output].Columns[LicenseExpirationDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">!ISNULL(LicenseExpirationDate) &amp;&amp; LicenseExpirationDate &lt; LicenseCreationDate ? LicenseCreationDate : LicenseExpirationDate</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate LicenseExtract table\Verify date correctness.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Populate LicenseExtract table\Verify date correctness.Inputs[Derived Column Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate LicenseExtract table\Verify date correctness.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Populate LicenseExtract table\Verify date correctness.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Verify date correctness.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseExtract table\Verify date correctness.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate LicenseExtract table\Verify date correctness.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseExtract table\Verify date correctness.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate LicenseExtract table.Paths[Derived Column Output]"
              endId="Package\Populate LicenseExtract table\Verify date correctness.Inputs[Derived Column Input]"
              name="Derived Column Output"
              startId="Package\Populate LicenseExtract table\Convert strings to dates.Outputs[Derived Column Output]" />
            <path
              refId="Package\Populate LicenseExtract table.Paths[Derived Column Output1]"
              endId="Package\Populate LicenseExtract table\Insert raw license data to database.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Populate LicenseExtract table\Verify date correctness.Outputs[Derived Column Output]" />
            <path
              refId="Package\Populate LicenseExtract table.Paths[Flat File Source Error Output]"
              endId="Package\Populate LicenseExtract table\Redirect errors.Inputs[Flat File Destination Input]"
              name="Flat File Source Error Output"
              startId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Error Output]" />
            <path
              refId="Package\Populate LicenseExtract table.Paths[Flat File Source Output]"
              endId="Package\Populate LicenseExtract table\Convert strings to dates.Inputs[Derived Column Input]"
              name="Flat File Source Output"
              startId="Package\Populate LicenseExtract table\Get license data from dataset.Outputs[Flat File Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate LicenseFact table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{FBC70F30-205E-421F-AB7E-3CCE9BBB3AF1}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate LicenseFact table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate LicenseFact table\Calculate license duration"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Calculate license duration"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Populate LicenseFact table\Calculate license duration.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Calculate license duration.Inputs[Derived Column Input].Columns[CreationDate]"
                      cachedDataType="dbDate"
                      cachedName="CreationDate"
                      lineageId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[CreationDate]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Calculate license duration.Inputs[Derived Column Input].Columns[ExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="ExpirationDate"
                      lineageId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[ExpirationDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate LicenseFact table\Calculate license duration.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Populate LicenseFact table\Calculate license duration.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Calculate license duration.Outputs[Derived Column Output].Columns[DurationInDays]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populate LicenseFact table\Calculate license duration.Outputs[Derived Column Output].Columns[DurationInDays]"
                      name="DurationInDays"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEDIFF]("DAY",#{Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[CreationDate]},#{Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[ExpirationDate]}) + 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEDIFF("DAY",CreationDate,ExpirationDate) + 1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate LicenseFact table\Calculate license duration.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Populate LicenseFact table\Calculate license duration.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Calculate license duration.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Calculate license duration.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Calculate license duration.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Calculate license duration.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseFact table\Extract staged license data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Extract staged license data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate LicenseFact table\Extract staged license data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[CreationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[CreationDate]"
                      name="CreationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[ExpirationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[ExpirationDate]"
                      name="ExpirationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[DCALicenseNumber]"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]"
                      name="LicenseNumber"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="DCALicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      name="LicenseType" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      dataType="dbDate"
                      name="LicenseCreationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      dataType="dbDate"
                      name="LicenseExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseCreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[DCALicenseNumber]"
                      name="DCALicenseNumber" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseFact table\Get business dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get business dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[BusinessDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate LicenseFact table\Get business dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessId]"
                      lineageId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]"
                      name="BusinessId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessId]"
                      dataType="i4"
                      name="BusinessId" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      name="BusinessType" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressZip]"
                      dataType="wstr"
                      length="50"
                      name="AddressZip" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessId]"
                      name="BusinessId" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseFact table\Get industry dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get industry dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[IndustryDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate LicenseFact table\Get industry dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      lineageId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      name="IndustryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      name="IndustryId" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseFact table\Insert license data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert license data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[LicenseFact]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate LicenseFact table\Insert license data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseNumber]"
                      lineageId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[LicenseNumber]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessId]"
                      lineageId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[BusinessId]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[DurationInDays]"
                      cachedDataType="i4"
                      cachedName="DurationInDays"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[DurationInDays]"
                      lineageId="Package\Populate LicenseFact table\Calculate license duration.Outputs[Derived Column Output].Columns[DurationInDays]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[CreationDate]"
                      cachedDataType="dbDate"
                      cachedName="CreationDate"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CreationDate]"
                      lineageId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[CreationDate]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[ExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="ExpirationDate"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[ExpirationDate]"
                      lineageId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[ExpirationDate]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      externalMetadataColumnId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[IndustryId]"
                      lineageId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[IndustryId]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="LicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessId]"
                      dataType="i4"
                      name="BusinessId" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[DurationInDays]"
                      dataType="i4"
                      name="DurationInDays" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CreationDate]"
                      dataType="dbDate"
                      name="CreationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[ExpirationDate]"
                      dataType="dbDate"
                      name="ExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate LicenseFact table\Insert license data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Insert license data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Insert license data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Insert license data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseFact table\Join data on business names"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join data on business names"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">2</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Left Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Left Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Left Input].Columns[CreationDate]"
                      cachedDataType="dbDate"
                      cachedName="CreationDate"
                      lineageId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[CreationDate]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Left Input].Columns[ExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="ExpirationDate"
                      lineageId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[ExpirationDate]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Left Input].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[LicenseNumber]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Left Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[Industry]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Right Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate LicenseFact table\Sort business data.Outputs[Sort Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Right Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Populate LicenseFact table\Sort business data.Outputs[Sort Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Right Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate LicenseFact table\Sort business data.Outputs[Sort Output].Columns[BusinessId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[CreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[CreationDate]"
                      name="CreationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Left Input].Columns[CreationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[ExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[ExpirationDate]"
                      name="ExpirationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Left Input].Columns[ExpirationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[LicenseNumber]"
                      name="LicenseNumber">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Left Input].Columns[LicenseNumber]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[Industry]"
                      name="Industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Left Input].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Right Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseFact table\Join data on industry"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join data on industry"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Left Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Left Input].Columns[CreationDate]"
                      cachedDataType="dbDate"
                      cachedName="CreationDate"
                      lineageId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[CreationDate]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Left Input].Columns[ExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="ExpirationDate"
                      lineageId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[ExpirationDate]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Left Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[BusinessId]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Left Input].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[LicenseNumber]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Right Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate LicenseFact table\Sort industry data.Outputs[Sort Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Right Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Populate LicenseFact table\Sort industry data.Outputs[Sort Output].Columns[IndustryId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[CreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[CreationDate]"
                      name="CreationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Left Input].Columns[CreationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[ExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[ExpirationDate]"
                      name="ExpirationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Left Input].Columns[ExpirationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Left Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[IndustryId]"
                      name="IndustryId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Right Input].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output].Columns[LicenseNumber]"
                      name="LicenseNumber">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Left Input].Columns[LicenseNumber]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseFact table\Sort business data"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort business data"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate LicenseFact table\Sort business data.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort business data.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort business data.Inputs[Sort Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort business data.Inputs[Sort Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate LicenseFact table\Sort business data.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort business data.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Sort business data.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort business data.Outputs[Sort Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate LicenseFact table\Sort business data.Outputs[Sort Output].Columns[BusinessName]"
                      name="BusinessName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort business data.Outputs[Sort Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate LicenseFact table\Sort business data.Outputs[Sort Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseFact table\Sort business data 2"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort business data 2"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate LicenseFact table\Sort business data 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort business data 2.Inputs[Sort Input].Columns[CreationDate]"
                      cachedDataType="dbDate"
                      cachedName="CreationDate"
                      lineageId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[CreationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort business data 2.Inputs[Sort Input].Columns[ExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="ExpirationDate"
                      lineageId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[ExpirationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort business data 2.Inputs[Sort Input].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[LicenseNumber]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort business data 2.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort business data 2.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[CreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[CreationDate]"
                      name="CreationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[CreationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[ExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[ExpirationDate]"
                      name="ExpirationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[ExpirationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[LicenseNumber]"
                      name="LicenseNumber">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[LicenseNumber]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseFact table\Sort industry data"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort industry data"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate LicenseFact table\Sort industry data.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort industry data.Inputs[Sort Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort industry data.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate LicenseFact table\Sort industry data.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort industry data.Outputs[Sort Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseFact table\Sort industry data.Outputs[Sort Output].Columns[IndustryId]"
                      name="IndustryId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort industry data.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Sort industry data.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseFact table\Sort license data"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort license data"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate LicenseFact table\Sort license data.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort license data.Inputs[Sort Input].Columns[CreationDate]"
                      cachedDataType="dbDate"
                      cachedName="CreationDate"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[CreationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort license data.Inputs[Sort Input].Columns[ExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="ExpirationDate"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[ExpirationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort license data.Inputs[Sort Input].Columns[LicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseNumber"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort license data.Inputs[Sort Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort license data.Inputs[Sort Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseFact table\Sort license data.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[CreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[CreationDate]"
                      name="CreationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[CreationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[ExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[ExpirationDate]"
                      name="ExpirationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[ExpirationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[LicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[LicenseNumber]"
                      name="LicenseNumber">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[LicenseNumber]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[BusinessName]"
                      name="BusinessName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[BusinessName2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output].Columns[Industry]"
                      name="Industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate LicenseFact table.Paths[Derived Column Output]"
              endId="Package\Populate LicenseFact table\Insert license data to database.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Populate LicenseFact table\Calculate license duration.Outputs[Derived Column Output]" />
            <path
              refId="Package\Populate LicenseFact table.Paths[Merge Join Output]"
              endId="Package\Populate LicenseFact table\Calculate license duration.Inputs[Derived Column Input]"
              name="Merge Join Output"
              startId="Package\Populate LicenseFact table\Join data on industry.Outputs[Merge Join Output]" />
            <path
              refId="Package\Populate LicenseFact table.Paths[Merge Join Output1]"
              endId="Package\Populate LicenseFact table\Sort business data 2.Inputs[Sort Input]"
              name="Merge Join Output"
              startId="Package\Populate LicenseFact table\Join data on business names.Outputs[Merge Join Output]" />
            <path
              refId="Package\Populate LicenseFact table.Paths[OLE DB Source Output]"
              endId="Package\Populate LicenseFact table\Sort license data.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate LicenseFact table\Extract staged license data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate LicenseFact table.Paths[OLE DB Source Output1]"
              endId="Package\Populate LicenseFact table\Sort business data.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate LicenseFact table\Get business dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate LicenseFact table.Paths[OLE DB Source Output2]"
              endId="Package\Populate LicenseFact table\Sort industry data.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate LicenseFact table\Get industry dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate LicenseFact table.Paths[Sort Output]"
              endId="Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Populate LicenseFact table\Sort business data 2.Outputs[Sort Output]" />
            <path
              refId="Package\Populate LicenseFact table.Paths[Sort Output1]"
              endId="Package\Populate LicenseFact table\Join data on industry.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Populate LicenseFact table\Sort industry data.Outputs[Sort Output]" />
            <path
              refId="Package\Populate LicenseFact table.Paths[Sort Output2]"
              endId="Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Populate LicenseFact table\Sort license data.Outputs[Sort Output]" />
            <path
              refId="Package\Populate LicenseFact table.Paths[Sort Output3]"
              endId="Package\Populate LicenseFact table\Join data on business names.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Populate LicenseFact table\Sort business data.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate LicenseStage table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{74767c9e-4caf-411b-8e33-e62cac8830b6}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate LicenseStage table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate LicenseStage table\Get extracted license data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get extracted license data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate LicenseStage table\Get extracted license data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[LicenseType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseType]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[LicenseType]"
                      name="LicenseType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]"
                      name="AddressBuilding"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      length="75"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]"
                      name="AddressStreetName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      length="75"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]"
                      name="AddressCity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]"
                      name="AddressState"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]"
                      name="AddressZIP"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]"
                      name="AddressBorough"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]"
                      name="BoroughCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]"
                      name="CommunityBoard"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]"
                      name="CensusTract"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]"
                      name="Longitude"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]"
                      name="Latitude"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[DCALicenseNumber]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[DCALicenseNumber]"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[DCALicenseNumber]"
                      name="DCALicenseNumber"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="DCALicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      name="LicenseType" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      dataType="dbDate"
                      name="LicenseExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseStatus]"
                      dataType="wstr"
                      length="50"
                      name="LicenseStatus" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      dataType="dbDate"
                      name="LicenseCreationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[ContactPhoneNumber]"
                      dataType="wstr"
                      length="50"
                      name="ContactPhoneNumber" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BIN]"
                      dataType="wstr"
                      length="50"
                      name="BIN" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[BBL]"
                      dataType="wstr"
                      length="50"
                      name="BBL" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[NTA]"
                      dataType="wstr"
                      length="50"
                      name="NTA" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Detail]"
                      dataType="wstr"
                      length="300"
                      name="Detail" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].ExternalColumns[Location]"
                      dataType="wstr"
                      length="50"
                      name="Location" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseType]"
                      name="LicenseType" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressBuilding]"
                      name="AddressBuilding" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressStreetName]"
                      name="AddressStreetName" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressCity]"
                      name="AddressCity" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressState]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressState]"
                      name="AddressState" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressZIP]"
                      name="AddressZIP" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[AddressBorough]"
                      name="AddressBorough" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[BoroughCode]"
                      name="BoroughCode" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[CommunityBoard]"
                      name="CommunityBoard" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[CensusTract]"
                      name="CensusTract" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[Longitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[Latitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[DCALicenseNumber]"
                      name="DCALicenseNumber" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseCreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Error Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseStage table\Insert license data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert license data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate LicenseStage table\Insert license data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[LicenseType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseType"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseType]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[LicenseType]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressBuilding]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressBuilding]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressStreetName]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressStreetName]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[SecondaryAddressStreetName]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[SecondaryAddressStreetName]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressCity]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressCity]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressState]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressState]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressZIP]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressZIP]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressBorough]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressBorough]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BoroughCode]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[BoroughCode]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CommunityBoard]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[CommunityBoard]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CouncilDistrict]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[CouncilDistrict]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CensusTract]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[CensusTract]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[Longitude]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[Latitude]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[LicenseExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="LicenseExpirationDate"
                      cachedSortKeyPosition="4"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseExpirationDate]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[LicenseExpirationDate]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[LicenseCreationDate]"
                      cachedDataType="dbDate"
                      cachedName="LicenseCreationDate"
                      cachedSortKeyPosition="3"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseCreationDate]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[LicenseCreationDate]" />
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].Columns[DCALicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DCALicenseNumber"
                      externalMetadataColumnId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[DCALicenseNumber]"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[DCALicenseNumber]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="DCALicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      name="LicenseType" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseCreationDate]"
                      dataType="dbDate"
                      name="LicenseCreationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[LicenseExpirationDate]"
                      dataType="dbDate"
                      name="LicenseExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate LicenseStage table\Insert license data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseStage table\Insert license data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Insert license data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate LicenseStage table\Insert license data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate LicenseStage table\Sort data"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort data"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[LicenseType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LicenseType"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[LicenseType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[AddressBuilding]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBuilding"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[AddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="AddressStreetName"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[SecondaryAddressStreetName]"
                      cachedDataType="wstr"
                      cachedLength="75"
                      cachedName="SecondaryAddressStreetName"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[AddressCity]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressCity"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[AddressState]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressState"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[AddressZIP]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressZIP"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[AddressBorough]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AddressBorough"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[BoroughCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BoroughCode"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[CommunityBoard]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CommunityBoard"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[CouncilDistrict]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CouncilDistrict"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[CensusTract]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CensusTract"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Longitude"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Latitude"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[LicenseExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[LicenseCreationDate]"
                      cachedDataType="dbDate"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input].Columns[DCALicenseNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DCALicenseNumber"
                      lineageId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[DCALicenseNumber]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[Industry]"
                      name="Industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[LicenseType]"
                      name="LicenseType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[LicenseType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[BusinessName]"
                      name="BusinessName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BusinessName2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressBuilding]"
                      name="AddressBuilding">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressBuilding]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressStreetName]"
                      name="AddressStreetName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressStreetName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[SecondaryAddressStreetName]"
                      name="SecondaryAddressStreetName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[SecondaryAddressStreetName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressCity]"
                      name="AddressCity">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressCity]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressState]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressState]"
                      name="AddressState">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressState]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressZIP]"
                      name="AddressZIP">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressZIP]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[AddressBorough]"
                      name="AddressBorough">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[AddressBorough]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[BoroughCode]"
                      name="BoroughCode">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[BoroughCode]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[CommunityBoard]"
                      name="CommunityBoard">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[CommunityBoard]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[CouncilDistrict]"
                      name="CouncilDistrict">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[CouncilDistrict]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[CensusTract]"
                      name="CensusTract">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[CensusTract]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[Longitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[Longitude]"
                      name="Longitude">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[Longitude]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[Latitude]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[Latitude]"
                      name="Latitude">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[Latitude]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[LicenseExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[LicenseCreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output].Columns[DCALicenseNumber]"
                      name="DCALicenseNumber">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output].Columns[DCALicenseNumber]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate LicenseStage table.Paths[OLE DB Source Output]"
              endId="Package\Populate LicenseStage table\Sort data.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate LicenseStage table\Get extracted license data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate LicenseStage table.Paths[Sort Output]"
              endId="Package\Populate LicenseStage table\Insert license data to database.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\Populate LicenseStage table\Sort data.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate PaymentExtract table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{7e12b774-90a8-4e51-a1bf-9496750a1273}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate PaymentExtract table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate PaymentExtract table\Get payment data from dataset"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="2057"
              name="Get payment data from dataset"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate PaymentExtract table\Get payment data from dataset.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Payments]"
                  connectionManagerRefId="Package.ConnectionManagers[Payments]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[RecordId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD ID]"
                      length="50"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[RecordId]"
                      name="RecordId"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME]"
                      length="300"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME2]"
                      length="100"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[INDUSTRY]"
                      length="50"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE SEQUENCE ID]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE TYPE]"
                      length="50"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeType]"
                      name="FeeType"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE DESCRIPTION]"
                      length="100"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[RecordType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD DYPE]"
                      length="50"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[RecordType]"
                      name="RecordType"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[PaymentAmount]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[PAYMENT AMOUNT]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      precision="18"
                      scale="2"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[TransactionType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[TRANSACTION TYPE]"
                      length="50"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[TransactionType]"
                      name="TransactionType"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[PaymentDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[PAYMENT DATE]"
                      length="50"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[PaymentDate]"
                      name="PaymentDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD ID]"
                      dataType="wstr"
                      length="50"
                      name="RECORD ID" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME]"
                      dataType="wstr"
                      length="300"
                      name="BUSINESS NAME" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[BUSINESS NAME2]"
                      dataType="wstr"
                      length="100"
                      name="BUSINESS NAME2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[INDUSTRY]"
                      dataType="wstr"
                      length="50"
                      name="INDUSTRY" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE SEQUENCE ID]"
                      dataType="i4"
                      name="FEE SEQUENCE ID" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE TYPE]"
                      dataType="wstr"
                      length="50"
                      name="FEE TYPE" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[FEE DESCRIPTION]"
                      dataType="wstr"
                      length="100"
                      name="FEE DESCRIPTION" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[RECORD DYPE]"
                      dataType="wstr"
                      length="50"
                      name="RECORD DYPE" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[PAYMENT AMOUNT]"
                      dataType="numeric"
                      name="PAYMENT AMOUNT"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[TRANSACTION TYPE]"
                      dataType="wstr"
                      length="50"
                      name="TRANSACTION TYPE" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].ExternalColumns[PAYMENT DATE]"
                      dataType="wstr"
                      length="50"
                      name="PAYMENT DATE" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="65001"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentExtract table\Insert raw payment data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert raw payment data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[PaymentExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[RecordId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordId"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordId]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[RecordId]" />
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[PaymentAmount]"
                      cachedDataType="numeric"
                      cachedName="PaymentAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[PaymentAmount]" />
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[TransactionType]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[TransactionType]" />
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[PaymentDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PaymentDate"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentDate]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[PaymentDate]" />
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output].Columns[FeeSequenceId]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordId]"
                      dataType="wstr"
                      length="50"
                      name="RecordId" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                      dataType="numeric"
                      name="PaymentAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentDate]"
                      dataType="wstr"
                      length="50"
                      name="PaymentDate" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentExtract table\Insert raw payment data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate PaymentExtract table\Insert raw payment data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentExtract table\Insert raw payment data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentExtract table\Redirect errors"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="2057"
              name="Redirect errors"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate PaymentExtract table\Redirect errors.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Payments - errors]"
                  connectionManagerRefId="Package.ConnectionManagers[Payments - errors]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate PaymentExtract table\Redirect errors.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Redirect errors.Inputs[Flat File Destination Input].Columns[Flat File Source Error Output Column]"
                      cachedCodepage="65001"
                      cachedDataType="text"
                      cachedName="Flat File Source Error Output Column"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[Flat File Source Error Output Column]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Redirect errors.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Populate PaymentExtract table\Redirect errors.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Populate PaymentExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[Flat File Source Error Output Column]"
                      codePage="65001"
                      dataType="text"
                      name="Flat File Source Error Output Column" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentExtract table\Redirect errors.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate PaymentExtract table.Paths[Flat File Source Error Output]"
              endId="Package\Populate PaymentExtract table\Redirect errors.Inputs[Flat File Destination Input]"
              name="Flat File Source Error Output"
              startId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Error Output]" />
            <path
              refId="Package\Populate PaymentExtract table.Paths[Flat File Source Output]"
              endId="Package\Populate PaymentExtract table\Insert raw payment data to database.Inputs[OLE DB Destination Input]"
              name="Flat File Source Output"
              startId="Package\Populate PaymentExtract table\Get payment data from dataset.Outputs[Flat File Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate PaymentFact table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{3E1C9E5E-F424-4129-BE00-BEE62503B96C}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate PaymentFact table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate PaymentFact table\Extract staged fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Extract staged fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate PaymentFact table\Extract staged fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeDate]"
                      name="FeeDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]"
                      name="RecordType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]"
                      name="FeeType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      dataType="numeric"
                      name="FeeAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      dataType="dbDate"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDate]"
                      name="FeeDate" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      name="FeeDescription" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      name="RecordType" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      name="FeeType" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Extract staged payment data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Extract staged payment data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[PaymentStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate PaymentFact table\Extract staged payment data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentAmount]"
                      lineageId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      precision="18"
                      scale="2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      name="TransactionType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentAmount]"
                      dataType="numeric"
                      name="PaymentAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[PaymentAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      precision="18"
                      scale="2" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      name="TransactionType" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Get business dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get business dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[BusinessDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate PaymentFact table\Get business dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessId]"
                      lineageId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]"
                      name="BusinessId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      length="300"
                      lineageId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]"
                      name="BusinessName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessId]"
                      dataType="i4"
                      name="BusinessId" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessType]"
                      dataType="wstr"
                      length="50"
                      name="BusinessType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].ExternalColumns[AddressZip]"
                      dataType="wstr"
                      length="50"
                      name="AddressZip" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessId]"
                      name="BusinessId" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName]"
                      name="BusinessName" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Error Output].Columns[BusinessName2]"
                      name="BusinessName2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Get fee dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get fee dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[FeeDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate PaymentFact table\Get fee dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[FeeId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].ExternalColumns[FeeId]"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[FeeId]"
                      name="FeeId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      name="IndustryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[RecordType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[RecordType]"
                      name="RecordType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[FeeType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[FeeType]"
                      name="FeeType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].ExternalColumns[FeeId]"
                      dataType="i4"
                      name="FeeId" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[FeeId]"
                      name="FeeId" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      name="IndustryId" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[RecordType]"
                      name="RecordType" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[FeeType]"
                      name="FeeType" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[FeeDescription]"
                      name="FeeDescription" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Get industry dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get industry dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[IndustryDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate PaymentFact table\Get industry dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      lineageId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]"
                      name="IndustryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]"
                      name="Industry"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[IndustryId]"
                      dataType="i4"
                      name="IndustryId" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[IndustryId]"
                      name="IndustryId" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[Industry]"
                      name="Industry" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Get transaction type dimension"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get transaction type dimension"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[TransactionTypeDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate PaymentFact table\Get transaction type dimension.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionTypeId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output].ExternalColumns[TransactionTypeId]"
                      lineageId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionTypeId]"
                      name="TransactionTypeId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      name="TransactionType"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output].ExternalColumns[TransactionTypeId]"
                      dataType="i4"
                      name="TransactionTypeId" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Error Output].Columns[TransactionTypeId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Error Output].Columns[TransactionTypeId]"
                      name="TransactionTypeId" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      name="TransactionType" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Insert data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[PaymentFact]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate PaymentFact table\Insert data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeId]"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[FeeId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessId]"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[BusinessId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].Columns[TransactionTypeId]"
                      cachedDataType="i4"
                      cachedName="TransactionTypeId"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[TransactionTypeId]"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[TransactionTypeId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].Columns[PaymentAmount]"
                      cachedDataType="numeric"
                      cachedName="PaymentAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[PaymentAmount]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeAmount]"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].Columns[PaymentDate]"
                      cachedDataType="dbDate"
                      cachedName="PaymentDate"
                      externalMetadataColumnId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentDate]"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[PaymentDate]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeId]"
                      dataType="i4"
                      name="FeeId" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[BusinessId]"
                      dataType="i4"
                      name="BusinessId" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[TransactionTypeId]"
                      dataType="i4"
                      name="TransactionTypeId" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeAmount]"
                      dataType="numeric"
                      name="FeeAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                      dataType="numeric"
                      name="PaymentAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentDate]"
                      dataType="dbDate"
                      name="PaymentDate" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Insert data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Insert data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Insert data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Insert data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Join on business names"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join on business names"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">2</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Left Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 1.Outputs[Sort Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Left Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 1.Outputs[Sort Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Left Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 1.Outputs[Sort Output].Columns[BusinessId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[BusinessName]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[BusinessName2]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[Industry]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Left Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[Industry]"
                      name="Industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Join on fee data"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join on fee data"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">4</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      cachedSortKeyPosition="4"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      cachedSortKeyPosition="3"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[IndustryId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[BusinessId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeSequenceId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Right Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[IndustryId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Right Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Right Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      cachedSortKeyPosition="3"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[FeeType]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Right Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      cachedSortKeyPosition="4"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Right Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[FeeId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeId]"
                      name="FeeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Right Input].Columns[FeeId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Join on fee sequence ID"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join on fee sequence ID"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Left Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Left Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[FeeId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Left Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Left Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Left Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[BusinessId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Right Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Outputs[Sort Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Right Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Outputs[Sort Output].Columns[TransactionType]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Right Input].Columns[PaymentAmount]"
                      cachedDataType="numeric"
                      cachedName="PaymentAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Outputs[Sort Output].Columns[PaymentAmount]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[TransactionType]"
                      name="TransactionType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Right Input].Columns[TransactionType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[PaymentAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Right Input].Columns[PaymentAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeId]"
                      name="FeeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Left Input].Columns[FeeId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Left Input].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Left Input].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Left Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Left Input].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Join on industry"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join on industry"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[BusinessId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeDescription]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[RecordType]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeType]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Right Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 2.Outputs[Sort Output].Columns[Industry]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Right Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 2.Outputs[Sort Output].Columns[IndustryId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[IndustryId]"
                      name="IndustryId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Right Input].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Join on transaction type"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Join on transaction type"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[TransactionType]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[FeeDate]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[FeeId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[BusinessId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[FeeAmount]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input].Columns[PaymentAmount]"
                      cachedDataType="numeric"
                      cachedName="PaymentAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[PaymentAmount]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Right Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 2.Outputs[Sort Output].Columns[TransactionType]" />
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Right Input].Columns[TransactionTypeId]"
                      cachedDataType="i4"
                      cachedName="TransactionTypeId"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 2.Outputs[Sort Output].Columns[TransactionTypeId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[PaymentDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[PaymentDate]"
                      name="PaymentDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[FeeId]"
                      name="FeeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input].Columns[FeeId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[TransactionTypeId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[TransactionTypeId]"
                      name="TransactionTypeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Right Input].Columns[TransactionTypeId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[PaymentAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input].Columns[PaymentAmount]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Sort by business names 1"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by business names 1"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Sort by business names 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 1.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 1.Inputs[Sort Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 1.Inputs[Sort Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Sort by business names 1.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 1.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 1.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 1.Outputs[Sort Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 1.Outputs[Sort Output].Columns[BusinessName]"
                      name="BusinessName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 1.Outputs[Sort Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 1.Outputs[Sort Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output].Columns[BusinessName2]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Sort by business names 2"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by business names 2"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Sort by business names 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Inputs[Sort Input].Columns[BusinessName]"
                      cachedDataType="wstr"
                      cachedLength="300"
                      cachedName="BusinessName"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Inputs[Sort Input].Columns[BusinessName2]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="BusinessName2"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Inputs[Sort Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Inputs[Sort Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Inputs[Sort Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Inputs[Sort Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Inputs[Sort Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[BusinessName]"
                      name="BusinessName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[BusinessName2]"
                      name="BusinessName2"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[BusinessName2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output].Columns[Industry]"
                      name="Industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Sort by fee data 1"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by fee data 1"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Sort by fee data 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Inputs[Sort Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Inputs[Sort Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Inputs[Sort Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Inputs[Sort Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[RecordType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Inputs[Sort Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Inputs[Sort Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[IndustryId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[RecordType]"
                      name="RecordType"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[FeeType]"
                      name="FeeType"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output].Columns[IndustryId]"
                      name="IndustryId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Sort by fee data 2"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by fee data 2"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Sort by fee data 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 2.Inputs[Sort Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[FeeId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 2.Inputs[Sort Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[IndustryId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 2.Inputs[Sort Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[RecordType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 2.Inputs[Sort Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[FeeType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 2.Inputs[Sort Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[FeeId]"
                      name="FeeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[FeeId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[IndustryId]"
                      name="IndustryId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[RecordType]"
                      name="RecordType"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[FeeType]"
                      name="FeeType"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output].Columns[FeeDescription]"
                      name="FeeDescription"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Sort by fee sequence ID 1"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by fee sequence ID 1"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Inputs[Sort Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Inputs[Sort Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Inputs[Sort Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      lineageId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output].Columns[FeeId]"
                      name="FeeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output].Columns[FeeId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Sort by fee sequence ID 2"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by fee sequence ID 2"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Inputs[Sort Input].Columns[PaymentAmount]"
                      cachedDataType="numeric"
                      cachedName="PaymentAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Inputs[Sort Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[TransactionType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Outputs[Sort Output].Columns[PaymentAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Outputs[Sort Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Outputs[Sort Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Outputs[Sort Output].Columns[TransactionType]"
                      name="TransactionType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[TransactionType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Sort by industry 1"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by industry 1"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Sort by industry 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Inputs[Sort Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Inputs[Sort Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Inputs[Sort Input].Columns[FeeDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="FeeDescription"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeDescription]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Inputs[Sort Input].Columns[RecordType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RecordType"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[RecordType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Inputs[Sort Input].Columns[FeeType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FeeType"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeDescription]"
                      name="FeeDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeDescription]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[RecordType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[RecordType]"
                      name="RecordType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[RecordType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[FeeType]"
                      name="FeeType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[FeeType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Sort by industry 2"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by industry 2"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Sort by industry 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 2.Inputs[Sort Input].Columns[IndustryId]"
                      cachedDataType="i4"
                      cachedName="IndustryId"
                      lineageId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 2.Inputs[Sort Input].Columns[Industry]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Industry"
                      lineageId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Sort by industry 2.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 2.Outputs[Sort Output].Columns[IndustryId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 2.Outputs[Sort Output].Columns[IndustryId]"
                      name="IndustryId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[IndustryId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by industry 2.Outputs[Sort Output].Columns[Industry]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by industry 2.Outputs[Sort Output].Columns[Industry]"
                      name="Industry"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output].Columns[Industry]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Sort by transaction type 1"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by transaction type 1"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Sort by transaction type 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Inputs[Sort Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[TransactionType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Inputs[Sort Input].Columns[PaymentAmount]"
                      cachedDataType="numeric"
                      cachedName="PaymentAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[PaymentAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Inputs[Sort Input].Columns[FeeId]"
                      cachedDataType="i4"
                      cachedName="FeeId"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Inputs[Sort Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Inputs[Sort Input].Columns[FeeAmount]"
                      cachedDataType="numeric"
                      cachedName="FeeAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Inputs[Sort Input].Columns[BusinessId]"
                      cachedDataType="i4"
                      cachedName="BusinessId"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[BusinessId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[TransactionType]"
                      name="TransactionType"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[TransactionType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[PaymentAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[PaymentAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[FeeId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[FeeId]"
                      name="FeeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[FeeDate]"
                      name="FeeDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[FeeAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[FeeAmount]"
                      name="FeeAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[BusinessId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[BusinessId]"
                      name="BusinessId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[BusinessId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentFact table\Sort by transaction type 2"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by transaction type 2"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentFact table\Sort by transaction type 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 2.Inputs[Sort Input].Columns[TransactionTypeId]"
                      cachedDataType="i4"
                      cachedName="TransactionTypeId"
                      lineageId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionTypeId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 2.Inputs[Sort Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentFact table\Sort by transaction type 2.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 2.Outputs[Sort Output].Columns[TransactionTypeId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 2.Outputs[Sort Output].Columns[TransactionTypeId]"
                      name="TransactionTypeId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionTypeId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentFact table\Sort by transaction type 2.Outputs[Sort Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentFact table\Sort by transaction type 2.Outputs[Sort Output].Columns[TransactionType]"
                      name="TransactionType"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output].Columns[TransactionType]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate PaymentFact table.Paths[Merge Join Output]"
              endId="Package\Populate PaymentFact table\Sort by industry 1.Inputs[Sort Input]"
              name="Merge Join Output"
              startId="Package\Populate PaymentFact table\Join on business names.Outputs[Merge Join Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Merge Join Output1]"
              endId="Package\Populate PaymentFact table\Sort by transaction type 1.Inputs[Sort Input]"
              name="Merge Join Output"
              startId="Package\Populate PaymentFact table\Join on fee sequence ID.Outputs[Merge Join Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Merge Join Output2]"
              endId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Inputs[Sort Input]"
              name="Merge Join Output"
              startId="Package\Populate PaymentFact table\Join on fee data.Outputs[Merge Join Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Merge Join Output3]"
              endId="Package\Populate PaymentFact table\Sort by fee data 1.Inputs[Sort Input]"
              name="Merge Join Output"
              startId="Package\Populate PaymentFact table\Join on industry.Outputs[Merge Join Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Merge Join Output4]"
              endId="Package\Populate PaymentFact table\Insert data to database.Inputs[OLE DB Destination Input]"
              name="Merge Join Output"
              startId="Package\Populate PaymentFact table\Join on transaction type.Outputs[Merge Join Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[OLE DB Source Output4]"
              endId="Package\Populate PaymentFact table\Sort by transaction type 2.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate PaymentFact table\Get transaction type dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[OLE DB Source Output3]"
              endId="Package\Populate PaymentFact table\Sort by business names 1.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate PaymentFact table\Get business dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[OLE DB Source Output5]"
              endId="Package\Populate PaymentFact table\Sort by fee data 2.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate PaymentFact table\Get fee dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[OLE DB Source Output1]"
              endId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate PaymentFact table\Extract staged payment data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[OLE DB Source Output]"
              endId="Package\Populate PaymentFact table\Sort by industry 2.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate PaymentFact table\Get industry dimension.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[OLE DB Source Output2]"
              endId="Package\Populate PaymentFact table\Sort by business names 2.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate PaymentFact table\Extract staged fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Sort Output8]"
              endId="Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Populate PaymentFact table\Sort by transaction type 1.Outputs[Sort Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Sort Output]"
              endId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Populate PaymentFact table\Sort by business names 2.Outputs[Sort Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Sort Output1]"
              endId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Populate PaymentFact table\Sort by industry 1.Outputs[Sort Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Sort Output2]"
              endId="Package\Populate PaymentFact table\Join on industry.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Populate PaymentFact table\Sort by industry 2.Outputs[Sort Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Sort Output3]"
              endId="Package\Populate PaymentFact table\Join on transaction type.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Populate PaymentFact table\Sort by transaction type 2.Outputs[Sort Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Sort Output4]"
              endId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Populate PaymentFact table\Sort by fee data 1.Outputs[Sort Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Sort Output5]"
              endId="Package\Populate PaymentFact table\Join on fee data.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Populate PaymentFact table\Sort by fee data 2.Outputs[Sort Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Sort Output6]"
              endId="Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Populate PaymentFact table\Sort by fee sequence ID 2.Outputs[Sort Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Sort Output7]"
              endId="Package\Populate PaymentFact table\Join on fee sequence ID.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Populate PaymentFact table\Sort by fee sequence ID 1.Outputs[Sort Output]" />
            <path
              refId="Package\Populate PaymentFact table.Paths[Sort Output9]"
              endId="Package\Populate PaymentFact table\Join on business names.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Populate PaymentFact table\Sort by business names 1.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate PaymentStage table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{ab7b6f67-7177-4e47-9542-69f5e49ea936}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate PaymentStage table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate PaymentStage table\Get extracted payment data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get extracted payment data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[PaymentExtract]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate PaymentStage table\Get extracted payment data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentAmount]"
                      lineageId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      precision="18"
                      scale="2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      length="50"
                      lineageId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      name="TransactionType"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[RecordId]"
                      dataType="wstr"
                      length="50"
                      name="RecordId" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentAmount]"
                      dataType="numeric"
                      name="PaymentAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentDate]"
                      dataType="wstr"
                      length="50"
                      name="PaymentDate" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Error Output].Columns[PaymentAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Error Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      precision="18"
                      scale="2" />
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      name="TransactionType" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentStage table\Get staged fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get staged fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate PaymentStage table\Get staged fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      dataType="numeric"
                      name="FeeAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      dataType="dbDate"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId" />
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentStage table\Insert payment data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert payment data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[PaymentStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate PaymentStage table\Insert payment data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate PaymentStage table\Insert payment data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentStage table\Insert payment data to database.Inputs[OLE DB Destination Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Populate PaymentStage table\Insert payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      lineageId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Outputs[Merge Join Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Populate PaymentStage table\Insert payment data to database.Inputs[OLE DB Destination Input].Columns[PaymentAmount]"
                      cachedDataType="numeric"
                      cachedName="PaymentAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      externalMetadataColumnId="Package\Populate PaymentStage table\Insert payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                      lineageId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Outputs[Merge Join Output].Columns[PaymentAmount]" />
                    <inputColumn
                      refId="Package\Populate PaymentStage table\Insert payment data to database.Inputs[OLE DB Destination Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      externalMetadataColumnId="Package\Populate PaymentStage table\Insert payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[TransactionType]"
                      lineageId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Outputs[Merge Join Output].Columns[TransactionType]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Insert payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Insert payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                      dataType="numeric"
                      name="PaymentAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate PaymentStage table\Insert payment data to database.Inputs[OLE DB Destination Input].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentStage table\Insert payment data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate PaymentStage table\Insert payment data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Insert payment data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentStage table\Insert payment data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Insert payment data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentStage table\Insert payment data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Remove payments for undefined fees and businesses"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Inputs[Merge Join Left Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate PaymentStage table\Sort payment data.Outputs[Sort Output].Columns[FeeSequenceId]" />
                    <inputColumn
                      refId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Inputs[Merge Join Left Input].Columns[PaymentAmount]"
                      cachedDataType="numeric"
                      cachedName="PaymentAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentStage table\Sort payment data.Outputs[Sort Output].Columns[PaymentAmount]" />
                    <inputColumn
                      refId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Inputs[Merge Join Left Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Populate PaymentStage table\Sort payment data.Outputs[Sort Output].Columns[TransactionType]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Inputs[Merge Join Right Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate PaymentStage table\Sort fee data.Outputs[Sort Output].Columns[FeeSequenceId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Outputs[Merge Join Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Inputs[Merge Join Left Input].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Outputs[Merge Join Output].Columns[PaymentAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Outputs[Merge Join Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Inputs[Merge Join Left Input].Columns[PaymentAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Outputs[Merge Join Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Outputs[Merge Join Output].Columns[TransactionType]"
                      name="TransactionType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Inputs[Merge Join Left Input].Columns[TransactionType]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentStage table\Sort fee data"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort fee data"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentStage table\Sort fee data.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentStage table\Sort fee data.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentStage table\Sort fee data.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Sort fee data.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentStage table\Sort fee data.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate PaymentStage table\Sort payment data"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort payment data"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate PaymentStage table\Sort payment data.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate PaymentStage table\Sort payment data.Inputs[Sort Input].Columns[PaymentAmount]"
                      cachedDataType="numeric"
                      cachedName="PaymentAmount"
                      cachedPrecision="18"
                      cachedScale="2"
                      lineageId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentStage table\Sort payment data.Inputs[Sort Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].Columns[TransactionType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate PaymentStage table\Sort payment data.Inputs[Sort Input].Columns[FeeSequenceId]"
                      cachedDataType="i4"
                      cachedName="FeeSequenceId"
                      lineageId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate PaymentStage table\Sort payment data.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Sort payment data.Outputs[Sort Output].Columns[PaymentAmount]"
                      dataType="numeric"
                      lineageId="Package\Populate PaymentStage table\Sort payment data.Outputs[Sort Output].Columns[PaymentAmount]"
                      name="PaymentAmount"
                      precision="18"
                      scale="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].Columns[PaymentAmount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Sort payment data.Outputs[Sort Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate PaymentStage table\Sort payment data.Outputs[Sort Output].Columns[TransactionType]"
                      name="TransactionType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].Columns[TransactionType]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate PaymentStage table\Sort payment data.Outputs[Sort Output].Columns[FeeSequenceId]"
                      dataType="i4"
                      lineageId="Package\Populate PaymentStage table\Sort payment data.Outputs[Sort Output].Columns[FeeSequenceId]"
                      name="FeeSequenceId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output].Columns[FeeSequenceId]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate PaymentStage table.Paths[Merge Join Output]"
              endId="Package\Populate PaymentStage table\Insert payment data to database.Inputs[OLE DB Destination Input]"
              name="Merge Join Output"
              startId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Outputs[Merge Join Output]" />
            <path
              refId="Package\Populate PaymentStage table.Paths[OLE DB Source Output]"
              endId="Package\Populate PaymentStage table\Sort payment data.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate PaymentStage table\Get extracted payment data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate PaymentStage table.Paths[OLE DB Source Output1]"
              endId="Package\Populate PaymentStage table\Sort fee data.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate PaymentStage table\Get staged fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate PaymentStage table.Paths[Sort Output]"
              endId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Populate PaymentStage table\Sort payment data.Outputs[Sort Output]" />
            <path
              refId="Package\Populate PaymentStage table.Paths[Sort Output1]"
              endId="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Populate PaymentStage table\Sort fee data.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate TimeDim table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{7A5D70BD-AAF3-491C-A822-7A96F9509F48}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate TimeDim table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate TimeDim table\Derive date parts"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derive date parts"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Populate TimeDim table\Derive date parts.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate TimeDim table\Derive date parts.Inputs[Derived Column Input].Columns[Date]"
                      cachedDataType="dbDate"
                      cachedName="Date"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Populate TimeDim table\Derive date parts.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Day]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Day]"
                      name="Day"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DAY](#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DAY(Date)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[DayName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[DayName]"
                      name="DayName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("WEEKDAY",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 1 ? "Monday" : [DATEPART]("WEEKDAY",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 2 ? "Tuesday" : [DATEPART]("WEEKDAY",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 3 ? "Wednesday" : [DATEPART]("WEEKDAY",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 4 ? "Thursday" : [DATEPART]("WEEKDAY",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 5 ? "Friday" : [DATEPART]("WEEKDAY",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 6 ? "Saturday" : [DATEPART]("WEEKDAY",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 7 ? "Sunday" : ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("WEEKDAY",Date) == 1 ? "Monday" : DATEPART("WEEKDAY",Date) == 2 ? "Tuesday" : DATEPART("WEEKDAY",Date) == 3 ? "Wednesday" : DATEPART("WEEKDAY",Date) == 4 ? "Thursday" : DATEPART("WEEKDAY",Date) == 5 ? "Friday" : DATEPART("WEEKDAY",Date) == 6 ? "Saturday" : DATEPART("WEEKDAY",Date) == 7 ? "Sunday" : ""</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Weekday]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Weekday]"
                      name="Weekday"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("WEEKDAY",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("WEEKDAY",Date)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Month]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Month]"
                      name="Month"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[MONTH](#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">MONTH(Date)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[MonthName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[MonthName]"
                      name="MonthName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("MONTH",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 1 ? "January" : [DATEPART]("MONTH",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 2 ? "February" : [DATEPART]("MONTH",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 3 ? "March" : [DATEPART]("MONTH",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 4 ? "April" : [DATEPART]("MONTH",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 5 ? "May" : [DATEPART]("MONTH",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 6 ? "June" : [DATEPART]("MONTH",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 7 ? "July" : [DATEPART]("MONTH",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 8 ? "August" : [DATEPART]("MONTH",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 9 ? "September" : [DATEPART]("MONTH",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 10 ? "October" : [DATEPART]("MONTH",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 11 ? "November" : [DATEPART]("MONTH",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]}) == 12 ? "December" : ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("MONTH",Date) == 1 ? "January" : DATEPART("MONTH",Date) == 2 ? "February" : DATEPART("MONTH",Date) == 3 ? "March" : DATEPART("MONTH",Date) == 4 ? "April" : DATEPART("MONTH",Date) == 5 ? "May" : DATEPART("MONTH",Date) == 6 ? "June" : DATEPART("MONTH",Date) == 7 ? "July" : DATEPART("MONTH",Date) == 8 ? "August" : DATEPART("MONTH",Date) == 9 ? "September" : DATEPART("MONTH",Date) == 10 ? "October" : DATEPART("MONTH",Date) == 11 ? "November" : DATEPART("MONTH",Date) == 12 ? "December" : ""</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Quarter]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Quarter]"
                      name="Quarter"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("QUARTER",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("QUARTER",Date)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Year]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Year]"
                      name="Year"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[YEAR](#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">YEAR(Date)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Week]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Week]"
                      name="Week"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("WEEK",#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("WEEK",Date)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Populate TimeDim table\Derive date parts.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate TimeDim table\Extract dates from staged fee data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Extract dates from staged fee data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[FeeStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate TimeDim table\Extract dates from staged fee data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      lineageId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDate]"
                      name="FeeDate"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[RecordType]"
                      dataType="wstr"
                      length="50"
                      name="RecordType" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeType]"
                      dataType="wstr"
                      length="50"
                      name="FeeType" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeAmount]"
                      dataType="numeric"
                      name="FeeAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDate]"
                      dataType="dbDate"
                      name="FeeDate" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].ExternalColumns[FeeDescription]"
                      dataType="wstr"
                      length="100"
                      name="FeeDescription" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Error Output].Columns[FeeDate]"
                      name="FeeDate" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate TimeDim table\Extract dates from staged license data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Extract dates from staged license data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[LicenseStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate TimeDim table\Extract dates from staged license data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      lineageId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      lineageId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[DCALicenseNumber]"
                      dataType="wstr"
                      length="50"
                      name="DCALicenseNumber" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseType]"
                      dataType="wstr"
                      length="50"
                      name="LicenseType" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseCreationDate]"
                      dataType="dbDate"
                      name="LicenseCreationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[LicenseExpirationDate]"
                      dataType="dbDate"
                      name="LicenseExpirationDate" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Industry]"
                      dataType="wstr"
                      length="50"
                      name="Industry" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName]"
                      dataType="wstr"
                      length="300"
                      name="BusinessName" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BusinessName2]"
                      dataType="wstr"
                      length="100"
                      name="BusinessName2" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBuilding]"
                      dataType="wstr"
                      length="50"
                      name="AddressBuilding" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="AddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[SecondaryAddressStreetName]"
                      dataType="wstr"
                      length="75"
                      name="SecondaryAddressStreetName" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressCity]"
                      dataType="wstr"
                      length="50"
                      name="AddressCity" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressState]"
                      dataType="wstr"
                      length="50"
                      name="AddressState" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressZIP]"
                      dataType="wstr"
                      length="50"
                      name="AddressZIP" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[AddressBorough]"
                      dataType="wstr"
                      length="50"
                      name="AddressBorough" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[BoroughCode]"
                      dataType="wstr"
                      length="50"
                      name="BoroughCode" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[CommunityBoard]"
                      dataType="wstr"
                      length="50"
                      name="CommunityBoard" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[CouncilDistrict]"
                      dataType="wstr"
                      length="50"
                      name="CouncilDistrict" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[CensusTract]"
                      dataType="wstr"
                      length="50"
                      name="CensusTract" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="50"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="50"
                      name="Latitude" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseCreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate" />
                    <outputColumn
                      refId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Error Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate TimeDim table\Filter null date"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Filter null date"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Populate TimeDim table\Filter null date.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate TimeDim table\Filter null date.Inputs[Conditional Split Input].Columns[Date]"
                      cachedDataType="dbDate"
                      cachedName="Date"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate TimeDim table\Filter null date.Outputs[Date is not null]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Date is not null"
                  synchronousInputId="Package\Populate TimeDim table\Filter null date.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(Date)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate TimeDim table\Filter null date.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Populate TimeDim table\Filter null date.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate TimeDim table\Filter null date.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Populate TimeDim table\Filter null date.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Filter null date.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate TimeDim table\Filter null date.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate TimeDim table\Filter null date.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate TimeDim table\Filter null date.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate TimeDim table\Insert time data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert time data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[TimeDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate TimeDim table\Insert time data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].Columns[Date]"
                      cachedDataType="dbDate"
                      cachedName="Date"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                      lineageId="Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]" />
                    <inputColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].Columns[Day]"
                      cachedDataType="i4"
                      cachedName="Day"
                      externalMetadataColumnId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Day]"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Day]" />
                    <inputColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].Columns[DayName]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="DayName"
                      externalMetadataColumnId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[DayName]"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[DayName]" />
                    <inputColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].Columns[Weekday]"
                      cachedDataType="i4"
                      cachedName="Weekday"
                      externalMetadataColumnId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Weekday]"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Weekday]" />
                    <inputColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].Columns[Month]"
                      cachedDataType="i4"
                      cachedName="Month"
                      externalMetadataColumnId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Month]" />
                    <inputColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].Columns[MonthName]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="MonthName"
                      externalMetadataColumnId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[MonthName]"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[MonthName]" />
                    <inputColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].Columns[Quarter]"
                      cachedDataType="i4"
                      cachedName="Quarter"
                      externalMetadataColumnId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Quarter]"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Quarter]" />
                    <inputColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].Columns[Year]"
                      cachedDataType="i4"
                      cachedName="Year"
                      externalMetadataColumnId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Year]"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Year]" />
                    <inputColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].Columns[Week]"
                      cachedDataType="i4"
                      cachedName="Week"
                      externalMetadataColumnId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Week]"
                      lineageId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output].Columns[Week]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                      dataType="dbDate"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Day]"
                      dataType="i4"
                      name="Day" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[DayName]"
                      dataType="wstr"
                      length="9"
                      name="DayName" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Weekday]"
                      dataType="i4"
                      name="Weekday" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Week]"
                      dataType="i4"
                      name="Week" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                      dataType="i4"
                      name="Month" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[MonthName]"
                      dataType="wstr"
                      length="9"
                      name="MonthName" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Quarter]"
                      dataType="i4"
                      name="Quarter" />
                    <externalMetadataColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input].ExternalColumns[Year]"
                      dataType="i4"
                      name="Year" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate TimeDim table\Insert time data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate TimeDim table\Insert time data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate TimeDim table\Insert time data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate TimeDim table\Insert time data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate TimeDim table\Merge dates"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Merge dates"
              version="1">
              <inputs>
                <input
                  refId="Package\Populate TimeDim table\Merge dates.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate TimeDim table\Merge dates.Inputs[Union All Input 1].Columns[LicenseExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="LicenseExpirationDate"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate TimeDim table\Sort LicenseExpirationDates.Outputs[Sort Output].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate TimeDim table\Merge dates.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate TimeDim table\Merge dates.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate TimeDim table\Merge dates.Inputs[Union All Input 2].Columns[LicenseCreationDate]"
                      cachedDataType="dbDate"
                      cachedName="LicenseCreationDate"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate TimeDim table\Sort LicenseCreationDates.Outputs[Sort Output].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate TimeDim table\Merge dates.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate TimeDim table\Merge dates.Inputs[Union All Input 3]"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate TimeDim table\Merge dates.Inputs[Union All Input 3].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Populate TimeDim table\Sort FeeDates.Outputs[Sort Output].Columns[FeeDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate TimeDim table\Merge dates.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate TimeDim table\Merge dates.Inputs[Union All Input 4]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 4">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate TimeDim table\Merge dates.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Merge dates.Outputs[Union All Output 1].Columns[Date]"
                      dataType="dbDate"
                      lineageId="Package\Populate TimeDim table\Merge dates.Outputs[Union All Output 1].Columns[Date]"
                      name="Date" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate TimeDim table\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Populate TimeDim table\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate TimeDim table\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Populate TimeDim table\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate TimeDim table\Multicast.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Populate TimeDim table\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate TimeDim table\Multicast.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Populate TimeDim table\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate TimeDim table\Sort dates and remove duplicates"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort dates and remove duplicates"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate TimeDim table\Sort dates and remove duplicates.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate TimeDim table\Sort dates and remove duplicates.Inputs[Sort Input].Columns[Date]"
                      cachedDataType="dbDate"
                      cachedName="Date"
                      lineageId="Package\Populate TimeDim table\Merge dates.Outputs[Union All Output 1].Columns[Date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]"
                      dataType="dbDate"
                      lineageId="Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output].Columns[Date]"
                      name="Date"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate TimeDim table\Merge dates.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate TimeDim table\Sort FeeDates"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort FeeDates"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate TimeDim table\Sort FeeDates.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate TimeDim table\Sort FeeDates.Inputs[Sort Input].Columns[FeeDate]"
                      cachedDataType="dbDate"
                      cachedName="FeeDate"
                      lineageId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate TimeDim table\Sort FeeDates.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Sort FeeDates.Outputs[Sort Output].Columns[FeeDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate TimeDim table\Sort FeeDates.Outputs[Sort Output].Columns[FeeDate]"
                      name="FeeDate"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output].Columns[FeeDate]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate TimeDim table\Sort LicenseCreationDates"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort LicenseCreationDates"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate TimeDim table\Sort LicenseCreationDates.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate TimeDim table\Sort LicenseCreationDates.Inputs[Sort Input].Columns[LicenseCreationDate]"
                      cachedDataType="dbDate"
                      cachedName="LicenseCreationDate"
                      lineageId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate TimeDim table\Sort LicenseCreationDates.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Sort LicenseCreationDates.Outputs[Sort Output].Columns[LicenseCreationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate TimeDim table\Sort LicenseCreationDates.Outputs[Sort Output].Columns[LicenseCreationDate]"
                      name="LicenseCreationDate"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].Columns[LicenseCreationDate]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate TimeDim table\Sort LicenseExpirationDates"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort LicenseExpirationDates"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate TimeDim table\Sort LicenseExpirationDates.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate TimeDim table\Sort LicenseExpirationDates.Inputs[Sort Input].Columns[LicenseExpirationDate]"
                      cachedDataType="dbDate"
                      cachedName="LicenseExpirationDate"
                      lineageId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate TimeDim table\Sort LicenseExpirationDates.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TimeDim table\Sort LicenseExpirationDates.Outputs[Sort Output].Columns[LicenseExpirationDate]"
                      dataType="dbDate"
                      lineageId="Package\Populate TimeDim table\Sort LicenseExpirationDates.Outputs[Sort Output].Columns[LicenseExpirationDate]"
                      name="LicenseExpirationDate"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output].Columns[LicenseExpirationDate]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate TimeDim table.Paths[Date is not null]"
              endId="Package\Populate TimeDim table\Derive date parts.Inputs[Derived Column Input]"
              name="Date is not null"
              startId="Package\Populate TimeDim table\Filter null date.Outputs[Date is not null]" />
            <path
              refId="Package\Populate TimeDim table.Paths[Derived Column Output]"
              endId="Package\Populate TimeDim table\Insert time data to database.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Populate TimeDim table\Derive date parts.Outputs[Derived Column Output]" />
            <path
              refId="Package\Populate TimeDim table.Paths[Multicast Output 1]"
              endId="Package\Populate TimeDim table\Sort LicenseCreationDates.Inputs[Sort Input]"
              name="Multicast Output 1"
              startId="Package\Populate TimeDim table\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Populate TimeDim table.Paths[Multicast Output 2]"
              endId="Package\Populate TimeDim table\Sort LicenseExpirationDates.Inputs[Sort Input]"
              name="Multicast Output 2"
              startId="Package\Populate TimeDim table\Multicast.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Populate TimeDim table.Paths[OLE DB Source Output]"
              endId="Package\Populate TimeDim table\Multicast.Inputs[Multicast Input 1]"
              name="OLE DB Source Output"
              startId="Package\Populate TimeDim table\Extract dates from staged license data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate TimeDim table.Paths[OLE DB Source Output1]"
              endId="Package\Populate TimeDim table\Sort FeeDates.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate TimeDim table\Extract dates from staged fee data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate TimeDim table.Paths[Sort Output]"
              endId="Package\Populate TimeDim table\Merge dates.Inputs[Union All Input 1]"
              name="Sort Output"
              startId="Package\Populate TimeDim table\Sort LicenseExpirationDates.Outputs[Sort Output]" />
            <path
              refId="Package\Populate TimeDim table.Paths[Sort Output1]"
              endId="Package\Populate TimeDim table\Merge dates.Inputs[Union All Input 2]"
              name="Sort Output"
              startId="Package\Populate TimeDim table\Sort LicenseCreationDates.Outputs[Sort Output]" />
            <path
              refId="Package\Populate TimeDim table.Paths[Sort Output2]"
              endId="Package\Populate TimeDim table\Merge dates.Inputs[Union All Input 3]"
              name="Sort Output"
              startId="Package\Populate TimeDim table\Sort FeeDates.Outputs[Sort Output]" />
            <path
              refId="Package\Populate TimeDim table.Paths[Sort Output3]"
              endId="Package\Populate TimeDim table\Filter null date.Inputs[Conditional Split Input]"
              name="Sort Output"
              startId="Package\Populate TimeDim table\Sort dates and remove duplicates.Outputs[Sort Output]" />
            <path
              refId="Package\Populate TimeDim table.Paths[Union All Output 1]"
              endId="Package\Populate TimeDim table\Sort dates and remove duplicates.Inputs[Sort Input]"
              name="Union All Output 1"
              startId="Package\Populate TimeDim table\Merge dates.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate TransactionTypeDim table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{D27990CF-AD8C-44D4-9643-C637627D427E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate TransactionTypeDim table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate TransactionTypeDim table\Extract staged payment data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Extract staged payment data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DWSTAGE].[PaymentStage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate TransactionTypeDim table\Extract staged payment data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      length="50"
                      lineageId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[TransactionType]"
                      name="TransactionType"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Output].ExternalColumns[PaymentAmount]"
                      dataType="numeric"
                      name="PaymentAmount"
                      precision="18"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Output].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                    <externalMetadataColumn
                      refId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Output].ExternalColumns[FeeSequenceId]"
                      dataType="i4"
                      name="FeeSequenceId" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[TransactionType]"
                      name="TransactionType" />
                    <outputColumn
                      refId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate TransactionTypeDim table\Insert data to database"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert data to database"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[TransactionTypeDim]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate TransactionTypeDim table\Insert data to database.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.Miniproject]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.Miniproject]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate TransactionTypeDim table\Insert data to database.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate TransactionTypeDim table\Insert data to database.Inputs[OLE DB Destination Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Populate TransactionTypeDim table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[TransactionType]"
                      lineageId="Package\Populate TransactionTypeDim table\Sort data and remove duplicates.Outputs[Sort Output].Columns[TransactionType]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate TransactionTypeDim table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[TransactionTypeId]"
                      dataType="i4"
                      name="TransactionTypeId" />
                    <externalMetadataColumn
                      refId="Package\Populate TransactionTypeDim table\Insert data to database.Inputs[OLE DB Destination Input].ExternalColumns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      name="TransactionType" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate TransactionTypeDim table\Insert data to database.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate TransactionTypeDim table\Insert data to database.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TransactionTypeDim table\Insert data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate TransactionTypeDim table\Insert data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate TransactionTypeDim table\Insert data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate TransactionTypeDim table\Insert data to database.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate TransactionTypeDim table\Sort data and remove duplicates"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort data and remove duplicates"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate TransactionTypeDim table\Sort data and remove duplicates.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate TransactionTypeDim table\Sort data and remove duplicates.Inputs[Sort Input].Columns[TransactionType]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TransactionType"
                      lineageId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[TransactionType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate TransactionTypeDim table\Sort data and remove duplicates.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate TransactionTypeDim table\Sort data and remove duplicates.Outputs[Sort Output].Columns[TransactionType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Populate TransactionTypeDim table\Sort data and remove duplicates.Outputs[Sort Output].Columns[TransactionType]"
                      name="TransactionType"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Output].Columns[TransactionType]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate TransactionTypeDim table.Paths[OLE DB Source Output]"
              endId="Package\Populate TransactionTypeDim table\Sort data and remove duplicates.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Populate TransactionTypeDim table\Extract staged payment data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populate TransactionTypeDim table.Paths[Sort Output]"
              endId="Package\Populate TransactionTypeDim table\Insert data to database.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\Populate TransactionTypeDim table\Sort data and remove duplicates.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set language and time options"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5B11D987-8684-4FEE-96B4-699651B4B132}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set language and time options"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="SET DATEFIRST 1,&#xA;    DATEFORMAT mdy,&#xA;    LANGUAGE US_ENGLISH;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate FeeExtract table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{CEE0C8E3-2767-4C39-9B9E-87F8CCB76AE1}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate FeeExtract table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [DWSTAGE].[FeeExtract];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate FeeStage table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{02cbd181-d203-4656-ab49-1c7e10d40b84}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate FeeStage table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [DWSTAGE].[FeeStage];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate LicenseExtract table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5ac3f871-fafd-4759-96a9-7f37ab962e00}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate LicenseExtract table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [DWSTAGE].[LicenseExtract];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate LicenseStage table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{96ac4b50-0115-488c-98dd-3769ec17cf54}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate LicenseStage table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [DWSTAGE].[LicenseStage];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate PaymentExtract table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{bc47556b-fbad-4805-bfaf-4415abef307b}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate PaymentExtract table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="5">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [DWSTAGE].[PaymentExtract];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate PaymentStage table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{47179dd8-ac6b-41d0-869e-4cc7a9566f1c}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate PaymentStage table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="6">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{91F8B0E2-5835-4CC5-93FF-AFBE6A98F706}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [DWSTAGE].[PaymentStage];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{7B6D20F5-E8EC-4A6D-A133-4C20F87C7A46}"
      DTS:From="Package\Ensure DWSTAGE schema exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Ensure FeeExtract table exists" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{4884A47A-FBAE-4A1F-9F83-820FE57B89F9}"
      DTS:From="Package\Ensure FeeExtract table exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Truncate FeeExtract table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1 1]"
      DTS:CreationName=""
      DTS:DTSID="{c0f5226a-8109-4a85-9f3c-49ed21f2e77a}"
      DTS:From="Package\Ensure PaymentExtract table exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1 1"
      DTS:To="Package\Truncate PaymentExtract table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1 1 1]"
      DTS:CreationName=""
      DTS:DTSID="{ac933c63-88f2-4126-b1af-75eaca18606d}"
      DTS:From="Package\Ensure LicenseExtract table exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1 1 1"
      DTS:To="Package\Truncate LicenseExtract table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1 2]"
      DTS:CreationName=""
      DTS:DTSID="{d6b7a633-d59c-43f2-8cdf-c80aa9cbc38b}"
      DTS:From="Package\Ensure FeeStage table exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1 2"
      DTS:To="Package\Truncate FeeStage table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1 2 1]"
      DTS:CreationName=""
      DTS:DTSID="{34dc4667-c329-4077-8669-797e3dec406c}"
      DTS:From="Package\Ensure PaymentStage table exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1 2 1"
      DTS:To="Package\Truncate PaymentStage table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1 2 1 1]"
      DTS:CreationName=""
      DTS:DTSID="{12e21682-51a4-48db-a861-f40998e8fa31}"
      DTS:From="Package\Ensure LicenseStage table exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1 2 1 1"
      DTS:To="Package\Truncate LicenseStage table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{787B0F37-6B87-4E01-9924-E5947DF39C7C}"
      DTS:From="Package\Populate LicenseExtract table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\Normalize data in LicenseExtract table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{84CA59DD-163C-4BAF-89DE-C311C31E3732}"
      DTS:From="Package\Normalize data in LicenseExtract table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\Ensure FeeStage table exists" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 12]"
      DTS:CreationName=""
      DTS:DTSID="{40546A1E-475C-4703-87B9-F25E2CA8786C}"
      DTS:From="Package\Normalize data in LicenseExtract table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 12"
      DTS:To="Package\Ensure LicenseStage table exists" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 13]"
      DTS:CreationName=""
      DTS:DTSID="{D03173DC-FC57-47EA-AC24-1FE57C96B768}"
      DTS:From="Package\Populate FeeStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 13"
      DTS:To="Package\Ensure PaymentStage table exists" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 14]"
      DTS:CreationName=""
      DTS:DTSID="{F87098D0-2343-473C-A68B-FBB5DA256433}"
      DTS:From="Package\Normalize data in FeeExtract table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 14"
      DTS:To="Package\Ensure FeeStage table exists" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 15]"
      DTS:CreationName=""
      DTS:DTSID="{DD1AD3C5-7ABE-4FDF-B387-993B539E3D90}"
      DTS:From="Package\Normalize data in PaymentExtract table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 15"
      DTS:To="Package\Ensure PaymentStage table exists" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 16]"
      DTS:CreationName=""
      DTS:DTSID="{3CDB2FDF-F2DC-4A0A-A1DF-A717789626BC}"
      DTS:From="Package\Delete data from dimensions and fact tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 16"
      DTS:To="Package\Populate BusinessDim table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 17]"
      DTS:CreationName=""
      DTS:DTSID="{DA135A93-9547-4514-9799-282222A71838}"
      DTS:From="Package\Delete data from dimensions and fact tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 17"
      DTS:To="Package\Populate FeeDim table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 18]"
      DTS:CreationName=""
      DTS:DTSID="{6D4A3F92-3B8C-486B-A40E-F2554D04E155}"
      DTS:From="Package\Delete data from dimensions and fact tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 18"
      DTS:To="Package\Populate TimeDim table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 19]"
      DTS:CreationName=""
      DTS:DTSID="{89F64B19-0090-482A-B7C6-E206E58A873C}"
      DTS:From="Package\Delete data from dimensions and fact tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 19"
      DTS:To="Package\Populate TransactionTypeDim table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{03C4900A-C75C-416F-A10D-19F8CB92C378}"
      DTS:From="Package\Truncate FeeExtract table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Populate FeeExtract table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2 1]"
      DTS:CreationName=""
      DTS:DTSID="{0f1374bd-c7f0-44c4-b11d-5fc38b58dab8}"
      DTS:From="Package\Truncate PaymentExtract table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2 1"
      DTS:To="Package\Populate PaymentExtract table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2 1 1]"
      DTS:CreationName=""
      DTS:DTSID="{69e6c4c1-7d90-4638-a25f-ac5b52f08dba}"
      DTS:From="Package\Truncate LicenseExtract table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2 1 1"
      DTS:To="Package\Populate LicenseExtract table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2 2]"
      DTS:CreationName=""
      DTS:DTSID="{ccb5e27c-2b58-4c88-bc06-f9d6c52c990e}"
      DTS:From="Package\Truncate FeeStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2 2"
      DTS:To="Package\Populate FeeStage table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2 2 1]"
      DTS:CreationName=""
      DTS:DTSID="{a072d0cc-3050-49b7-b267-7270ea860e45}"
      DTS:From="Package\Truncate PaymentStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2 2 1"
      DTS:To="Package\Populate PaymentStage table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2 2 1 1]"
      DTS:CreationName=""
      DTS:DTSID="{0700dcdf-cc6d-44b1-9181-e776e8df4ea2}"
      DTS:From="Package\Truncate LicenseStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2 2 1 1"
      DTS:To="Package\Populate LicenseStage table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 20]"
      DTS:CreationName=""
      DTS:DTSID="{DADC6EAF-5DEF-4DE6-B0BF-6AFD2098AB52}"
      DTS:From="Package\Populate LicenseStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 20"
      DTS:To="Package\Populate IndustryDim table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 21]"
      DTS:CreationName=""
      DTS:DTSID="{C500BF47-BFC8-4F3D-B9E8-728A3690EC94}"
      DTS:From="Package\Ensure DW schema exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 21"
      DTS:To="Package\Ensure dimensions and fact tables exist" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 22]"
      DTS:CreationName=""
      DTS:DTSID="{1B93EA5E-3AAF-4123-9070-5BC7F277DD3E}"
      DTS:From="Package\Ensure dimensions and fact tables exist"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 22"
      DTS:To="Package\Delete data from dimensions and fact tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 23]"
      DTS:CreationName=""
      DTS:DTSID="{4CCB733A-0E4F-4077-9EEA-0DC29934B6C9}"
      DTS:From="Package\Populate LicenseStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 23"
      DTS:To="Package\Populate BusinessDim table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 24]"
      DTS:CreationName=""
      DTS:DTSID="{46742558-9344-4C4F-BE7B-61EB81982805}"
      DTS:From="Package\Populate FeeStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 24"
      DTS:To="Package\Populate FeeDim table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 25]"
      DTS:CreationName=""
      DTS:DTSID="{DA83729F-5D3D-42D0-8849-9F2856F8A5DB}"
      DTS:From="Package\Populate LicenseStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 25"
      DTS:To="Package\Populate TimeDim table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 26]"
      DTS:CreationName=""
      DTS:DTSID="{E708A15E-2ED7-4750-9770-1E443F84AC3F}"
      DTS:From="Package\Populate FeeStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 26"
      DTS:To="Package\Populate TimeDim table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 27]"
      DTS:CreationName=""
      DTS:DTSID="{21EB6B90-67B4-4BA6-99F2-B3F2E9701999}"
      DTS:From="Package\Populate PaymentStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 27"
      DTS:To="Package\Populate TransactionTypeDim table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 28]"
      DTS:CreationName=""
      DTS:DTSID="{90F8B041-A9F5-42DB-B498-4A92D8910F6D}"
      DTS:From="Package\Populate FeeStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 28"
      DTS:To="Package\Populate IndustryDim table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 29]"
      DTS:CreationName=""
      DTS:DTSID="{1F0DEB5A-67AC-4ED0-8B11-9F439E0E53DE}"
      DTS:From="Package\Delete data from dimensions and fact tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 29"
      DTS:To="Package\Populate IndustryDim table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{94DEB5CD-973E-49F6-A5E9-437C2DD50C25}"
      DTS:From="Package\Ensure DWSTAGE schema exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Ensure PaymentExtract table exists" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 30]"
      DTS:CreationName=""
      DTS:DTSID="{FD902D07-9C77-4298-A7C1-C346F25B13EC}"
      DTS:From="Package\Populate IndustryDim table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 30"
      DTS:To="Package\Populate FeeDim table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 31]"
      DTS:CreationName=""
      DTS:DTSID="{6C23100D-C3E6-4E62-99D5-7108F4932392}"
      DTS:From="Package\Set language and time options"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 31"
      DTS:To="Package\Ensure DWSTAGE schema exists" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 32]"
      DTS:CreationName=""
      DTS:DTSID="{3769208C-464C-41BD-B2C8-B67A776403DE}"
      DTS:From="Package\Populate LicenseStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 32"
      DTS:To="Package\Populate LicenseFact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 33]"
      DTS:CreationName=""
      DTS:DTSID="{F7A51B14-EFA1-45BD-95DD-86D7155454B8}"
      DTS:From="Package\Populate BusinessDim table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 33"
      DTS:To="Package\Populate LicenseFact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 34]"
      DTS:CreationName=""
      DTS:DTSID="{018BDB1E-92C0-48FC-A7E4-3ADA70620A0F}"
      DTS:From="Package\Populate IndustryDim table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 34"
      DTS:To="Package\Populate LicenseFact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 35]"
      DTS:CreationName=""
      DTS:DTSID="{718F022D-8FBE-417A-816C-A445E73A77A6}"
      DTS:From="Package\Populate BusinessDim table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 35"
      DTS:To="Package\Populate PaymentFact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 36]"
      DTS:CreationName=""
      DTS:DTSID="{26556AD9-A63B-439C-A331-5E65C897ACFC}"
      DTS:From="Package\Populate FeeStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 36"
      DTS:To="Package\Populate PaymentFact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 37]"
      DTS:CreationName=""
      DTS:DTSID="{909B8C4B-8E87-4B1F-AE9C-8D49A13BE150}"
      DTS:From="Package\Populate IndustryDim table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 37"
      DTS:To="Package\Populate PaymentFact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 38]"
      DTS:CreationName=""
      DTS:DTSID="{83C15F5F-9562-417A-8496-4C7125A7334A}"
      DTS:From="Package\Populate FeeDim table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 38"
      DTS:To="Package\Populate PaymentFact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 39]"
      DTS:CreationName=""
      DTS:DTSID="{2EE20A36-2B36-4540-BEAF-6EBB15833A6E}"
      DTS:From="Package\Populate PaymentStage table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 39"
      DTS:To="Package\Populate PaymentFact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{7D72FF0E-6588-4988-9153-7DBD48E33728}"
      DTS:From="Package\Ensure DWSTAGE schema exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Ensure LicenseExtract table exists" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 40]"
      DTS:CreationName=""
      DTS:DTSID="{40B461F2-EA2B-49E4-BAE9-AF6FB97F1809}"
      DTS:From="Package\Populate TransactionTypeDim table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 40"
      DTS:To="Package\Populate PaymentFact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 41]"
      DTS:CreationName=""
      DTS:DTSID="{51E2FD86-A026-42FE-A895-95324DF0068F}"
      DTS:From="Package\Delete data from dimensions and fact tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 41"
      DTS:To="Package\Populate LicenseFact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 42]"
      DTS:CreationName=""
      DTS:DTSID="{2E8AFAB1-AD22-4DB7-B574-730839202075}"
      DTS:From="Package\Delete data from dimensions and fact tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 42"
      DTS:To="Package\Populate PaymentFact table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 43]"
      DTS:CreationName=""
      DTS:DTSID="{323C86F1-3354-4A0C-BE74-AD9960E77013}"
      DTS:From="Package\Ensure needed functions exist"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 43"
      DTS:To="Package\Ensure DWSTAGE schema exists" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{07044980-667C-4B14-B0BD-C7FF08E8C3C7}"
      DTS:From="Package\Ensure DWSTAGE schema exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Ensure FeeStage table exists" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{BDCC0017-113A-4C77-884B-73113EAE9A9B}"
      DTS:From="Package\Populate FeeExtract table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Normalize data in FeeExtract table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{1ECC9A67-1428-4301-A196-1439DA7B1570}"
      DTS:From="Package\Populate PaymentExtract table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Normalize data in PaymentExtract table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{A586F6E5-EDA6-4BDD-BF68-783B4A9DDFA0}"
      DTS:From="Package\Ensure DWSTAGE schema exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Ensure PaymentStage table exists" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{C8D2E3EC-8C70-424D-A41E-BBA91433E937}"
      DTS:From="Package\Ensure DWSTAGE schema exists"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Ensure LicenseStage table exists" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
        <NodeLayout
          Size="287,42"
          Id="Package\Delete data from dimensions and fact tables"
          TopLeft="48,1055" />
        <NodeLayout
          Size="265,42"
          Id="Package\Ensure dimensions and fact tables exist"
          TopLeft="62,965" />
        <NodeLayout
          Size="200,42"
          Id="Package\Ensure DW schema exists"
          TopLeft="95,876.5" />
        <NodeLayout
          Size="232,42"
          Id="Package\Ensure DWSTAGE schema exists"
          TopLeft="577,165" />
        <NodeLayout
          Size="209,42"
          Id="Package\Populate BusinessDim table"
          TopLeft="106.5,1305.5" />
        <NodeLayout
          Size="185,42"
          Id="Package\Populate FeeDim table"
          TopLeft="341,1397" />
        <NodeLayout
          Size="207,42"
          Id="Package\Populate IndustryDim table"
          TopLeft="485,1294" />
        <NodeLayout
          Size="204,42"
          Id="Package\Populate LicenseFact table"
          TopLeft="428,1531" />
        <NodeLayout
          Size="210,42"
          Id="Package\Populate PaymentFact table"
          TopLeft="701,1508" />
        <NodeLayout
          Size="191,42"
          Id="Package\Populate TimeDim table"
          TopLeft="713,1282" />
        <NodeLayout
          Size="246,42"
          Id="Package\Populate TransactionTypeDim table"
          TopLeft="948,1283" />
        <NodeLayout
          Size="223,42"
          Id="Package\Set language and time options"
          TopLeft="412,62" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="675.5,207">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,136"
              Start="0,0"
              End="0,128.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,128.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="385.666666666667,628">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="363.833333333333,136"
              Start="0,0"
              End="363.833333333333,128.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,73.0032618025751" />
                  <mssgle:CubicBezierSegment
                    Point1="0,73.0032618025751"
                    Point2="0,77.0032618025751"
                    Point3="4,77.0032618025751" />
                  <mssgle:LineSegment
                    End="359.833333333333,77.0032618025751" />
                  <mssgle:CubicBezierSegment
                    Point1="359.833333333333,77.0032618025751"
                    Point2="363.833333333333,77.0032618025751"
                    Point3="363.833333333333,81.0032618025751" />
                  <mssgle:LineSegment
                    End="363.833333333333,128.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 12]"
          TopLeft="302.333333333333,628">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="152.333333333333,134"
              Start="0,0"
              End="152.333333333333,126.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.942731277533" />
                  <mssgle:CubicBezierSegment
                    Point1="0,62.942731277533"
                    Point2="0,66.942731277533"
                    Point3="4,66.942731277533" />
                  <mssgle:LineSegment
                    End="148.333333333333,66.942731277533" />
                  <mssgle:CubicBezierSegment
                    Point1="148.333333333333,66.942731277533"
                    Point2="152.333333333333,66.942731277533"
                    Point3="152.333333333333,70.942731277533" />
                  <mssgle:LineSegment
                    End="152.333333333333,126.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 13]"
          TopLeft="893,954">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="101,-53"
              Start="0,0"
              End="93.5,-53">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="46.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="46.5,0"
                    Point2="50.5,0"
                    Point3="50.5,-4" />
                  <mssgle:LineSegment
                    End="50.5,-49" />
                  <mssgle:CubicBezierSegment
                    Point1="50.5,-49"
                    Point2="50.5,-53"
                    Point3="54.5,-53" />
                  <mssgle:LineSegment
                    End="93.5,-53" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 14]"
          TopLeft="670.5,627">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="130.5,137"
              Start="0,0"
              End="130.5,129.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,64.5"
                    Point2="0,68.5"
                    Point3="4,68.5" />
                  <mssgle:LineSegment
                    End="126.5,68.5" />
                  <mssgle:CubicBezierSegment
                    Point1="126.5,68.5"
                    Point2="130.5,68.5"
                    Point3="130.5,72.5" />
                  <mssgle:LineSegment
                    End="130.5,129.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 15]"
          TopLeft="992.5,630">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="158.833333333333,250"
              Start="0,0"
              End="158.833333333333,242.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,144.998330550918" />
                  <mssgle:CubicBezierSegment
                    Point1="0,144.998330550918"
                    Point2="0,148.998330550918"
                    Point3="4,148.998330550918" />
                  <mssgle:LineSegment
                    End="154.833333333333,148.998330550918" />
                  <mssgle:CubicBezierSegment
                    Point1="154.833333333333,148.998330550918"
                    Point2="158.833333333333,148.998330550918"
                    Point3="158.833333333333,152.998330550918" />
                  <mssgle:LineSegment
                    End="158.833333333333,242.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 16]"
          TopLeft="86.875,1097">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="124.125,208.5"
              Start="0,0"
              End="124.125,201">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.443797121316" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.443797121316"
                    Point2="0,44.443797121316"
                    Point3="4,44.443797121316" />
                  <mssgle:LineSegment
                    End="120.125,44.443797121316" />
                  <mssgle:CubicBezierSegment
                    Point1="120.125,44.443797121316"
                    Point2="124.125,44.443797121316"
                    Point3="124.125,48.443797121316" />
                  <mssgle:LineSegment
                    End="124.125,201" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 17]"
          TopLeft="121.75,1097">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="282.25,300"
              Start="0,0"
              End="282.25,292.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,125.019929235061" />
                  <mssgle:CubicBezierSegment
                    Point1="0,125.019929235061"
                    Point2="0,129.019929235061"
                    Point3="4,129.019929235061" />
                  <mssgle:LineSegment
                    End="278.25,129.019929235061" />
                  <mssgle:CubicBezierSegment
                    Point1="278.25,129.019929235061"
                    Point2="282.25,129.019929235061"
                    Point3="282.25,133.019929235061" />
                  <mssgle:LineSegment
                    End="282.25,292.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 18]"
          TopLeft="261.25,1097">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="547.25,185"
              Start="0,0"
              End="547.25,177.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.8020713463751" />
                  <mssgle:CubicBezierSegment
                    Point1="0,58.8020713463751"
                    Point2="0,62.8020713463751"
                    Point3="4,62.8020713463751" />
                  <mssgle:LineSegment
                    End="543.25,62.8020713463751" />
                  <mssgle:CubicBezierSegment
                    Point1="543.25,62.8020713463751"
                    Point2="547.25,62.8020713463751"
                    Point3="547.25,66.8020713463751" />
                  <mssgle:LineSegment
                    End="547.25,177.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 19]"
          TopLeft="296.125,1097">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="774.875,186"
              Start="0,0"
              End="774.875,178.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.6477039067855" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.6477039067855"
                    Point2="0,39.6477039067855"
                    Point3="4,39.6477039067855" />
                  <mssgle:LineSegment
                    End="770.875,39.6477039067855" />
                  <mssgle:CubicBezierSegment
                    Point1="770.875,39.6477039067855"
                    Point2="774.875,39.6477039067855"
                    Point3="774.875,43.6477039067855" />
                  <mssgle:LineSegment
                    End="774.875,178.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 20]"
          TopLeft="507.8,973">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="47.5333333333334,321"
              Start="0,0"
              End="47.5333333333334,313.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,170.318160077676" />
                  <mssgle:CubicBezierSegment
                    Point1="0,170.318160077676"
                    Point2="0,174.318160077676"
                    Point3="4,174.318160077676" />
                  <mssgle:LineSegment
                    End="43.5333333333334,174.318160077676" />
                  <mssgle:CubicBezierSegment
                    Point1="43.5333333333334,174.318160077676"
                    Point2="47.5333333333334,174.318160077676"
                    Point3="47.5333333333334,178.318160077676" />
                  <mssgle:LineSegment
                    End="47.5333333333334,313.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 21]"
          TopLeft="194.75,918.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.5"
              Start="0,0"
              End="0,39">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 22]"
          TopLeft="193,1007">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 23]"
          TopLeft="426.6,973">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-215.6,332.5"
              Start="0,0"
              End="-215.6,325">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,94.7974683544304" />
                  <mssgle:CubicBezierSegment
                    Point1="0,94.7974683544304"
                    Point2="0,98.7974683544304"
                    Point3="-4,98.7974683544304" />
                  <mssgle:LineSegment
                    End="-211.6,98.7974683544304" />
                  <mssgle:CubicBezierSegment
                    Point1="-211.6,98.7974683544304"
                    Point2="-215.6,98.7974683544304"
                    Point3="-215.6,102.79746835443" />
                  <mssgle:LineSegment
                    End="-215.6,325" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 24]"
          TopLeft="750.25,975">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-316.75,422"
              Start="0,0"
              End="-316.75,414.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,140.500851788756" />
                  <mssgle:CubicBezierSegment
                    Point1="0,140.500851788756"
                    Point2="0,144.500851788756"
                    Point3="-4,144.500851788756" />
                  <mssgle:LineSegment
                    End="-312.75,144.500851788756" />
                  <mssgle:CubicBezierSegment
                    Point1="-312.75,144.500851788756"
                    Point2="-316.75,144.500851788756"
                    Point3="-316.75,148.500851788756" />
                  <mssgle:LineSegment
                    End="-316.75,414.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 25]"
          TopLeft="521.333333333333,973">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="256.666666666667,309"
              Start="0,0"
              End="256.666666666667,301.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,150.349653326846" />
                  <mssgle:CubicBezierSegment
                    Point1="0,150.349653326846"
                    Point2="0,154.349653326846"
                    Point3="4,154.349653326846" />
                  <mssgle:LineSegment
                    End="252.666666666667,154.349653326846" />
                  <mssgle:CubicBezierSegment
                    Point1="252.666666666667,154.349653326846"
                    Point2="256.666666666667,154.349653326846"
                    Point3="256.666666666667,158.349653326846" />
                  <mssgle:LineSegment
                    End="256.666666666667,301.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 26]"
          TopLeft="838.166666666667,975">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,307"
              Start="0,0"
              End="0,299.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,299.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 27]"
          TopLeft="1107.25,1091">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,192"
              Start="0,0"
              End="0,184.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,184.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 28]"
          TopLeft="778,975">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-156.333333333333,319"
              Start="0,0"
              End="-156.333333333333,311.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,169.301353730891" />
                  <mssgle:CubicBezierSegment
                    Point1="0,169.301353730891"
                    Point2="0,173.301353730891"
                    Point3="-4,173.301353730891" />
                  <mssgle:LineSegment
                    End="-152.333333333333,173.301353730891" />
                  <mssgle:CubicBezierSegment
                    Point1="-152.333333333333,173.301353730891"
                    Point2="-156.333333333333,173.301353730891"
                    Point3="-156.333333333333,177.301353730891" />
                  <mssgle:LineSegment
                    End="-156.333333333333,311.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 29]"
          TopLeft="191.5,1097">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="397,197"
              Start="0,0"
              End="397,189.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,94.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,94.5"
                    Point2="0,98.5"
                    Point3="4,98.5" />
                  <mssgle:LineSegment
                    End="393,98.5" />
                  <mssgle:CubicBezierSegment
                    Point1="393,98.5"
                    Point2="397,98.5"
                    Point3="397,102.5" />
                  <mssgle:LineSegment
                    End="397,189.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="741,207">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="253,140"
              Start="0,0"
              End="253,132.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.7391304347826" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47.7391304347826"
                    Point2="0,51.7391304347826"
                    Point3="4,51.7391304347826" />
                  <mssgle:LineSegment
                    End="249,51.7391304347826" />
                  <mssgle:CubicBezierSegment
                    Point1="249,51.7391304347826"
                    Point2="253,51.7391304347826"
                    Point3="253,55.7391304347826" />
                  <mssgle:LineSegment
                    End="253,132.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 30]"
          TopLeft="538.75,1336">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-75.75,61"
              Start="0,0"
              End="-75.75,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.3900520997618" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.3900520997618"
                    Point2="0,26.3900520997618"
                    Point3="-4,26.3900520997618" />
                  <mssgle:LineSegment
                    End="-71.75,26.3900520997618" />
                  <mssgle:CubicBezierSegment
                    Point1="-71.75,26.3900520997618"
                    Point2="-75.75,26.3900520997618"
                    Point3="-75.75,30.3900520997618" />
                  <mssgle:LineSegment
                    End="-75.75,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 32]"
          TopLeft="467.2,973">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62.8,558"
              Start="0,0"
              End="62.8,550.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,245.300471945464" />
                  <mssgle:CubicBezierSegment
                    Point1="0,245.300471945464"
                    Point2="0,249.300471945464"
                    Point3="4,249.300471945464" />
                  <mssgle:LineSegment
                    End="58.8,249.300471945464" />
                  <mssgle:CubicBezierSegment
                    Point1="58.8,249.300471945464"
                    Point2="62.8,249.300471945464"
                    Point3="62.8,253.300471945464" />
                  <mssgle:LineSegment
                    End="62.8,550.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 33]"
          TopLeft="177.5,1347.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="319.833333333333,183.5"
              Start="0,0"
              End="319.833333333333,176">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,87.7288896047122" />
                  <mssgle:CubicBezierSegment
                    Point1="0,87.7288896047122"
                    Point2="0,91.7288896047122"
                    Point3="4,91.7288896047122" />
                  <mssgle:LineSegment
                    End="315.833333333333,91.7288896047122" />
                  <mssgle:CubicBezierSegment
                    Point1="315.833333333333,91.7288896047122"
                    Point2="319.833333333333,91.7288896047122"
                    Point3="319.833333333333,95.7288896047122" />
                  <mssgle:LineSegment
                    End="319.833333333333,176" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 34]"
          TopLeft="588.5,1336">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-25.8333333333334,195"
              Start="0,0"
              End="-25.8333333333334,187.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,112.089494163424" />
                  <mssgle:CubicBezierSegment
                    Point1="0,112.089494163424"
                    Point2="0,116.089494163424"
                    Point3="-4,116.089494163424" />
                  <mssgle:LineSegment
                    End="-21.8333333333334,116.089494163424" />
                  <mssgle:CubicBezierSegment
                    Point1="-21.8333333333334,116.089494163424"
                    Point2="-25.8333333333334,116.089494163424"
                    Point3="-25.8333333333334,120.089494163424" />
                  <mssgle:LineSegment
                    End="-25.8333333333334,187.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 35]"
          TopLeft="244.5,1347.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="500.9,160.5"
              Start="0,0"
              End="500.9,153">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,94.929085226709" />
                  <mssgle:CubicBezierSegment
                    Point1="0,94.929085226709"
                    Point2="0,98.929085226709"
                    Point3="4,98.929085226709" />
                  <mssgle:LineSegment
                    End="496.9,98.929085226709" />
                  <mssgle:CubicBezierSegment
                    Point1="496.9,98.929085226709"
                    Point2="500.9,98.929085226709"
                    Point3="500.9,102.929085226709" />
                  <mssgle:LineSegment
                    End="500.9,153" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 36]"
          TopLeft="815,975">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9,533"
              Start="0,0"
              End="-9,525.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,234.246418338109" />
                  <mssgle:CubicBezierSegment
                    Point1="0,234.246418338109"
                    Point2="0,238.246418338109"
                    Point3="-4,238.246418338109" />
                  <mssgle:LineSegment
                    End="-5,238.246418338109" />
                  <mssgle:CubicBezierSegment
                    Point1="-5,238.246418338109"
                    Point2="-9,238.246418338109"
                    Point3="-9,242.246418338109" />
                  <mssgle:LineSegment
                    End="-9,525.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 37]"
          TopLeft="638.25,1336">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="187.95,172"
              Start="0,0"
              End="187.95,164.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.3153936569687" />
                  <mssgle:CubicBezierSegment
                    Point1="0,63.3153936569687"
                    Point2="0,67.3153936569687"
                    Point3="4,67.3153936569687" />
                  <mssgle:LineSegment
                    End="183.95,67.3153936569687" />
                  <mssgle:CubicBezierSegment
                    Point1="183.95,67.3153936569687"
                    Point2="187.95,67.3153936569687"
                    Point3="187.95,71.3153936569687" />
                  <mssgle:LineSegment
                    End="187.95,164.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 38]"
          TopLeft="433.5,1439">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="372.5,69"
              Start="0,0"
              End="372.5,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.5"
                    Point2="0,34.5"
                    Point3="4,34.5" />
                  <mssgle:LineSegment
                    End="368.5,34.5" />
                  <mssgle:CubicBezierSegment
                    Point1="368.5,34.5"
                    Point2="372.5,34.5"
                    Point3="372.5,38.5" />
                  <mssgle:LineSegment
                    End="372.5,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 39]"
          TopLeft="1073.66666666667,1091">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-234,417"
              Start="0,0"
              End="-234,409.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,204.437123039807" />
                  <mssgle:CubicBezierSegment
                    Point1="0,204.437123039807"
                    Point2="0,208.437123039807"
                    Point3="-4,208.437123039807" />
                  <mssgle:LineSegment
                    End="-230,208.437123039807" />
                  <mssgle:CubicBezierSegment
                    Point1="-230,208.437123039807"
                    Point2="-234,208.437123039807"
                    Point3="-234,212.437123039807" />
                  <mssgle:LineSegment
                    End="-234,409.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="613,207">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-272,135"
              Start="0,0"
              End="-272,127.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.9736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.9736842105263"
                    Point2="0,31.9736842105263"
                    Point3="-4,31.9736842105263" />
                  <mssgle:LineSegment
                    End="-268,31.9736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-268,31.9736842105263"
                    Point2="-272,31.9736842105263"
                    Point3="-272,35.9736842105263" />
                  <mssgle:LineSegment
                    End="-272,127.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 40]"
          TopLeft="1071,1325">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-204.4,183"
              Start="0,0"
              End="-204.4,175.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,124.614457831325" />
                  <mssgle:CubicBezierSegment
                    Point1="0,124.614457831325"
                    Point2="0,128.614457831325"
                    Point3="-4,128.614457831325" />
                  <mssgle:LineSegment
                    End="-200.4,128.614457831325" />
                  <mssgle:CubicBezierSegment
                    Point1="-200.4,128.614457831325"
                    Point2="-204.4,128.614457831325"
                    Point3="-204.4,132.614457831325" />
                  <mssgle:LineSegment
                    End="-204.4,175.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 41]"
          TopLeft="156.625,1097">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="324.375,434"
              Start="0,0"
              End="324.375,426.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,253.347988386562" />
                  <mssgle:CubicBezierSegment
                    Point1="0,253.347988386562"
                    Point2="0,257.347988386562"
                    Point3="4,257.347988386562" />
                  <mssgle:LineSegment
                    End="320.375,257.347988386562" />
                  <mssgle:CubicBezierSegment
                    Point1="320.375,257.347988386562"
                    Point2="324.375,257.347988386562"
                    Point3="324.375,261.347988386562" />
                  <mssgle:LineSegment
                    End="324.375,426.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 42]"
          TopLeft="226.375,1097">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="512.291666666667,411"
              Start="0,0"
              End="512.291666666667,403.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,274.851345489876" />
                  <mssgle:CubicBezierSegment
                    Point1="0,274.851345489876"
                    Point2="0,278.851345489876"
                    Point3="4,278.851345489876" />
                  <mssgle:LineSegment
                    End="508.291666666667,278.851345489876" />
                  <mssgle:CubicBezierSegment
                    Point1="508.291666666667,278.851345489876"
                    Point2="512.291666666667,278.851345489876"
                    Point3="512.291666666667,282.851345489876" />
                  <mssgle:LineSegment
                    End="512.291666666667,403.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="709,207">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="143.5,558"
              Start="0,0"
              End="143.5,550.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,344.38370871747" />
                  <mssgle:CubicBezierSegment
                    Point1="0,344.38370871747"
                    Point2="0,348.38370871747"
                    Point3="4,348.38370871747" />
                  <mssgle:LineSegment
                    End="139.5,348.38370871747" />
                  <mssgle:CubicBezierSegment
                    Point1="139.5,348.38370871747"
                    Point2="143.5,348.38370871747"
                    Point3="143.5,352.38370871747" />
                  <mssgle:LineSegment
                    End="143.5,550.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="773,207">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="301.666666666667,674"
              Start="0,0"
              End="301.666666666667,666.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,207.666699247385" />
                  <mssgle:CubicBezierSegment
                    Point1="0,207.666699247385"
                    Point2="0,211.666699247385"
                    Point3="4,211.666699247385" />
                  <mssgle:LineSegment
                    End="297.666666666667,211.666699247385" />
                  <mssgle:CubicBezierSegment
                    Point1="297.666666666667,211.666699247385"
                    Point2="301.666666666667,211.666699247385"
                    Point3="301.666666666667,215.666699247385" />
                  <mssgle:LineSegment
                    End="301.666666666667,666.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="645,207">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-115.666666666667,555"
              Start="0,0"
              End="-115.666666666667,547.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,253.318181818182" />
                  <mssgle:CubicBezierSegment
                    Point1="0,253.318181818182"
                    Point2="0,257.318181818182"
                    Point3="-4,257.318181818182" />
                  <mssgle:LineSegment
                    End="-111.666666666667,257.318181818182" />
                  <mssgle:CubicBezierSegment
                    Point1="-111.666666666667,257.318181818182"
                    Point2="-115.666666666667,257.318181818182"
                    Point3="-115.666666666667,261.318181818182" />
                  <mssgle:LineSegment
                    End="-115.666666666667,547.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="223,42"
          Id="Package\Populate PaymentExtract table"
          TopLeft="30.3571485256659,176.676472540133" />
        <NodeLayout
          Size="224,42"
          Id="Package\Truncate PaymentExtract table"
          TopLeft="32.5,90.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Ensure PaymentExtract table exists"
          TopLeft="23.5,7.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2 1]"
          TopLeft="143.178574262833,132.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.176472540133"
              Start="0,0"
              End="0,36.676472540133">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.676472540133" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1 1]"
          TopLeft="145,49.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="265,42"
          Id="Package\Normalize data in PaymentExtract table"
          TopLeft="12,250" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="143.178574262833,218.676472540133">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.323527459867"
              Start="0,0"
              End="0,23.823527459867">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.823527459867" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <GroupLayout
          Text="PaymentExtract"
          ParentId="Package"
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="284,307"
          Size="284,350"
          Id="57aa7fab-1edd-4e64-9359-2f3396c2fedc"
          TopLeft="847.5,295.5">
          <GroupLayout.ChildrenIds>
            <s:String>Package\Populate PaymentExtract table</s:String>
            <s:String>Package\Truncate PaymentExtract table</s:String>
            <s:String>Package\Ensure PaymentExtract table exists</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 2 1]</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 1 1]</s:String>
            <s:String>Package\Normalize data in PaymentExtract table</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 7]</s:String>
          </GroupLayout.ChildrenIds>
        </GroupLayout>
        <NodeLayout
          Size="214,42"
          Id="Package\Ensure FeeStage table exists"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="193,42"
          Id="Package\Populate FeeStage table"
          TopLeft="12.357148525666,174.676472540133" />
        <NodeLayout
          Size="194,42"
          Id="Package\Truncate FeeStage table"
          TopLeft="13.5,88.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1 2]"
          TopLeft="111.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2 2]"
          TopLeft="109.678574262833,130.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.176472540133"
              Start="0,0"
              End="0,36.676472540133">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.676472540133" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <GroupLayout
          Text="FeeStage"
          ParentId="Package"
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="224,240"
          Size="224,283"
          Id="0173a3ff-e4c1-4ae1-ba88-85b228702d81"
          TopLeft="687.5,715.5">
          <GroupLayout.ChildrenIds>
            <s:String>Package\Ensure FeeStage table exists</s:String>
            <s:String>Package\Populate FeeStage table</s:String>
            <s:String>Package\Truncate FeeStage table</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 1 2]</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 2 2]</s:String>
          </GroupLayout.ChildrenIds>
        </GroupLayout>
        <NodeLayout
          Size="238,42"
          Id="Package\Ensure PaymentStage table exists"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="217,42"
          Id="Package\Populate PaymentStage table"
          TopLeft="12.357148525666,174.676472540133" />
        <NodeLayout
          Size="218,42"
          Id="Package\Truncate PaymentStage table"
          TopLeft="13.5,88.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1 2 1]"
          TopLeft="123.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2 2 1]"
          TopLeft="121.678574262833,130.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.176472540133"
              Start="0,0"
              End="0,36.676472540133">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.676472540133" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <GroupLayout
          Text="PaymentStage"
          ParentId="Package"
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="248,239"
          Size="248,282"
          Id="969c0f81-be05-411b-9aa4-b54a5ec2b717"
          TopLeft="987.5,831.5">
          <GroupLayout.ChildrenIds>
            <s:String>Package\Ensure PaymentStage table exists</s:String>
            <s:String>Package\Populate PaymentStage table</s:String>
            <s:String>Package\Truncate PaymentStage table</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 1 2 1]</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 2 2 1]</s:String>
          </GroupLayout.ChildrenIds>
        </GroupLayout>
        <NodeLayout
          Size="232,42"
          Id="Package\Ensure LicenseStage table exists"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="211,42"
          Id="Package\Populate LicenseStage table"
          TopLeft="12.35714852567,174.676472540133" />
        <NodeLayout
          Size="212,42"
          Id="Package\Truncate LicenseStage table"
          TopLeft="13.5,88.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1 2 1 1]"
          TopLeft="120.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2 2 1 1]"
          TopLeft="118.678574262835,130.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.176472540133"
              Start="0,0"
              End="0,36.676472540133">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.676472540133" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <GroupLayout
          Text="LicenseStage"
          ParentId="Package"
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="242,272"
          Size="242,315"
          Id="3ffff640-686a-4c1b-9069-13a3a87393b1"
          TopLeft="369.5,713.25">
          <GroupLayout.ChildrenIds>
            <s:String>Package\Ensure LicenseStage table exists</s:String>
            <s:String>Package\Populate LicenseStage table</s:String>
            <s:String>Package\Truncate LicenseStage table</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 1 2 1 1]</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 2 2 1 1]</s:String>
          </GroupLayout.ChildrenIds>
        </GroupLayout>
        <NodeLayout
          Size="217,42"
          Id="Package\Populate LicenseExtract table"
          TopLeft="33.3571485256659,180.676472540133" />
        <NodeLayout
          Size="218,42"
          Id="Package\Truncate LicenseExtract table"
          TopLeft="35.5,94.5" />
        <NodeLayout
          Size="238,42"
          Id="Package\Ensure LicenseExtract table exists"
          TopLeft="26.5,11.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2 1 1]"
          TopLeft="143.178574262833,136.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.176472540133"
              Start="0,0"
              End="0,36.676472540133">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.676472540133" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1 1 1]"
          TopLeft="145,53.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="258,42"
          Id="Package\Normalize data in LicenseExtract table"
          TopLeft="19,256" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="144.928574262833,222.676472540133">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.323527459867"
              Start="0,0"
              End="0,25.823527459867">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.823527459867" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <GroupLayout
          Text="LicenseExtract"
          ParentId="Package"
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="288,353"
          Size="288,396"
          Id="1120e40a-ccf1-4e6c-a389-272fa69393a2"
          TopLeft="196,287.176472540133">
          <GroupLayout.ChildrenIds>
            <s:String>Package\Populate LicenseExtract table</s:String>
            <s:String>Package\Truncate LicenseExtract table</s:String>
            <s:String>Package\Ensure LicenseExtract table exists</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 2 1 1]</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 1 1 1]</s:String>
            <s:String>Package\Normalize data in LicenseExtract table</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 10]</s:String>
          </GroupLayout.ChildrenIds>
        </GroupLayout>
        <NodeLayout
          Size="199,42"
          Id="Package\Populate FeeExtract table"
          TopLeft="34.357148525666,179.676472540133" />
        <NodeLayout
          Size="200,42"
          Id="Package\Truncate FeeExtract table"
          TopLeft="36.5,93.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="135.178574262833,135.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.176472540133"
              Start="0,0"
              End="0,36.676472540133">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.676472540133" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="220,42"
          Id="Package\Ensure FeeExtract table exists"
          TopLeft="27.5,10.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="137,52.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="241,42"
          Id="Package\Normalize data in FeeExtract table"
          TopLeft="14.5,253" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="134.428574262833,221.676472540133">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.323527459867"
              Start="0,0"
              End="0,23.823527459867">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.823527459867" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <GroupLayout
          Text="FeeExtract"
          ParentId="Package"
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="270,316"
          Size="270,359"
          Id="b50871d4-1b79-40be-bc31-afa0cf06ea5c"
          TopLeft="535.5,289.5">
          <GroupLayout.ChildrenIds>
            <s:String>Package\Populate FeeExtract table</s:String>
            <s:String>Package\Truncate FeeExtract table</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 2]</s:String>
            <s:String>Package\Ensure FeeExtract table exists</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 1]</s:String>
            <s:String>Package\Normalize data in FeeExtract table</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 6]</s:String>
          </GroupLayout.ChildrenIds>
        </GroupLayout>
        <NodeLayout
          Size="220,42"
          Id="Package\Ensure needed functions exist"
          TopLeft="758,61" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 31]"
          TopLeft="523.5,104">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="132.166666666667,61"
              Start="0,0"
              End="132.166666666667,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.3493150684932" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.3493150684932"
                    Point2="0,36.3493150684932"
                    Point3="4,36.3493150684932" />
                  <mssgle:LineSegment
                    End="128.166666666667,36.3493150684932" />
                  <mssgle:CubicBezierSegment
                    Point1="128.166666666667,36.3493150684932"
                    Point2="132.166666666667,36.3493150684932"
                    Point3="132.166666666667,40.3493150684932" />
                  <mssgle:LineSegment
                    End="132.166666666667,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 43]"
          TopLeft="868,103">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-137.666666666667,62"
              Start="0,0"
              End="-137.666666666667,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.945205479452" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.945205479452"
                    Point2="0,36.945205479452"
                    Point3="-4,36.945205479452" />
                  <mssgle:LineSegment
                    End="-133.666666666667,36.945205479452" />
                  <mssgle:CubicBezierSegment
                    Point1="-133.666666666667,36.945205479452"
                    Point2="-137.666666666667,36.945205479452"
                    Point3="-137.666666666667,40.945205479452" />
                  <mssgle:LineSegment
                    End="-137.666666666667,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Populate BusinessDim table">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="233,42"
          Id="Package\Populate BusinessDim table\Insert business data to database"
          TopLeft="525,324" />
        <NodeLayout
          Size="246,42"
          Id="Package\Populate BusinessDim table\Get staged and filtered license data"
          TopLeft="518,130" />
        <EdgeLayout
          Id="Package\Populate BusinessDim table.Paths[OLE DB Source Output]"
          TopLeft="641.25,172">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,152"
              Start="0,0"
              End="0,144.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,144.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate BusinessDim table\Get staged and filtered license data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate BusinessDim table\Insert business data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Populate FeeDim table">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="153,42"
          Id="Package\Populate FeeDim table\Join by industry"
          TopLeft="615,406" />
        <NodeLayout
          Size="250,42"
          Id="Package\Populate FeeDim table\Sort fee data and remove duplicates"
          TopLeft="407,225" />
        <NodeLayout
          Size="172,42"
          Id="Package\Populate FeeDim table\Get staged fee data"
          TopLeft="452,101" />
        <NodeLayout
          Size="207,42"
          Id="Package\Populate FeeDim table\Insert fee data to database"
          TopLeft="586,625" />
        <NodeLayout
          Size="187,42"
          Id="Package\Populate FeeDim table\Get industry dimension"
          TopLeft="756,102" />
        <NodeLayout
          Size="208,42"
          Id="Package\Populate FeeDim table\Sort and remove duplicates"
          TopLeft="587,507" />
        <NodeLayout
          Size="147,42"
          Id="Package\Populate FeeDim table\Sort industries"
          TopLeft="771,225" />
        <EdgeLayout
          Id="Package\Populate FeeDim table.Paths[OLE DB Source Output]"
          TopLeft="535,143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,82"
              Start="0,0"
              End="0,74.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,74.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate FeeDim table.Paths[Merge Join Output]"
          TopLeft="691.25,448">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate FeeDim table.Paths[Sort Output2]"
          TopLeft="690.25,549">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,76"
              Start="0,0"
              End="0,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate FeeDim table.Paths[Sort Output1]"
          TopLeft="532,267">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="135.333333333333,139"
              Start="0,0"
              End="135.333333333333,131.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,78.5368693402328" />
                  <mssgle:CubicBezierSegment
                    Point1="0,78.5368693402328"
                    Point2="0,82.5368693402328"
                    Point3="4,82.5368693402328" />
                  <mssgle:LineSegment
                    End="131.333333333333,82.5368693402328" />
                  <mssgle:CubicBezierSegment
                    Point1="131.333333333333,82.5368693402328"
                    Point2="135.333333333333,82.5368693402328"
                    Point3="135.333333333333,86.5368693402328" />
                  <mssgle:LineSegment
                    End="135.333333333333,131.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate FeeDim table.Paths[Sort Output]"
          TopLeft="844.5,267">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-128.833333333333,139"
              Start="0,0"
              End="-128.833333333333,131.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,78.5368693402328" />
                  <mssgle:CubicBezierSegment
                    Point1="0,78.5368693402328"
                    Point2="0,82.5368693402328"
                    Point3="-4,82.5368693402328" />
                  <mssgle:LineSegment
                    End="-124.833333333333,82.5368693402328" />
                  <mssgle:CubicBezierSegment
                    Point1="-124.833333333333,82.5368693402328"
                    Point2="-128.833333333333,82.5368693402328"
                    Point3="-128.833333333333,86.5368693402328" />
                  <mssgle:LineSegment
                    End="-128.833333333333,131.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate FeeDim table.Paths[OLE DB Source Output1]"
          TopLeft="847,144">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,81"
              Start="0,0"
              End="0,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate FeeDim table\Get staged fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate FeeDim table\Insert fee data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate FeeDim table\Get industry dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Populate FeeExtract table">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="228,42"
          Id="Package\Populate FeeExtract table\Insert raw fee data to database"
          TopLeft="379,271" />
        <NodeLayout
          Size="149,42"
          Id="Package\Populate FeeExtract table\Redirect errors"
          TopLeft="680,272" />
        <NodeLayout
          Size="217,42"
          Id="Package\Populate FeeExtract table\Extract fee data from dataset"
          TopLeft="514,114" />
        <EdgeLayout
          Id="Package\Populate FeeExtract table.Paths[Flat File Source Output]"
          TopLeft="587.666666666667,156">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-94.6666666666666,115"
              Start="0,0"
              End="-94.6666666666666,107.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5050320219579" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.5050320219579"
                    Point2="0,46.5050320219579"
                    Point3="-4,46.5050320219579" />
                  <mssgle:LineSegment
                    End="-90.6666666666666,46.5050320219579" />
                  <mssgle:CubicBezierSegment
                    Point1="-90.6666666666666,46.5050320219579"
                    Point2="-94.6666666666666,46.5050320219579"
                    Point3="-94.6666666666666,50.5050320219579" />
                  <mssgle:LineSegment
                    End="-94.6666666666666,107.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate FeeExtract table.Paths[Flat File Source Error Output]"
          TopLeft="657.333333333333,156">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="97.1666666666667,116"
              Start="0,0"
              End="97.1666666666667,108.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.9094236047576" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.9094236047576"
                    Point2="0,46.9094236047576"
                    Point3="4,46.9094236047576" />
                  <mssgle:LineSegment
                    End="93.1666666666667,46.9094236047576" />
                  <mssgle:CubicBezierSegment
                    Point1="93.1666666666667,46.9094236047576"
                    Point2="97.1666666666667,46.9094236047576"
                    Point3="97.1666666666667,50.9094236047576" />
                  <mssgle:LineSegment
                    End="97.1666666666667,108.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.0430533854166,51.9094236047576,127.2527734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate FeeExtract table\Insert raw fee data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Populate FeeStage table">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="202,42"
          Id="Package\Populate FeeStage table\Get extracted license data"
          TopLeft="787,111" />
        <NodeLayout
          Size="140,42"
          Id="Package\Populate FeeStage table\Sort fee data"
          TopLeft="513,250" />
        <NodeLayout
          Size="157,42"
          Id="Package\Populate FeeStage table\Sort license data"
          TopLeft="806,249" />
        <NodeLayout
          Size="260,42"
          Id="Package\Populate FeeStage table\Remove fees for undefined businesses"
          TopLeft="601,388" />
        <NodeLayout
          Size="207,42"
          Id="Package\Populate FeeStage table\Insert fee data to database"
          TopLeft="628,507" />
        <NodeLayout
          Size="184,42"
          Id="Package\Populate FeeStage table\Get extracted fee data"
          TopLeft="493,114" />
        <EdgeLayout
          Id="Package\Populate FeeStage table.Paths[Sort Output1]"
          TopLeft="884.5,291">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-111.5,97"
              Start="0,0"
              End="-111.5,89.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.8440366972477" />
                  <mssgle:CubicBezierSegment
                    Point1="0,53.8440366972477"
                    Point2="0,57.8440366972477"
                    Point3="-4,57.8440366972477" />
                  <mssgle:LineSegment
                    End="-107.5,57.8440366972477" />
                  <mssgle:CubicBezierSegment
                    Point1="-107.5,57.8440366972477"
                    Point2="-111.5,57.8440366972477"
                    Point3="-111.5,61.8440366972477" />
                  <mssgle:LineSegment
                    End="-111.5,89.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate FeeStage table.Paths[Sort Output]"
          TopLeft="583,292">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="106,96"
              Start="0,0"
              End="106,88.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.2477064220183" />
                  <mssgle:CubicBezierSegment
                    Point1="0,53.2477064220183"
                    Point2="0,57.2477064220183"
                    Point3="4,57.2477064220183" />
                  <mssgle:LineSegment
                    End="102,57.2477064220183" />
                  <mssgle:CubicBezierSegment
                    Point1="102,57.2477064220183"
                    Point2="106,57.2477064220183"
                    Point3="106,61.2477064220183" />
                  <mssgle:LineSegment
                    End="106,88.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate FeeStage table.Paths[OLE DB Source Output1]"
          TopLeft="886.25,153">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,96"
              Start="0,0"
              End="0,88.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,88.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate FeeStage table.Paths[OLE DB Source Output]"
          TopLeft="584,156">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,94"
              Start="0,0"
              End="0,86.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,86.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate FeeStage table.Paths[Merge Join Output]"
          TopLeft="731.25,430">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,77"
              Start="0,0"
              End="0,69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate FeeStage table\Get extracted license data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate FeeStage table\Insert fee data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate FeeStage table\Get extracted fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Populate IndustryDim table">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="230,42"
          Id="Package\Populate IndustryDim table\Insert industry data to database"
          TopLeft="583,650" />
        <NodeLayout
          Size="217,42"
          Id="Package\Populate IndustryDim table\Sort and remove duplicates 3"
          TopLeft="588,541" />
        <NodeLayout
          Size="205,42"
          Id="Package\Populate IndustryDim table\Extract staged license data"
          TopLeft="419,159" />
        <NodeLayout
          Size="217,42"
          Id="Package\Populate IndustryDim table\Sort and remove duplicates 1"
          TopLeft="415,288" />
        <NodeLayout
          Size="217,42"
          Id="Package\Populate IndustryDim table\Sort and remove duplicates 2"
          TopLeft="750,288" />
        <NodeLayout
          Size="188,42"
          Id="Package\Populate IndustryDim table\Extract staged fee data"
          TopLeft="770,158" />
        <NodeLayout
          Size="108,42"
          Id="Package\Populate IndustryDim table\Merge"
          TopLeft="637,429" />
        <EdgeLayout
          Id="Package\Populate IndustryDim table.Paths[Sort Output2]"
          TopLeft="697.25,583">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67"
              Start="0,0"
              End="0,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate IndustryDim table.Paths[Sort Output1]"
          TopLeft="858.5,330">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-150.833333333333,99"
              Start="0,0"
              End="-150.833333333333,91.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5328467153284" />
                  <mssgle:CubicBezierSegment
                    Point1="0,54.5328467153284"
                    Point2="0,58.5328467153284"
                    Point3="-4,58.5328467153284" />
                  <mssgle:LineSegment
                    End="-146.833333333333,58.5328467153284" />
                  <mssgle:CubicBezierSegment
                    Point1="-146.833333333333,58.5328467153284"
                    Point2="-150.833333333333,58.5328467153284"
                    Point3="-150.833333333333,62.5328467153284" />
                  <mssgle:LineSegment
                    End="-150.833333333333,91.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate IndustryDim table.Paths[Sort Output]"
          TopLeft="523.5,330">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="150.833333333333,99"
              Start="0,0"
              End="150.833333333333,91.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5328467153284" />
                  <mssgle:CubicBezierSegment
                    Point1="0,54.5328467153284"
                    Point2="0,58.5328467153284"
                    Point3="4,58.5328467153284" />
                  <mssgle:LineSegment
                    End="146.833333333333,58.5328467153284" />
                  <mssgle:CubicBezierSegment
                    Point1="146.833333333333,58.5328467153284"
                    Point2="150.833333333333,58.5328467153284"
                    Point3="150.833333333333,62.5328467153284" />
                  <mssgle:LineSegment
                    End="150.833333333333,91.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate IndustryDim table.Paths[OLE DB Source Output1]"
          TopLeft="522.5,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,87"
              Start="0,0"
              End="0,79.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate IndustryDim table.Paths[OLE DB Source Output]"
          TopLeft="861.25,200">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,88"
              Start="0,0"
              End="0,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate IndustryDim table.Paths[Merge Output 1]"
          TopLeft="693.75,471">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70"
              Start="0,0"
              End="0,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate IndustryDim table\Insert industry data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate IndustryDim table\Extract staged license data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate IndustryDim table\Extract staged fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Populate LicenseExtract table">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="245,42"
          Id="Package\Populate LicenseExtract table\Insert raw license data to database"
          TopLeft="354,555" />
        <NodeLayout
          Size="218,42"
          Id="Package\Populate LicenseExtract table\Get license data from dataset"
          TopLeft="514,114" />
        <NodeLayout
          Size="149,42"
          Id="Package\Populate LicenseExtract table\Redirect errors"
          TopLeft="680,272" />
        <NodeLayout
          Size="191,42"
          Id="Package\Populate LicenseExtract table\Convert strings to dates"
          TopLeft="386,274" />
        <EdgeLayout
          Id="Package\Populate LicenseExtract table.Paths[Flat File Source Output]"
          TopLeft="588,156">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-106.5,118"
              Start="0,0"
              End="-106.5,110.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.7158469945355" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.7158469945355"
                    Point2="0,47.7158469945355"
                    Point3="-4,47.7158469945355" />
                  <mssgle:LineSegment
                    End="-102.5,47.7158469945355" />
                  <mssgle:CubicBezierSegment
                    Point1="-102.5,47.7158469945355"
                    Point2="-106.5,47.7158469945355"
                    Point3="-106.5,51.7158469945355" />
                  <mssgle:LineSegment
                    End="-106.5,110.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate LicenseExtract table.Paths[Flat File Source Error Output]"
          TopLeft="658,156">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96.5,116"
              Start="0,0"
              End="96.5,108.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.9071038251366" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.9071038251366"
                    Point2="0,46.9071038251366"
                    Point3="4,46.9071038251366" />
                  <mssgle:LineSegment
                    End="92.5,46.9071038251366" />
                  <mssgle:CubicBezierSegment
                    Point1="92.5,46.9071038251366"
                    Point2="96.5,46.9071038251366"
                    Point3="96.5,50.9071038251366" />
                  <mssgle:LineSegment
                    End="96.5,108.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.37638671875,51.9071038251366,127.2527734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="187,42"
          Id="Package\Populate LicenseExtract table\Verify date correctness"
          TopLeft="387,411" />
        <EdgeLayout
          Id="Package\Populate LicenseExtract table.Paths[Derived Column Output]"
          TopLeft="481,316">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,95"
              Start="0,0"
              End="0,87.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,87.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate LicenseExtract table.Paths[Derived Column Output1]"
          TopLeft="478.5,453">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,102"
              Start="0,0"
              End="0,94.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,94.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate LicenseExtract table\Insert raw license data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Populate LicenseFact table">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="175,42"
          Id="Package\Populate LicenseFact table\Sort business data 2"
          TopLeft="606,321" />
        <NodeLayout
          Size="205,43"
          Id="Package\Populate LicenseFact table\Extract staged license data"
          TopLeft="197,92" />
        <NodeLayout
          Size="166,42"
          Id="Package\Populate LicenseFact table\Sort business data"
          TopLeft="451,208" />
        <NodeLayout
          Size="187,42"
          Id="Package\Populate LicenseFact table\Get industry dimension"
          TopLeft="851,84" />
        <NodeLayout
          Size="157,42"
          Id="Package\Populate LicenseFact table\Sort license data"
          TopLeft="219,207" />
        <NodeLayout
          Size="190,42"
          Id="Package\Populate LicenseFact table\Get business dimension"
          TopLeft="441,91" />
        <NodeLayout
          Size="178,42"
          Id="Package\Populate LicenseFact table\Join data on industry"
          TopLeft="856,319" />
        <NodeLayout
          Size="199,42"
          Id="Package\Populate LicenseFact table\Calculate license duration"
          TopLeft="844,439" />
        <NodeLayout
          Size="163,42"
          Id="Package\Populate LicenseFact table\Sort industry data"
          TopLeft="861,198" />
        <NodeLayout
          Size="224,42"
          Id="Package\Populate LicenseFact table\Insert license data to database"
          TopLeft="831,560" />
        <EdgeLayout
          Id="Package\Populate LicenseFact table.Paths[OLE DB Source Output2]"
          TopLeft="943.5,126">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72"
              Start="0,0"
              End="0,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate LicenseFact table.Paths[OLE DB Source Output1]"
          TopLeft="535,133">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,75"
              Start="0,0"
              End="0,67.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate LicenseFact table.Paths[OLE DB Source Output]"
          TopLeft="298.5,135">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72"
              Start="0,0"
              End="0,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate LicenseFact table.Paths[Merge Join Output]"
          TopLeft="944.25,361">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,78"
              Start="0,0"
              End="0,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate LicenseFact table.Paths[Derived Column Output]"
          TopLeft="943.25,481">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,79"
              Start="0,0"
              End="0,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate LicenseFact table.Paths[Sort Output1]"
          TopLeft="943.75,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,79"
              Start="0,0"
              End="0,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate LicenseFact table.Paths[Sort Output]"
          TopLeft="781,341">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="214,42"
          Id="Package\Populate LicenseFact table\Join data on business names"
          TopLeft="306,319" />
        <EdgeLayout
          Id="Package\Populate LicenseFact table.Paths[Sort Output2]"
          TopLeft="297.5,249">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="81.1666666666666,70"
              Start="0,0"
              End="81.1666666666666,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.6883116883117" />
                  <mssgle:CubicBezierSegment
                    Point1="0,37.6883116883117"
                    Point2="0,41.6883116883117"
                    Point3="4,41.6883116883117" />
                  <mssgle:LineSegment
                    End="77.1666666666666,41.6883116883117" />
                  <mssgle:CubicBezierSegment
                    Point1="77.1666666666666,41.6883116883117"
                    Point2="81.1666666666666,41.6883116883117"
                    Point3="81.1666666666666,45.6883116883117" />
                  <mssgle:LineSegment
                    End="81.1666666666666,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate LicenseFact table.Paths[Sort Output3]"
          TopLeft="534,250">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-86.6666666666667,69"
              Start="0,0"
              End="-86.6666666666667,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.0927643784787" />
                  <mssgle:CubicBezierSegment
                    Point1="0,37.0927643784787"
                    Point2="0,41.0927643784787"
                    Point3="-4,41.0927643784787" />
                  <mssgle:LineSegment
                    End="-82.6666666666667,41.0927643784787" />
                  <mssgle:CubicBezierSegment
                    Point1="-82.6666666666667,41.0927643784787"
                    Point2="-86.6666666666667,41.0927643784787"
                    Point3="-86.6666666666667,45.0927643784787" />
                  <mssgle:LineSegment
                    End="-86.6666666666667,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate LicenseFact table.Paths[Merge Join Output1]"
          TopLeft="520,341">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="86,0"
              Start="0,0"
              End="78.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="78.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate LicenseFact table\Extract staged license data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate LicenseFact table\Get industry dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate LicenseFact table\Get business dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate LicenseFact table\Insert license data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Populate LicenseStage table">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="202,42"
          Id="Package\Populate LicenseStage table\Get extracted license data"
          TopLeft="610,153" />
        <NodeLayout
          Size="122,42"
          Id="Package\Populate LicenseStage table\Sort data"
          TopLeft="653,292" />
        <NodeLayout
          Size="224,42"
          Id="Package\Populate LicenseStage table\Insert license data to database"
          TopLeft="599,438" />
        <EdgeLayout
          Id="Package\Populate LicenseStage table.Paths[Sort Output]"
          TopLeft="712.5,334">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,104"
              Start="0,0"
              End="0,96.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,96.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate LicenseStage table.Paths[OLE DB Source Output]"
          TopLeft="712.5,195">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,97"
              Start="0,0"
              End="0,89.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,89.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate LicenseStage table\Get extracted license data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate LicenseStage table\Insert license data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Populate PaymentExtract table">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="254,42"
          Id="Package\Populate PaymentExtract table\Insert raw payment data to database"
          TopLeft="379,271" />
        <NodeLayout
          Size="149,42"
          Id="Package\Populate PaymentExtract table\Redirect errors"
          TopLeft="680,272" />
        <NodeLayout
          Size="227,42"
          Id="Package\Populate PaymentExtract table\Get payment data from dataset"
          TopLeft="514,114" />
        <EdgeLayout
          Id="Package\Populate PaymentExtract table.Paths[Flat File Source Output]"
          TopLeft="591,156">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-85,115"
              Start="0,0"
              End="-85,107.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.4829396325459" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.4829396325459"
                    Point2="0,46.4829396325459"
                    Point3="-4,46.4829396325459" />
                  <mssgle:LineSegment
                    End="-81,46.4829396325459" />
                  <mssgle:CubicBezierSegment
                    Point1="-81,46.4829396325459"
                    Point2="-85,46.4829396325459"
                    Point3="-85,50.4829396325459" />
                  <mssgle:LineSegment
                    End="-85,107.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentExtract table.Paths[Flat File Source Error Output]"
          TopLeft="664,156">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="90.5,116"
              Start="0,0"
              End="90.5,108.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.8871391076116" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.8871391076116"
                    Point2="0,46.8871391076116"
                    Point3="4,46.8871391076116" />
                  <mssgle:LineSegment
                    End="86.5,46.8871391076116" />
                  <mssgle:CubicBezierSegment
                    Point1="86.5,46.8871391076116"
                    Point2="90.5,46.8871391076116"
                    Point3="90.5,50.8871391076116" />
                  <mssgle:LineSegment
                    End="90.5,108.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-18.37638671875,51.8871391076116,127.2527734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate PaymentExtract table\Insert raw payment data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Populate PaymentFact table">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="202,42"
          Id="Package\Populate PaymentFact table\Sort by fee sequence ID 1"
          TopLeft="850,554" />
        <NodeLayout
          Size="164,42"
          Id="Package\Populate PaymentFact table\Sort by fee data 1"
          TopLeft="582,454" />
        <NodeLayout
          Size="164,42"
          Id="Package\Populate PaymentFact table\Get fee dimension"
          TopLeft="871,264" />
        <NodeLayout
          Size="190,42"
          Id="Package\Populate PaymentFact table\Get business dimension"
          TopLeft="109,38" />
        <NodeLayout
          Size="189,42"
          Id="Package\Populate PaymentFact table\Insert data to database"
          TopLeft="1433,765" />
        <NodeLayout
          Size="202,42"
          Id="Package\Populate PaymentFact table\Sort by fee sequence ID 2"
          TopLeft="1113,455" />
        <NodeLayout
          Size="187,42"
          Id="Package\Populate PaymentFact table\Get industry dimension"
          TopLeft="579,159" />
        <NodeLayout
          Size="190,42"
          Id="Package\Populate PaymentFact table\Join on business names"
          TopLeft="213,251" />
        <NodeLayout
          Size="155,42"
          Id="Package\Populate PaymentFact table\Join on fee data"
          TopLeft="874,453" />
        <NodeLayout
          Size="200,42"
          Id="Package\Populate PaymentFact table\Sort by business names 2"
          TopLeft="320,143" />
        <NodeLayout
          Size="163,42"
          Id="Package\Populate PaymentFact table\Sort by industry 2"
          TopLeft="589,254" />
        <NodeLayout
          Size="193,42"
          Id="Package\Populate PaymentFact table\Join on fee sequence ID"
          TopLeft="1118,554" />
        <NodeLayout
          Size="163,42"
          Id="Package\Populate PaymentFact table\Sort by industry 1"
          TopLeft="228,346" />
        <NodeLayout
          Size="154,42"
          Id="Package\Populate PaymentFact table\Join on industry"
          TopLeft="588,347" />
        <NodeLayout
          Size="225,42"
          Id="Package\Populate PaymentFact table\Get transaction type dimension"
          TopLeft="1418,458" />
        <NodeLayout
          Size="201,42"
          Id="Package\Populate PaymentFact table\Sort by transaction type 1"
          TopLeft="1112,649" />
        <NodeLayout
          Size="215,42"
          Id="Package\Populate PaymentFact table\Extract staged payment data"
          TopLeft="1110,361" />
        <NodeLayout
          Size="164,42"
          Id="Package\Populate PaymentFact table\Sort by fee data 2"
          TopLeft="868,356" />
        <NodeLayout
          Size="192,42"
          Id="Package\Populate PaymentFact table\Join on transaction type"
          TopLeft="1432,649" />
        <NodeLayout
          Size="188,42"
          Id="Package\Populate PaymentFact table\Extract staged fee data"
          TopLeft="327,38" />
        <NodeLayout
          Size="200,42"
          Id="Package\Populate PaymentFact table\Sort by business names 1"
          TopLeft="102,144" />
        <NodeLayout
          Size="201,42"
          Id="Package\Populate PaymentFact table\Sort by transaction type 2"
          TopLeft="1428,557" />
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Sort Output9]"
          TopLeft="202,186">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75.6666666666667,65"
              Start="0,0"
              End="75.6666666666667,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.6743215031315" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.6743215031315"
                    Point2="0,38.6743215031315"
                    Point3="4,38.6743215031315" />
                  <mssgle:LineSegment
                    End="71.6666666666667,38.6743215031315" />
                  <mssgle:CubicBezierSegment
                    Point1="71.6666666666667,38.6743215031315"
                    Point2="75.6666666666667,38.6743215031315"
                    Point3="75.6666666666667,42.6743215031315" />
                  <mssgle:LineSegment
                    End="75.6666666666667,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Sort Output8]"
          TopLeft="1313,670">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="119,0"
              Start="0,0"
              End="111.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="111.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Sort Output7]"
          TopLeft="1052,575">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="66,0"
              Start="0,0"
              End="58.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="58.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Sort Output6]"
          TopLeft="1214.25,497">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Sort Output5]"
          TopLeft="950.75,398">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Sort Output4]"
          TopLeft="746,474.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="128,0"
              Start="0,0"
              End="120.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="120.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Sort Output3]"
          TopLeft="1528.25,599">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Sort Output2]"
          TopLeft="667.75,296">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Sort Output1]"
          TopLeft="391,367.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="197,0"
              Start="0,0"
              End="189.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="189.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Sort Output]"
          TopLeft="420,185">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-81.6666666666667,66"
              Start="0,0"
              End="-81.6666666666667,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.2693110647182" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.2693110647182"
                    Point2="0,39.2693110647182"
                    Point3="-4,39.2693110647182" />
                  <mssgle:LineSegment
                    End="-77.6666666666667,39.2693110647182" />
                  <mssgle:CubicBezierSegment
                    Point1="-77.6666666666667,39.2693110647182"
                    Point2="-81.6666666666667,39.2693110647182"
                    Point3="-81.6666666666667,43.2693110647182" />
                  <mssgle:LineSegment
                    End="-81.6666666666667,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[OLE DB Source Output5]"
          TopLeft="951.5,306">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[OLE DB Source Output4]"
          TopLeft="1529.5,500">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[OLE DB Source Output3]"
          TopLeft="203,80">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64"
              Start="0,0"
              End="0,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[OLE DB Source Output2]"
          TopLeft="420.5,80">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63"
              Start="0,0"
              End="0,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[OLE DB Source Output1]"
          TopLeft="1215.75,403">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[OLE DB Source Output]"
          TopLeft="671.5,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Merge Join Output4]"
          TopLeft="1527.75,691">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74"
              Start="0,0"
              End="0,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Merge Join Output3]"
          TopLeft="664.5,389">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Merge Join Output2]"
          TopLeft="951.25,495">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Merge Join Output1]"
          TopLeft="1213.5,596">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentFact table.Paths[Merge Join Output]"
          TopLeft="308.75,293">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate PaymentFact table\Get fee dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate PaymentFact table\Get business dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate PaymentFact table\Insert data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate PaymentFact table\Get industry dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate PaymentFact table\Get transaction type dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate PaymentFact table\Extract staged payment data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate PaymentFact table\Extract staged fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Populate PaymentStage table">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="140,42"
          Id="Package\Populate PaymentStage table\Sort fee data"
          TopLeft="773,250" />
        <NodeLayout
          Size="330,42"
          Id="Package\Populate PaymentStage table\Remove payments for undefined fees and businesses"
          TopLeft="513,404" />
        <NodeLayout
          Size="233,42"
          Id="Package\Populate PaymentStage table\Insert payment data to database"
          TopLeft="561,534" />
        <NodeLayout
          Size="166,42"
          Id="Package\Populate PaymentStage table\Sort payment data"
          TopLeft="429,248" />
        <NodeLayout
          Size="211,42"
          Id="Package\Populate PaymentStage table\Get extracted payment data"
          TopLeft="407,114" />
        <NodeLayout
          Size="172,42"
          Id="Package\Populate PaymentStage table\Get staged fee data"
          TopLeft="758,115" />
        <EdgeLayout
          Id="Package\Populate PaymentStage table.Paths[Sort Output1]"
          TopLeft="843,292">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-111.333333333333,112"
              Start="0,0"
              End="-111.333333333333,104.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.875753920386" />
                  <mssgle:CubicBezierSegment
                    Point1="0,62.875753920386"
                    Point2="0,66.875753920386"
                    Point3="-4,66.875753920386" />
                  <mssgle:LineSegment
                    End="-107.333333333333,66.875753920386" />
                  <mssgle:CubicBezierSegment
                    Point1="-107.333333333333,66.875753920386"
                    Point2="-111.333333333333,66.875753920386"
                    Point3="-111.333333333333,70.875753920386" />
                  <mssgle:LineSegment
                    End="-111.333333333333,104.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentStage table.Paths[Sort Output]"
          TopLeft="512,290">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="112.333333333333,114"
              Start="0,0"
              End="112.333333333333,106.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.0699638118215" />
                  <mssgle:CubicBezierSegment
                    Point1="0,64.0699638118215"
                    Point2="0,68.0699638118215"
                    Point3="4,68.0699638118215" />
                  <mssgle:LineSegment
                    End="108.333333333333,68.0699638118215" />
                  <mssgle:CubicBezierSegment
                    Point1="108.333333333333,68.0699638118215"
                    Point2="112.333333333333,68.0699638118215"
                    Point3="112.333333333333,72.0699638118215" />
                  <mssgle:LineSegment
                    End="112.333333333333,106.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentStage table.Paths[OLE DB Source Output1]"
          TopLeft="843.5,157">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,93"
              Start="0,0"
              End="0,85.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,85.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentStage table.Paths[OLE DB Source Output]"
          TopLeft="512.25,156">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,92"
              Start="0,0"
              End="0,84.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,84.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate PaymentStage table.Paths[Merge Join Output]"
          TopLeft="677.75,446">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,88"
              Start="0,0"
              End="0,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate PaymentStage table\Insert payment data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate PaymentStage table\Get extracted payment data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate PaymentStage table\Get staged fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Populate TimeDim table">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="242,42"
          Id="Package\Populate TimeDim table\Extract dates from staged fee data"
          TopLeft="728,195" />
        <NodeLayout
          Size="237,42"
          Id="Package\Populate TimeDim table\Sort dates and remove duplicates"
          TopLeft="499,610" />
        <NodeLayout
          Size="137,42"
          Id="Package\Populate TimeDim table\Merge dates"
          TopLeft="547,512" />
        <NodeLayout
          Size="213,42"
          Id="Package\Populate TimeDim table\Insert time data to database"
          TopLeft="505,970" />
        <NodeLayout
          Size="210,42"
          Id="Package\Populate TimeDim table\Sort LicenseExpirationDates"
          TopLeft="511,385" />
        <NodeLayout
          Size="120,42"
          Id="Package\Populate TimeDim table\Multicast"
          TopLeft="431,278" />
        <NodeLayout
          Size="260,42"
          Id="Package\Populate TimeDim table\Extract dates from staged license data"
          TopLeft="367,195" />
        <NodeLayout
          Size="145,42"
          Id="Package\Populate TimeDim table\Sort FeeDates"
          TopLeft="776,384" />
        <NodeLayout
          Size="160,42"
          Id="Package\Populate TimeDim table\Derive date parts"
          TopLeft="534,857" />
        <NodeLayout
          Size="202,42"
          Id="Package\Populate TimeDim table\Sort LicenseCreationDates"
          TopLeft="271,385" />
        <EdgeLayout
          Id="Package\Populate TimeDim table.Paths[Union All Output 1]"
          TopLeft="616.5,554">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate TimeDim table.Paths[Sort Output2]"
          TopLeft="848.5,426">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-200.75,86"
              Start="0,0"
              End="-200.75,78.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.2386634844869" />
                  <mssgle:CubicBezierSegment
                    Point1="0,52.2386634844869"
                    Point2="0,56.2386634844869"
                    Point3="-4,56.2386634844869" />
                  <mssgle:LineSegment
                    End="-196.75,56.2386634844869" />
                  <mssgle:CubicBezierSegment
                    Point1="-196.75,56.2386634844869"
                    Point2="-200.75,56.2386634844869"
                    Point3="-200.75,60.2386634844869" />
                  <mssgle:LineSegment
                    End="-200.75,78.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate TimeDim table.Paths[Sort Output1]"
          TopLeft="372,427">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="211.25,85"
              Start="0,0"
              End="211.25,77.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5847255369928" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.5847255369928"
                    Point2="0,55.5847255369928"
                    Point3="4,55.5847255369928" />
                  <mssgle:LineSegment
                    End="207.25,55.5847255369928" />
                  <mssgle:CubicBezierSegment
                    Point1="207.25,55.5847255369928"
                    Point2="211.25,55.5847255369928"
                    Point3="211.25,59.5847255369928" />
                  <mssgle:LineSegment
                    End="211.25,77.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate TimeDim table.Paths[Sort Output]"
          TopLeft="615.75,427">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,85"
              Start="0,0"
              End="0,77.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,77.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate TimeDim table.Paths[OLE DB Source Output1]"
          TopLeft="848.75,237">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,147"
              Start="0,0"
              End="0,139.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,139.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate TimeDim table.Paths[OLE DB Source Output]"
          TopLeft="494,237">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate TimeDim table.Paths[Multicast Output 2]"
          TopLeft="509.666666666667,320">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="106.333333333333,65"
              Start="0,0"
              End="106.333333333333,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5131578947369" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5131578947369"
                    Point2="0,26.5131578947369"
                    Point3="4,26.5131578947369" />
                  <mssgle:LineSegment
                    End="102.333333333333,26.5131578947369" />
                  <mssgle:CubicBezierSegment
                    Point1="102.333333333333,26.5131578947369"
                    Point2="106.333333333333,26.5131578947369"
                    Point3="106.333333333333,30.5131578947369" />
                  <mssgle:LineSegment
                    End="106.333333333333,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate TimeDim table.Paths[Multicast Output 1]"
          TopLeft="472.333333333333,320">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-100.333333333333,65"
              Start="0,0"
              End="-100.333333333333,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5131578947368" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5131578947368"
                    Point2="0,26.5131578947368"
                    Point3="-4,26.5131578947368" />
                  <mssgle:LineSegment
                    End="-96.3333333333333,26.5131578947368" />
                  <mssgle:CubicBezierSegment
                    Point1="-96.3333333333333,26.5131578947368"
                    Point2="-100.333333333333,26.5131578947368"
                    Point3="-100.333333333333,30.5131578947368" />
                  <mssgle:LineSegment
                    End="-100.333333333333,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate TimeDim table.Paths[Derived Column Output]"
          TopLeft="612.75,899">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71"
              Start="0,0"
              End="0,63.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="147,42"
          Id="Package\Populate TimeDim table\Filter null date"
          TopLeft="540,726" />
        <EdgeLayout
          Id="Package\Populate TimeDim table.Paths[Sort Output3]"
          TopLeft="615.5,652">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74"
              Start="0,0"
              End="0,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate TimeDim table.Paths[Date is not null]"
          TopLeft="613.75,768">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,89"
              Start="0,0"
              End="0,81.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,81.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-33.71712890625,35.87548828125,67.4342578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate TimeDim table\Extract dates from staged fee data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate TimeDim table\Insert time data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate TimeDim table\Extract dates from staged license data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Populate TransactionTypeDim table">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="215,42"
          Id="Package\Populate TransactionTypeDim table\Extract staged payment data"
          TopLeft="567,144" />
        <NodeLayout
          Size="189,42"
          Id="Package\Populate TransactionTypeDim table\Insert data to database"
          TopLeft="579,402" />
        <NodeLayout
          Size="232,42"
          Id="Package\Populate TransactionTypeDim table\Sort data and remove duplicates"
          TopLeft="559,276" />
        <EdgeLayout
          Id="Package\Populate TransactionTypeDim table.Paths[Sort Output]"
          TopLeft="674.25,318">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate TransactionTypeDim table.Paths[OLE DB Source Output]"
          TopLeft="674.75,186">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,90"
              Start="0,0"
              End="0,82.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,82.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate TransactionTypeDim table\Extract staged payment data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate TransactionTypeDim table\Insert data to database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>